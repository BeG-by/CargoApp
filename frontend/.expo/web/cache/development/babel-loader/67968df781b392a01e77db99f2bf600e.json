{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\dispatcher\\\\invoice\\\\search-selectors\\\\person-search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport default function PersonSearch(props) {\n  var _this = this;\n\n  var prevPerson = props.prevPerson;\n  var persons = props.persons,\n      onPersonSelect = props.onPersonSelect,\n      label = props.label;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedPerson = _useState4[0],\n      setSelectedPerson = _useState4[1];\n\n  useEffect(function () {\n    if (prevPerson) {\n      setInputValue(prevPerson.name + \" \" + prevPerson.surname);\n    } else {\n      setInputValue(\"\");\n    }\n  }, [prevPerson]);\n  return React.createElement(Autocomplete, {\n    value: selectedPerson,\n    onChange: function onChange(event, newValue) {\n      setSelectedPerson(newValue);\n      onPersonSelect(newValue);\n    },\n    inputValue: inputValue,\n    onInputChange: function onInputChange(event, newInputValue) {\n      setInputValue(newInputValue);\n    },\n    getOptionLabel: function getOptionLabel(person) {\n      return person === \"\" ? \"\" : person.name + \" \" + person.surname;\n    },\n    options: persons,\n    renderInput: function renderInput(params) {\n      return React.createElement(TextField, _extends({}, params, {\n        label: label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 38\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/dispatcher/invoice/search-selectors/person-search.js"],"names":["React","useEffect","useState","TextField","Autocomplete","PersonSearch","props","prevPerson","persons","onPersonSelect","label","inputValue","setInputValue","selectedPerson","setSelectedPerson","name","surname","event","newValue","newInputValue","person","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAAA,MACjCC,UADiC,GACnBD,KADmB,CACjCC,UADiC;AAAA,MAEjCC,OAFiC,GAECF,KAFD,CAEjCE,OAFiC;AAAA,MAExBC,cAFwB,GAECH,KAFD,CAExBG,cAFwB;AAAA,MAERC,KAFQ,GAECJ,KAFD,CAERI,KAFQ;;AAAA,kBAIJR,QAAQ,CAAC,EAAD,CAJJ;AAAA;AAAA,MAIjCS,UAJiC;AAAA,MAIrBC,aAJqB;;AAAA,mBAKIV,QAAQ,CAAC,EAAD,CALZ;AAAA;AAAA,MAKjCW,cALiC;AAAA,MAKjBC,iBALiB;;AAOxCb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIM,UAAJ,EAAgB;AACZK,MAAAA,aAAa,CAAIL,UAAU,CAACQ,IAAf,SAAuBR,UAAU,CAACS,OAAlC,CAAb;AACH,KAFD,MAEK;AACDJ,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GANQ,EAMN,CAACL,UAAD,CANM,CAAT;AAQA,SACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEM,cADX;AAEI,IAAA,QAAQ,EAAE,kBAACI,KAAD,EAAQC,QAAR,EAAqB;AAC3BJ,MAAAA,iBAAiB,CAACI,QAAD,CAAjB;AACAT,MAAAA,cAAc,CAACS,QAAD,CAAd;AACH,KALL;AAMI,IAAA,UAAU,EAAEP,UANhB;AAOI,IAAA,aAAa,EAAE,uBAACM,KAAD,EAAQE,aAAR,EAA0B;AACrCP,MAAAA,aAAa,CAACO,aAAD,CAAb;AACH,KATL;AAUI,IAAA,cAAc,EAAE,wBAACC,MAAD;AAAA,aAAYA,MAAM,KAAK,EAAX,GAAgB,EAAhB,GAAwBA,MAAM,CAACL,IAA/B,SAAuCK,MAAM,CAACJ,OAA1D;AAAA,KAVpB;AAWI,IAAA,OAAO,EAAER,OAXb;AAYI,IAAA,WAAW,EAAE,qBAACa,MAAD;AAAA,aAAY,oBAAC,SAAD,eAAeA,MAAf;AAAuB,QAAA,KAAK,EAAEX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;AAAA,KAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n\r\nexport default function PersonSearch(props) {\r\n    const {prevPerson} = props;\r\n    const {persons, onPersonSelect, label} = props;\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [selectedPerson, setSelectedPerson] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (prevPerson) {\r\n            setInputValue(`${prevPerson.name} ${prevPerson.surname}`);\r\n        }else{\r\n            setInputValue(\"\");\r\n        }\r\n    }, [prevPerson])\r\n\r\n    return (\r\n        <Autocomplete\r\n            value={selectedPerson}\r\n            onChange={(event, newValue) => {\r\n                setSelectedPerson(newValue);\r\n                onPersonSelect(newValue);\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n                setInputValue(newInputValue);\r\n            }}\r\n            getOptionLabel={(person) => person === \"\" ? \"\" : `${person.name} ${person.surname}`}\r\n            options={persons}\r\n            renderInput={(params) => <TextField {...params} label={label}/>}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}