{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\security\\\\private-route.js\";\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { NoRights } from \"../components/pages/error-page/error-403\";\nimport { NotAuthorized } from \"../components/pages/error-page/error-401\";\nexport var NOT_AUTH = \"UNKNOWN\";\nexport var ROLE_ADMIN = \"ADMIN\";\nexport var ROLE_SYSADMIN = \"SYSADMIN\";\nexport var ROLE_DISPATCHER = \"DISPATCHER\";\nexport var ROLE_MANAGER = \"MANAGER\";\nexport var ROLE_DRIVER = \"DRIVER\";\nexport var ROLE_OWNER = \"OWNER\";\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var role = _ref.role,\n      Component = _ref.component,\n      _ref$hasAnyAuthoritie = _ref.hasAnyAuthorities,\n      hasAnyAuthorities = _ref$hasAnyAuthoritie === void 0 ? [] : _ref$hasAnyAuthoritie,\n      rest = _objectWithoutProperties(_ref, [\"role\", \"component\", \"hasAnyAuthorities\"]);\n\n  var isAuth = localStorage.getItem(\"authorization\") !== null;\n\n  if (isAuth) {\n    return isAuthorize(role, hasAnyAuthorities) ? React.createElement(Route, _extends({}, rest, {\n      component: Component,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    })) : React.createElement(NoRights, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(NotAuthorized, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n};\nexport var isAuthorize = function isAuthorize(role, authorities) {\n  if (authorities.length === 0) {\n    return true;\n  }\n\n  return authorities.includes(role);\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    role: store.user.roles[0]\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/security/private-route.js"],"names":["React","connect","Route","NoRights","NotAuthorized","NOT_AUTH","ROLE_ADMIN","ROLE_SYSADMIN","ROLE_DISPATCHER","ROLE_MANAGER","ROLE_DRIVER","ROLE_OWNER","PrivateRoute","role","Component","component","hasAnyAuthorities","rest","isAuth","localStorage","getItem","isAuthorize","authorities","length","includes","mapStateToProps","store","user","roles"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,QAAR;AACA,SAAQC,aAAR;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAjB;AACP,OAAO,IAAMC,UAAU,GAAG,OAAnB;AACP,OAAO,IAAMC,aAAa,GAAG,UAAtB;AACP,OAAO,IAAMC,eAAe,GAAG,YAAxB;AACP,OAAO,IAAMC,YAAY,GAAG,SAArB;AACP,OAAO,IAAMC,WAAW,GAAG,QAApB;AACP,OAAO,IAAMC,UAAU,GAAG,OAAnB;AAGP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmE;AAAA,MAAjEC,IAAiE,QAAjEA,IAAiE;AAAA,MAAhDC,SAAgD,QAA3DC,SAA2D;AAAA,mCAArCC,iBAAqC;AAAA,MAArCA,iBAAqC,sCAAjB,EAAiB;AAAA,MAAVC,IAAU;;AAE3F,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,MAA0C,IAAzD;;AAEA,MAAIF,MAAJ,EAAY;AACR,WAAOG,WAAW,CAACR,IAAD,EAAOG,iBAAP,CAAX,GACH,oBAAC,KAAD,eAAWC,IAAX;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADG,GAEH,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAGH;;AAED,SAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEH,CAZM;AAeP,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACR,IAAD,EAAOS,WAAP,EAAuB;AAC9C,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,WAAO,IAAP;AACH;;AACD,SAAOD,WAAW,CAACE,QAAZ,CAAqBX,IAArB,CAAP;AACH,CALM;;AAQP,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHb,IAAAA,IAAI,EAAEa,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB;AADH,GAAP;AAGH,CAJD;;AAOA,eAAe3B,OAAO,CAACwB,eAAD,CAAP,CAAyBb,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {NoRights} from \"../components/pages/error-page/error-403\";\r\nimport {NotAuthorized} from \"../components/pages/error-page/error-401\";\r\n\r\nexport const NOT_AUTH = \"UNKNOWN\";\r\nexport const ROLE_ADMIN = \"ADMIN\";\r\nexport const ROLE_SYSADMIN = \"SYSADMIN\";\r\nexport const ROLE_DISPATCHER = \"DISPATCHER\";\r\nexport const ROLE_MANAGER = \"MANAGER\";\r\nexport const ROLE_DRIVER = \"DRIVER\";\r\nexport const ROLE_OWNER = \"OWNER\";\r\n\r\n\r\nexport const PrivateRoute = ({role, component: Component, hasAnyAuthorities = [], ...rest}) => {\r\n\r\n    const isAuth = localStorage.getItem(\"authorization\") !== null;\r\n\r\n    if (isAuth) {\r\n        return isAuthorize(role, hasAnyAuthorities) ?\r\n            <Route {...rest} component={Component}/> :\r\n            <NoRights/>\r\n    }\r\n\r\n    return <NotAuthorized/>;\r\n\r\n};\r\n\r\n\r\nexport const isAuthorize = (role, authorities) => {\r\n    if (authorities.length === 0) {\r\n        return true;\r\n    }\r\n    return authorities.includes(role);\r\n};\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        role: store.user.roles[0]\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}