{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\driver\\\\waybill-info.js\";\n\nimport React, { useEffect } from \"react\";\nimport WaybillInfoContent from \"./waybill-info-content\";\nimport { handleRequestError, makeRequest, POINT_URL, WAYBILL_URL } from \"../../parts/util/request-util\";\nimport ActDialog from \"./act-dialog\";\nimport { DialogWindow } from \"../../parts/dialogs/dialog\";\nimport { FillActDialog } from \"../../parts/dialogs/fill-act\";\nimport { CloseInvoice } from \"../../parts/dialogs/close-invoice\";\nimport { convertPointsFromBackendApi } from \"../../../map/utils\";\nexport var WaybillInfo = function WaybillInfo(props) {\n  var _React$useState = React.useState({\n    id: 0,\n    departureDate: \"\",\n    arrivalDate: \"\",\n    points: [],\n    invoice: {},\n    auto: {\n      id: 0,\n      mark: \"\",\n      type: \"\"\n    },\n    driver: {\n      id: 0,\n      name: \"\",\n      surname: \"\"\n    },\n    shipper: {\n      address: {}\n    },\n    checkingUser: {},\n    consignee: {\n      address: {}\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      waybill = _React$useState2[0],\n      setWaybill = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      actFillDialogOpen = _React$useState4[0],\n      setActFillDialogOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      invoiceCloseDialogOpen = _React$useState6[0],\n      setInvoiceCloseDialogOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      actDialogOpen = _React$useState8[0],\n      setActDialogOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      form = _React$useState10[0],\n      setForm = _React$useState10[1];\n\n  var handleActFormOpen = function handleActFormOpen() {\n    setActFillDialogOpen(false);\n    setActDialogOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setActFillDialogOpen(false);\n    setInvoiceCloseDialogOpen(false);\n    setActDialogOpen(false);\n  };\n\n  var handleCloseInvoice = function handleCloseInvoice() {\n    var form = React.createElement(CloseInvoice, {\n      onClose: handleClose,\n      onCloseInvoice: handleClose,\n      invoice: waybill.invoice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }\n    });\n    setForm(form);\n  };\n\n  var handleActFill = function handleActFill() {\n    return _regeneratorRuntime.async(function handleActFill$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setForm(FillActDialog(handleActFormOpen, handleCloseInvoice));\n            setActFillDialogOpen(true);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updated = {};\n\n  function fetchWaybill(cleanupFunction) {\n    var response, selected;\n    return _regeneratorRuntime.async(function fetchWaybill$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(makeRequest(\"GET\", WAYBILL_URL + \"/\" + props.waybillId));\n\n          case 2:\n            response = _context2.sent;\n            selected = updated = response.data;\n\n            if (!cleanupFunction) {\n              setWaybill({\n                id: selected.id,\n                departureDate: selected.departureDate,\n                arrivalDate: selected.arrivalDate,\n                points: selected.points,\n                invoice: selected.invoice,\n                auto: {\n                  id: selected.auto.id,\n                  mark: selected.auto.mark,\n                  type: selected.auto.autoType\n                },\n                driver: selected.invoice.driver,\n                checkingUser: selected.invoice.checkingUser,\n                shipper: selected.invoice.shipper,\n                consignee: selected.invoice.consignee\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    var cleanupFunction = false;\n    fetchWaybill(cleanupFunction).catch(function (err) {\n      setWaybill({\n        id: 0,\n        departureDate: \"\",\n        arrivalDate: \"\",\n        points: [],\n        invoice: {},\n        auto: {\n          id: 0,\n          mark: \"\",\n          type: \"\"\n        },\n        driver: {\n          id: 0,\n          name: \"\",\n          surname: \"\"\n        },\n        shipper: {\n          address: {}\n        },\n        consignee: {\n          address: {}\n        },\n        checkingUser: {}\n      });\n      handleRequestError(err, alert);\n    });\n    return function () {\n      return cleanupFunction = true;\n    };\n  }, []);\n\n  var handleMarkerPass = function handleMarkerPass(point) {\n    var checkPassage;\n    return _regeneratorRuntime.async(function handleMarkerPass$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            point.id = point.index;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(makeRequest(\"PUT\", POINT_URL, point));\n\n          case 3:\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(fetchWaybill(false));\n\n          case 5:\n            checkPassage = true;\n\n            if (!updated.points) {\n              checkPassage = false;\n            } else {\n              updated.points.forEach(function (p) {\n                if (!p.passed) {\n                  checkPassage = false;\n                }\n              });\n            }\n\n            if (!checkPassage) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(handleActFill(waybill));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var content = React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, React.createElement(WaybillInfoContent, {\n    waybill: waybill,\n    action: fetchWaybill,\n    onUpdatePoint: handleMarkerPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }));\n  return React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, content, React.createElement(ActDialog, {\n    waybill: waybill,\n    open: actDialogOpen,\n    onClose: function onClose() {\n      setActDialogOpen(false);\n    },\n    onSave: props.onSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Confirmation\",\n    handleClose: handleCloseInvoice,\n    openDialog: actFillDialogOpen,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Confirmation\",\n    handleClose: handleClose,\n    openDialog: invoiceCloseDialogOpen,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/driver/waybill-info.js"],"names":["React","useEffect","WaybillInfoContent","handleRequestError","makeRequest","POINT_URL","WAYBILL_URL","ActDialog","DialogWindow","FillActDialog","CloseInvoice","convertPointsFromBackendApi","WaybillInfo","props","useState","id","departureDate","arrivalDate","points","invoice","auto","mark","type","driver","name","surname","shipper","address","checkingUser","consignee","waybill","setWaybill","actFillDialogOpen","setActFillDialogOpen","invoiceCloseDialogOpen","setInvoiceCloseDialogOpen","actDialogOpen","setActDialogOpen","form","setForm","handleActFormOpen","handleClose","handleCloseInvoice","handleActFill","updated","fetchWaybill","cleanupFunction","waybillId","response","selected","data","autoType","catch","err","alert","handleMarkerPass","point","index","checkPassage","forEach","p","passed","content","onSave"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP;AACA,SAAQC,kBAAR,EAA4BC,WAA5B,EAAyCC,SAAzC,EAAoDC,WAApD;AACA,OAAOC,SAAP;AACA,SAAQC,YAAR;AACA,SAAQC,aAAR;AACA,SAAQC,YAAR;AACA,SAAQC,2BAAR;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,wBACJb,KAAK,CAACc,QAAN,CAAe;AACzCC,IAAAA,EAAE,EAAE,CADqC;AAEzCC,IAAAA,aAAa,EAAE,EAF0B;AAGzCC,IAAAA,WAAW,EAAE,EAH4B;AAIzCC,IAAAA,MAAM,EAAE,EAJiC;AAKzCC,IAAAA,OAAO,EAAE,EALgC;AAMzCC,IAAAA,IAAI,EAAE;AAACL,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE,EAAd;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KANmC;AAOzCC,IAAAA,MAAM,EAAE;AAACR,MAAAA,EAAE,EAAE,CAAL;AAAQS,MAAAA,IAAI,EAAE,EAAd;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAPiC;AAQzCC,IAAAA,OAAO,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KARgC;AASzCC,IAAAA,YAAY,EAAE,EAT2B;AAUzCC,IAAAA,SAAS,EAAE;AAACF,MAAAA,OAAO,EAAE;AAAV;AAV8B,GAAf,CADI;AAAA;AAAA,MAC3BG,OAD2B;AAAA,MAClBC,UADkB;;AAAA,yBAagB/B,KAAK,CAACc,QAAN,CAAe,KAAf,CAbhB;AAAA;AAAA,MAa3BkB,iBAb2B;AAAA,MAaRC,oBAbQ;;AAAA,yBAc0BjC,KAAK,CAACc,QAAN,CAAe,KAAf,CAd1B;AAAA;AAAA,MAc3BoB,sBAd2B;AAAA,MAcHC,yBAdG;;AAAA,yBAeQnC,KAAK,CAACc,QAAN,CAAe,KAAf,CAfR;AAAA;AAAA,MAe3BsB,aAf2B;AAAA,MAeZC,gBAfY;;AAAA,yBAgBVrC,KAAK,CAACc,QAAN,CAAe,IAAf,CAhBU;AAAA;AAAA,MAgB3BwB,IAhB2B;AAAA,MAgBrBC,OAhBqB;;AAkBlC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BP,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAI,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAHD;;AAKA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBR,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAJD;;AAMA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,QAAMJ,IAAI,GAAG,oBAAC,YAAD;AACT,MAAA,OAAO,EAAEG,WADA;AAET,MAAA,cAAc,EAAEA,WAFP;AAGT,MAAA,OAAO,EAAEX,OAAO,CAACX,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AAIAoB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAND;;AAQA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAClBJ,YAAAA,OAAO,CAAC9B,aAAa,CAAC+B,iBAAD,EAAoBE,kBAApB,CAAd,CAAP;AACAT,YAAAA,oBAAoB,CAAC,IAAD,CAApB;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAMA,MAAIW,OAAO,GAAG,EAAd;;AAEA,WAAeC,YAAf,CAA4BC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyB1C,WAAW,CAAC,KAAD,EAAQE,WAAW,GAAG,GAAd,GAAoBO,KAAK,CAACkC,SAAlC,CADpC;;AAAA;AACQC,YAAAA,QADR;AAEQC,YAAAA,QAFR,GAEmBL,OAAO,GAAGI,QAAQ,CAACE,IAFtC;;AAGI,gBAAI,CAACJ,eAAL,EAAsB;AAClBf,cAAAA,UAAU,CAAC;AACPhB,gBAAAA,EAAE,EAAEkC,QAAQ,CAAClC,EADN;AAEPC,gBAAAA,aAAa,EAAEiC,QAAQ,CAACjC,aAFjB;AAGPC,gBAAAA,WAAW,EAAEgC,QAAQ,CAAChC,WAHf;AAIPC,gBAAAA,MAAM,EAAE+B,QAAQ,CAAC/B,MAJV;AAKPC,gBAAAA,OAAO,EAAE8B,QAAQ,CAAC9B,OALX;AAMPC,gBAAAA,IAAI,EAAE;AAACL,kBAAAA,EAAE,EAAEkC,QAAQ,CAAC7B,IAAT,CAAcL,EAAnB;AAAuBM,kBAAAA,IAAI,EAAE4B,QAAQ,CAAC7B,IAAT,CAAcC,IAA3C;AAAiDC,kBAAAA,IAAI,EAAE2B,QAAQ,CAAC7B,IAAT,CAAc+B;AAArE,iBANC;AAOP5B,gBAAAA,MAAM,EAAE0B,QAAQ,CAAC9B,OAAT,CAAiBI,MAPlB;AAQPK,gBAAAA,YAAY,EAAEqB,QAAQ,CAAC9B,OAAT,CAAiBS,YARxB;AASPF,gBAAAA,OAAO,EAAEuB,QAAQ,CAAC9B,OAAT,CAAiBO,OATnB;AAUPG,gBAAAA,SAAS,EAAEoB,QAAQ,CAAC9B,OAAT,CAAiBU;AAVrB,eAAD,CAAV;AAYH;;AAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBA5B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI6C,eAAe,GAAG,KAAtB;AACAD,IAAAA,YAAY,CAACC,eAAD,CAAZ,CACKM,KADL,CACW,UAACC,GAAD,EAAS;AACZtB,MAAAA,UAAU,CAAC;AACPhB,QAAAA,EAAE,EAAE,CADG;AAEPC,QAAAA,aAAa,EAAE,EAFR;AAGPC,QAAAA,WAAW,EAAE,EAHN;AAIPC,QAAAA,MAAM,EAAE,EAJD;AAKPC,QAAAA,OAAO,EAAE,EALF;AAMPC,QAAAA,IAAI,EAAE;AAACL,UAAAA,EAAE,EAAE,CAAL;AAAQM,UAAAA,IAAI,EAAE,EAAd;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SANC;AAOPC,QAAAA,MAAM,EAAE;AAACR,UAAAA,EAAE,EAAE,CAAL;AAAQS,UAAAA,IAAI,EAAE,EAAd;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAPD;AAQPC,QAAAA,OAAO,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SARF;AASPE,QAAAA,SAAS,EAAE;AAACF,UAAAA,OAAO,EAAE;AAAV,SATJ;AAUPC,QAAAA,YAAY,EAAE;AAVP,OAAD,CAAV;AAYAzB,MAAAA,kBAAkB,CAACkD,GAAD,EAAMC,KAAN,CAAlB;AACH,KAfL;AAgBA,WAAO;AAAA,aAAMR,eAAe,GAAG,IAAxB;AAAA,KAAP;AACH,GAnBQ,EAmBN,EAnBM,CAAT;;AAsBA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBA,YAAAA,KAAK,CAACzC,EAAN,GAAWyC,KAAK,CAACC,KAAjB;AADqB;AAAA,6CAEfrD,WAAW,CAAC,KAAD,EAAQC,SAAR,EAAmBmD,KAAnB,CAFI;;AAAA;AAAA;AAAA,6CAGfX,YAAY,CAAC,KAAD,CAHG;;AAAA;AAIjBa,YAAAA,YAJiB,GAIF,IAJE;;AAKrB,gBAAI,CAACd,OAAO,CAAC1B,MAAb,EAAqB;AACjBwC,cAAAA,YAAY,GAAG,KAAf;AACH,aAFD,MAEO;AACHd,cAAAA,OAAO,CAAC1B,MAAR,CAAeyC,OAAf,CAAuB,UAAAC,CAAC,EAAI;AACxB,oBAAI,CAACA,CAAC,CAACC,MAAP,EAAe;AACXH,kBAAAA,YAAY,GAAG,KAAf;AACH;AACJ,eAJD;AAKH;;AAboB,iBAcjBA,YAdiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAeXf,aAAa,CAACb,OAAD,CAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAmBA,MAAMgC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ,oBAAC,kBAAD;AACI,IAAA,OAAO,EAAEhC,OADb;AAEI,IAAA,MAAM,EAAEe,YAFZ;AAGI,IAAA,aAAa,EAAEU,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CAAhB;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,OADL,EAGI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEhC,OADb;AAEI,IAAA,IAAI,EAAEM,aAFV;AAGI,IAAA,OAAO,EAAE,mBAAM;AACXC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KALL;AAMI,IAAA,MAAM,EAAExB,KAAK,CAACkD,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYI,oBAAC,YAAD;AACI,IAAA,WAAW,EAAC,cADhB;AAEI,IAAA,WAAW,EAAErB,kBAFjB;AAGI,IAAA,UAAU,EAAEV,iBAHhB;AAII,IAAA,IAAI,EAAEM,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAmBI,oBAAC,YAAD;AACI,IAAA,WAAW,EAAC,cADhB;AAEI,IAAA,WAAW,EAAEG,WAFjB;AAGI,IAAA,UAAU,EAAEP,sBAHhB;AAII,IAAA,IAAI,EAAEI,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AA4BH,CA7IM","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport WaybillInfoContent from \"./waybill-info-content\";\r\nimport {handleRequestError, makeRequest, POINT_URL, WAYBILL_URL} from \"../../parts/util/request-util\";\r\nimport ActDialog from \"./act-dialog\";\r\nimport {DialogWindow} from \"../../parts/dialogs/dialog\";\r\nimport {FillActDialog} from \"../../parts/dialogs/fill-act\";\r\nimport {CloseInvoice} from \"../../parts/dialogs/close-invoice\";\r\nimport {convertPointsFromBackendApi} from \"../../../map/utils\";\r\n\r\nexport const WaybillInfo = (props) => {\r\n    const [waybill, setWaybill] = React.useState({\r\n        id: 0,\r\n        departureDate: \"\",\r\n        arrivalDate: \"\",\r\n        points: [],\r\n        invoice: {},\r\n        auto: {id: 0, mark: \"\", type: \"\"},\r\n        driver: {id: 0, name: \"\", surname: \"\"},\r\n        shipper: {address: {}},\r\n        checkingUser: {},\r\n        consignee: {address: {}},\r\n    });\r\n    const [actFillDialogOpen, setActFillDialogOpen] = React.useState(false);\r\n    const [invoiceCloseDialogOpen, setInvoiceCloseDialogOpen] = React.useState(false);\r\n    const [actDialogOpen, setActDialogOpen] = React.useState(false);\r\n    const [form, setForm] = React.useState(null);\r\n\r\n    const handleActFormOpen = () => {\r\n        setActFillDialogOpen(false);\r\n        setActDialogOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setActFillDialogOpen(false);\r\n        setInvoiceCloseDialogOpen(false);\r\n        setActDialogOpen(false);\r\n    };\r\n\r\n    const handleCloseInvoice = () => {\r\n        const form = <CloseInvoice\r\n            onClose={handleClose}\r\n            onCloseInvoice={handleClose}\r\n            invoice={waybill.invoice}/>\r\n        setForm(form);\r\n    }\r\n\r\n    const handleActFill = async () => {\r\n        setForm(FillActDialog(handleActFormOpen, handleCloseInvoice));\r\n        setActFillDialogOpen(true);\r\n    }\r\n\r\n\r\n    let updated = {};\r\n\r\n    async function fetchWaybill(cleanupFunction) {\r\n        let response = await makeRequest(\"GET\", WAYBILL_URL + \"/\" + props.waybillId);\r\n        let selected = updated = response.data;\r\n        if (!cleanupFunction) {\r\n            setWaybill({\r\n                id: selected.id,\r\n                departureDate: selected.departureDate,\r\n                arrivalDate: selected.arrivalDate,\r\n                points: selected.points,\r\n                invoice: selected.invoice,\r\n                auto: {id: selected.auto.id, mark: selected.auto.mark, type: selected.auto.autoType},\r\n                driver: selected.invoice.driver,\r\n                checkingUser: selected.invoice.checkingUser,\r\n                shipper: selected.invoice.shipper,\r\n                consignee: selected.invoice.consignee,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let cleanupFunction = false;\r\n        fetchWaybill(cleanupFunction)\r\n            .catch((err) => {\r\n                setWaybill({\r\n                    id: 0,\r\n                    departureDate: \"\",\r\n                    arrivalDate: \"\",\r\n                    points: [],\r\n                    invoice: {},\r\n                    auto: {id: 0, mark: \"\", type: \"\"},\r\n                    driver: {id: 0, name: \"\", surname: \"\"},\r\n                    shipper: {address: {}},\r\n                    consignee: {address: {}},\r\n                    checkingUser: {},\r\n                });\r\n                handleRequestError(err, alert); //TODO toast\r\n            });\r\n        return () => cleanupFunction = true;\r\n    }, []);\r\n\r\n\r\n    const handleMarkerPass = async (point) => {\r\n        point.id = point.index;\r\n        await makeRequest(\"PUT\", POINT_URL, point);\r\n        await fetchWaybill(false);\r\n        let checkPassage = true;\r\n        if (!updated.points) {\r\n            checkPassage = false;\r\n        } else {\r\n            updated.points.forEach(p => {\r\n                if (!p.passed) {\r\n                    checkPassage = false;\r\n                }\r\n            });\r\n        }\r\n        if (checkPassage) {\r\n            await handleActFill(waybill);\r\n        }\r\n    }\r\n\r\n    const content = <div>\r\n        <WaybillInfoContent\r\n            waybill={waybill}\r\n            action={fetchWaybill}\r\n            onUpdatePoint={handleMarkerPass}\r\n        />\r\n    </div>\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n\r\n            <ActDialog\r\n                waybill={waybill}\r\n                open={actDialogOpen}\r\n                onClose={() => {\r\n                    setActDialogOpen(false);\r\n                }}\r\n                onSave={props.onSave}\r\n            />\r\n\r\n            <DialogWindow\r\n                dialogTitle=\"Confirmation\"\r\n                handleClose={handleCloseInvoice}\r\n                openDialog={actFillDialogOpen}\r\n                form={form}\r\n            />\r\n\r\n            <DialogWindow\r\n                dialogTitle=\"Confirmation\"\r\n                handleClose={handleClose}\r\n                openDialog={invoiceCloseDialogOpen}\r\n                form={form}\r\n            />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}