{"ast":null,"code":"import * as Yup from \"yup\";\nimport moment from \"moment\";\nexport var WaybillFormValidation = Yup.object({\n  arrivalDate: Yup.string().test('test1', 'Format must be yyyy-MM-DD', function (value) {\n    return moment(value, \"yyyy-MM-DD\", true).isValid();\n  }).test('test2', 'Date must be equal or greater than today', function (value) {\n    var date = new Date();\n    var initDate = date.toISOString().substring(0, date.toISOString().indexOf(\"T\"));\n    return moment(value, \"yyyy-MM-DD\").isSameOrAfter(moment(initDate, \"yyyy-MM-DD\"));\n  }),\n  departureDate: Yup.string().test('test3', 'Date must be equal or greater than today', function (value) {\n    var date = new Date();\n    var initDate = date.toISOString().substring(0, date.toISOString().indexOf(\"T\"));\n    return moment(value, \"yyyy-MM-DD\").isSameOrAfter(moment(initDate, \"yyyy-MM-DD\"));\n  }).test('test4', 'Format must be yyyy-MM-DD', function (value) {\n    return moment(value, \"yyyy-MM-DD\", true).isValid();\n  }).test('test5', 'Departure date must be before arrival date', function (value) {\n    var arrivalDate = this.parent.arrivalDate;\n    return moment(value, \"yyyy-MM-DD\").isSameOrBefore(moment(arrivalDate, \"yyyy-MM-DD\"));\n  })\n});\nexport var PointFormValidation = Yup.object({\n  place: Yup.string().required(\"Place is required\").max(255, \"Max length must be lesser than 255 symbols\")\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/parts/validation/waybill-form-validation.js"],"names":["Yup","moment","WaybillFormValidation","object","arrivalDate","string","test","value","isValid","date","Date","initDate","toISOString","substring","indexOf","isSameOrAfter","departureDate","parent","isSameOrBefore","PointFormValidation","place","required","max"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,qBAAqB,GAAGF,GAAG,CAACG,MAAJ,CAAW;AAC5CC,EAAAA,WAAW,EAAEJ,GAAG,CAACK,MAAJ,GACRC,IADQ,CAEL,OAFK,EAGL,2BAHK,EAIL,UAAUC,KAAV,EAAiB;AACb,WAAON,MAAM,CAACM,KAAD,EAAQ,YAAR,EAAsB,IAAtB,CAAN,CAAkCC,OAAlC,EAAP;AACH,GANI,EAQRF,IARQ,CASL,OATK,EAUL,0CAVK,EAWL,UAAUC,KAAV,EAAiB;AACb,QAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,WAAL,GAAmBC,SAAnB,CAA6B,CAA7B,EAAgCJ,IAAI,CAACG,WAAL,GAAmBE,OAAnB,CAA2B,GAA3B,CAAhC,CAAf;AACA,WAAOb,MAAM,CAACM,KAAD,EAAQ,YAAR,CAAN,CAA4BQ,aAA5B,CAA0Cd,MAAM,CAACU,QAAD,EAAW,YAAX,CAAhD,CAAP;AACH,GAfI,CAD+B;AAkB5CK,EAAAA,aAAa,EAAEhB,GAAG,CAACK,MAAJ,GACVC,IADU,CAEP,OAFO,EAGP,0CAHO,EAIP,UAAUC,KAAV,EAAiB;AACb,QAAIE,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,WAAL,GAAmBC,SAAnB,CAA6B,CAA7B,EAAgCJ,IAAI,CAACG,WAAL,GAAmBE,OAAnB,CAA2B,GAA3B,CAAhC,CAAf;AACA,WAAOb,MAAM,CAACM,KAAD,EAAQ,YAAR,CAAN,CAA4BQ,aAA5B,CAA0Cd,MAAM,CAACU,QAAD,EAAW,YAAX,CAAhD,CAAP;AACH,GARM,EAUVL,IAVU,CAWP,OAXO,EAYP,2BAZO,EAaP,UAAUC,KAAV,EAAiB;AACb,WAAON,MAAM,CAACM,KAAD,EAAQ,YAAR,EAAsB,IAAtB,CAAN,CAAkCC,OAAlC,EAAP;AACH,GAfM,EAiBVF,IAjBU,CAkBP,OAlBO,EAmBP,4CAnBO,EAoBP,UAAUC,KAAV,EAAiB;AAAA,QACRH,WADQ,GACO,KAAKa,MADZ,CACRb,WADQ;AAEb,WAAOH,MAAM,CAACM,KAAD,EAAQ,YAAR,CAAN,CAA4BW,cAA5B,CAA2CjB,MAAM,CAACG,WAAD,EAAc,YAAd,CAAjD,CAAP;AACH,GAvBM;AAlB6B,CAAX,CAA9B;AA6CP,OAAO,IAAMe,mBAAmB,GAAGnB,GAAG,CAACG,MAAJ,CAAW;AAC1CiB,EAAAA,KAAK,EAAEpB,GAAG,CAACK,MAAJ,GACFgB,QADE,CACO,mBADP,EAEFC,GAFE,CAEE,GAFF,EAEO,4CAFP;AADmC,CAAX,CAA5B","sourcesContent":["import * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\n\r\nexport const WaybillFormValidation = Yup.object({\r\n    arrivalDate: Yup.string()\r\n        .test(\r\n            'test1',\r\n            'Format must be yyyy-MM-DD',\r\n            function (value) {\r\n                return moment(value, \"yyyy-MM-DD\", true).isValid()\r\n            }\r\n        )\r\n        .test(\r\n            'test2',\r\n            'Date must be equal or greater than today',\r\n            function (value) {\r\n                let date = new Date();\r\n                let initDate = date.toISOString().substring(0, date.toISOString().indexOf(\"T\"));\r\n                return moment(value, \"yyyy-MM-DD\").isSameOrAfter(moment(initDate, \"yyyy-MM-DD\"))\r\n            }\r\n        ),\r\n    departureDate: Yup.string()\r\n        .test(\r\n            'test3',\r\n            'Date must be equal or greater than today',\r\n            function (value) {\r\n                let date = new Date();\r\n                let initDate = date.toISOString().substring(0, date.toISOString().indexOf(\"T\"));\r\n                return moment(value, \"yyyy-MM-DD\").isSameOrAfter(moment(initDate, \"yyyy-MM-DD\"))\r\n            }\r\n        )\r\n        .test(\r\n            'test4',\r\n            'Format must be yyyy-MM-DD',\r\n            function (value) {\r\n                return moment(value, \"yyyy-MM-DD\", true).isValid()\r\n            }\r\n        )\r\n        .test(\r\n            'test5',\r\n            'Departure date must be before arrival date',\r\n            function (value) {\r\n                let {arrivalDate} = this.parent;\r\n                return moment(value, \"yyyy-MM-DD\").isSameOrBefore(moment(arrivalDate, \"yyyy-MM-DD\"))\r\n            }\r\n        ),\r\n});\r\n\r\nexport const PointFormValidation = Yup.object({\r\n    place: Yup.string()\r\n        .required(\"Place is required\")\r\n        .max(255, \"Max length must be lesser than 255 symbols\")\r\n});"]},"metadata":{},"sourceType":"module"}