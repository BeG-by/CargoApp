{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\sysadmin\\\\clients-table.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport ClientDialog from \"./client-dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport useToast from \"../../parts/toast-notification/useToast\";\nimport fetchFieldFromObject, { getSimplePropertiesFromObject } from \"../../parts/util/function-util\";\nimport { CLIENTS_URL, handleRequestError, makeRequest } from \"../../parts/util/request-util\";\nimport { Typography } from \"@material-ui/core\";\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ConfirmDeletingDialog from \"../admin/slide-dialog\";\nimport { connect } from \"react-redux\";\nimport EnhancedTableHead, { getComparator, stableSort } from \"../../parts/util/sorted-table-head\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nvar MIN_WIDTH = 170;\nvar ALIGN = \"left\";\nvar FONT_SIZE = 18;\nvar columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"type\",\n  label: \"Company type\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"payerAccountNumber\",\n  label: \"Payer account number\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"country\",\n  label: \"Country\",\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"city\",\n  label: \"City\",\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"street\",\n  label: \"Street\",\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"house\",\n  label: \"House\",\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"registrationDate\",\n  label: \"Date of registration\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"edit_delete\",\n  label: \"\",\n  align: \"right\"\n}];\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    role: store.user.roles[0]\n  };\n};\n\nvar REMOVE_TITLE = \"Do you want to remove the client ?\";\nexport var ClientsTable = connect(mapStateToProps)(function (props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clients = _useState6[0],\n      setClients = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      clientDialogOpen = _useState8[0],\n      setClientDialogOpen = _useState8[1];\n\n  var _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedClientCompanyId = _useState10[0],\n      setSelectedClientCompanyId = _useState10[1];\n\n  var _useToast = useToast(),\n      _useToast2 = _slicedToArray(_useToast, 2),\n      NotificationToast = _useToast2[0],\n      openNotificationToast = _useToast2[1];\n\n  var _useState11 = useState(\"asc\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      order = _useState12[0],\n      setOrder = _useState12[1];\n\n  var _useState13 = useState(\"name\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      orderBy = _useState14[0],\n      setOrderBy = _useState14[1];\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  function updateTable() {\n    var response;\n    return _regeneratorRuntime.async(function updateTable$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(makeRequest(\"GET\", CLIENTS_URL));\n\n          case 3:\n            response = _context.sent;\n            setClients(response.data.map(function (client) {\n              return getSimplePropertiesFromObject(client);\n            }));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            handleRequestError(_context.t0, openNotificationToast);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  useEffect(function () {\n    updateTable();\n  }, []);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleTableRowClick = function handleTableRowClick(client) {\n    setSelectedClientCompanyId(client.id);\n    setClientDialogOpen(true);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var handleClientDelete = function handleClientDelete(clientId) {\n    return _regeneratorRuntime.async(function handleClientDelete$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(makeRequest(\"DELETE\", CLIENTS_URL + (\"/\" + clientId)));\n\n          case 3:\n            openNotificationToast(\"Client has been deleted\", \"success\");\n            updateTable();\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            handleRequestError(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var handleCreateNewClientCLick = function handleCreateNewClientCLick() {\n    setClientDialogOpen(true);\n  };\n\n  return React.createElement(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    className: \"table-paper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(TableContainer, {\n    className: \"table-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    className: \"table-header-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    display: \"block\",\n    gutterBottom: true,\n    style: {\n      fontSize: 26,\n      marginLeft: 15,\n      marginTop: 15,\n      textDecoration: \"underline\"\n    },\n    className: \"table-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, React.createElement(LibraryBooksIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }), \"Clients\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleCreateNewClientCLick,\n    className: \"add-table-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, React.createElement(LibraryAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }))), React.createElement(Table, {\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, React.createElement(EnhancedTableHead, {\n    columns: columns,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    checkBoxes: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, stableSort(clients, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (client) {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: client.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, columns.map(function (column) {\n      var value = fetchFieldFromObject(client, column.id);\n\n      if (value === \"SP\") {\n        value = \"Sole proprietorship\";\n      } else if (value === \"JP\") {\n        value = \"Juridical person\";\n      }\n\n      if (column.id !== \"edit_delete\") return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 57\n        }\n      }, value);\n    }), React.createElement(TableCell, {\n      key: \"edit_delete\",\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 45\n      }\n    }, React.createElement(\"div\", {\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 49\n      }\n    }, React.createElement(Tooltip, {\n      title: \"Click to edit client\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 53\n      }\n    }, React.createElement(Button, {\n      className: \"menu-table-btn\",\n      color: \"primary\",\n      startIcon: React.createElement(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 72\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleTableRowClick(client);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 57\n      }\n    })), React.createElement(ConfirmDeletingDialog, {\n      id: client.id,\n      onDelete: handleClientDelete,\n      toolTitle: \"Click to delete client\",\n      text: REMOVE_TITLE,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 53\n      }\n    }))));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: clients.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), React.createElement(ClientDialog, {\n    open: clientDialogOpen,\n    clientCompanyId: selectedClientCompanyId,\n    onDelete: function onDelete() {\n      setClientDialogOpen(false);\n      setSelectedClientCompanyId(-1);\n      updateTable();\n    },\n    onClose: function onClose() {\n      setClientDialogOpen(false);\n      setSelectedClientCompanyId(-1);\n      updateTable();\n    },\n    onSubmit: function onSubmit() {\n      setClientDialogOpen(false);\n      setSelectedClientCompanyId(-1);\n      updateTable();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  })), NotificationToast);\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/sysadmin/clients-table.js"],"names":["React","useEffect","useState","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","ClientDialog","Button","useToast","fetchFieldFromObject","getSimplePropertiesFromObject","CLIENTS_URL","handleRequestError","makeRequest","Typography","LibraryAddRoundedIcon","EditIcon","ConfirmDeletingDialog","connect","EnhancedTableHead","getComparator","stableSort","Tooltip","LibraryBooksIcon","MIN_WIDTH","ALIGN","FONT_SIZE","columns","id","label","minWidth","align","fontSize","mapStateToProps","store","role","user","roles","REMOVE_TITLE","ClientsTable","props","page","setPage","rowsPerPage","setRowsPerPage","clients","setClients","clientDialogOpen","setClientDialogOpen","selectedClientCompanyId","setSelectedClientCompanyId","NotificationToast","openNotificationToast","order","setOrder","orderBy","setOrderBy","handleRequestSort","event","property","isAsc","updateTable","response","data","map","client","handleChangePage","newPage","handleTableRowClick","handleChangeRowsPerPage","target","value","handleClientDelete","clientId","handleCreateNewClientCLick","marginLeft","marginTop","textDecoration","slice","column","e","stopPropagation","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport ClientDialog from \"./client-dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useToast from \"../../parts/toast-notification/useToast\";\r\nimport fetchFieldFromObject, {getSimplePropertiesFromObject} from \"../../parts/util/function-util\";\r\nimport {CLIENTS_URL, handleRequestError, makeRequest} from \"../../parts/util/request-util\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ConfirmDeletingDialog from \"../admin/slide-dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport EnhancedTableHead, {getComparator, stableSort} from \"../../parts/util/sorted-table-head\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\n\r\nconst MIN_WIDTH = 170;\r\nconst ALIGN = \"left\";\r\nconst FONT_SIZE = 18;\r\n\r\nconst columns = [\r\n    {id: \"name\", label: \"Name\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"type\", label: \"Company type\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"payerAccountNumber\", label: \"Payer account number\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"country\", label: \"Country\", minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"city\", label: \"City\", minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"street\", label: \"Street\", minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"house\", label: \"House\", minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"registrationDate\", label: \"Date of registration\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"edit_delete\", label: \"\", align: \"right\"}\r\n];\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        role: store.user.roles[0]\r\n    }\r\n};\r\n\r\nconst REMOVE_TITLE = \"Do you want to remove the client ?\";\r\n\r\n\r\nexport const ClientsTable = connect(mapStateToProps)((props) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [clients, setClients] = useState([]);\r\n    const [clientDialogOpen, setClientDialogOpen] = useState(false);\r\n    const [selectedClientCompanyId, setSelectedClientCompanyId] = useState(-1);\r\n    const [NotificationToast, openNotificationToast] = useToast();\r\n    const [order, setOrder] = useState(\"asc\");\r\n    const [orderBy, setOrderBy] = useState(\"name\");\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    async function updateTable() {\r\n        try {\r\n            const response = await makeRequest(\"GET\", CLIENTS_URL);\r\n            setClients(response.data.map(client => getSimplePropertiesFromObject(client)));\r\n        } catch (error) {\r\n            handleRequestError(error, openNotificationToast);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateTable();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleTableRowClick = (client) => {\r\n        setSelectedClientCompanyId(client.id);\r\n        setClientDialogOpen(true);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleClientDelete = async (clientId) => {\r\n        try {\r\n            await makeRequest(\"DELETE\", CLIENTS_URL + `/${clientId}`);\r\n            openNotificationToast(\"Client has been deleted\", \"success\");\r\n            updateTable();\r\n        } catch (error) {\r\n            handleRequestError(error);\r\n        }\r\n    }\r\n\r\n    const handleCreateNewClientCLick = () => {\r\n        setClientDialogOpen(true);\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Paper className=\"table-paper\">\r\n                <TableContainer className=\"table-container\">\r\n                    <div className=\"table-header-wrapper\">\r\n                        <Typography variant=\"button\" display=\"block\" gutterBottom\r\n                                    style={{fontSize: 26, marginLeft: 15, marginTop: 15, textDecoration: \"underline\"}}\r\n                                    className=\"table-title\"\r\n                        >\r\n                            <LibraryBooksIcon/>\r\n                            Clients\r\n                        </Typography>\r\n                        <Button variant=\"contained\"\r\n                                color={\"primary\"}\r\n                                onClick={handleCreateNewClientCLick}\r\n                                className=\"add-table-btn\"\r\n                        >\r\n                            <LibraryAddRoundedIcon/>\r\n                        </Button>\r\n                    </div>\r\n                    <Table aria-label=\"sticky table\">\r\n                        <EnhancedTableHead\r\n                            columns={columns}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            checkBoxes={false}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(clients, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((client) => {\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={client.id}\r\n                                        >\r\n                                            {columns.map((column) => {\r\n                                                let value = fetchFieldFromObject(client, column.id);\r\n                                                if (value === \"SP\") {\r\n                                                    value = \"Sole proprietorship\";\r\n                                                } else if (value === \"JP\") {\r\n                                                    value = \"Juridical person\";\r\n                                                }\r\n                                                if (column.id !== \"edit_delete\")\r\n                                                    return (\r\n                                                        <TableCell key={column.id} align={column.align}>\r\n                                                            {value}\r\n                                                        </TableCell>\r\n                                                    );\r\n                                            })}\r\n                                            <TableCell\r\n                                                key={\"edit_delete\"}\r\n                                                align={\"right\"}\r\n                                            >\r\n                                                <div className=\"table-delete-edit-div\">\r\n                                                    <Tooltip title=\"Click to edit client\" arrow>\r\n                                                        <Button\r\n                                                            className=\"menu-table-btn\"\r\n                                                            color={\"primary\"}\r\n                                                            startIcon={<EditIcon/>}\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleTableRowClick(client)\r\n                                                            }}/>\r\n                                                    </Tooltip>\r\n                                                    <ConfirmDeletingDialog //TODO remove client\r\n                                                        id={client.id}\r\n                                                        onDelete={handleClientDelete}\r\n                                                        toolTitle={\"Click to delete client\"}\r\n                                                        text={REMOVE_TITLE}\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={clients.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n\r\n                <ClientDialog\r\n                    open={clientDialogOpen}\r\n                    clientCompanyId={selectedClientCompanyId}\r\n                    onDelete={() => {\r\n                        setClientDialogOpen(false);\r\n                        setSelectedClientCompanyId(-1);\r\n                        updateTable();\r\n                    }}\r\n                    onClose={() => {\r\n                        setClientDialogOpen(false);\r\n                        setSelectedClientCompanyId(-1);\r\n                        updateTable();\r\n                    }}\r\n                    onSubmit={() => {\r\n                        setClientDialogOpen(false);\r\n                        setSelectedClientCompanyId(-1);\r\n                        updateTable();\r\n                    }}\r\n                />\r\n            </Paper>\r\n            {NotificationToast}\r\n        </main>\r\n    );\r\n})\r\n"]},"metadata":{},"sourceType":"module"}