{"ast":null,"code":"import * as Yup from \"yup\";\nexport var StorageScheme = Yup.object({\n  country: Yup.string().required(\"Country is required\").min(2, \"Country length must be greater than 2 symbols\").max(24, \"Country length must be lesser than 24 symbols\").matches(/^[A-Яа-яA-Za-z\\s]+$/, \"Country must contain symbols A-Z, a-z, А-Я, а-я\"),\n  city: Yup.string().required(\"City is required\").min(2, \"City length must be greater than 2 symbols\").max(24, \"City length must be lesser than 24 symbols\").matches(/^[A-Яа-яA-Za-z\\s]+$/, \"City must contain symbols A-Z, a-z, А-Я, а-я\"),\n  street: Yup.string().required(\"Street is required\").min(2, \"Street length must be greater than 2 symbols\").max(24, \"Street length must be lesser than 24 symbols\").matches(/^[-A-Яа-яA-Za-z\\s0-9,.]+$/, \"Street must contain symbols A-Z, a-z, А-Я, а-я, 0-9, (,.-)\"),\n  house: Yup.string().required(\"House is required\").max(6, \"House length must be lesser than 6 symbols\").matches(/^[A-Яа-яA-Za-z0-9]+$/, \"House must contain symbols A-Z, a-z, А-Я, а-я, 0-9\"),\n  email: Yup.string().required(\"Email is required\").max(64, \"Max length must be lesser than 64 symbols\").email(\"Email is invalid\"),\n  phone: Yup.string().required(\"Phone is required\").min(5, \"Min length must be greater than 5 symbols\").max(16, \"Max length must be lesser than 16 symbols\").matches(/^\\+?\\d+$/, \"Phone must contain only digits\")\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/parts/validation/storage-validation.js"],"names":["Yup","StorageScheme","object","country","string","required","min","max","matches","city","street","house","email","phone"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,aAAa,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACpCC,EAAAA,OAAO,EAAEH,GAAG,CAACI,MAAJ,GACJC,QADI,CACK,qBADL,EAEJC,GAFI,CAEA,CAFA,EAEG,+CAFH,EAGJC,GAHI,CAGA,EAHA,EAGI,+CAHJ,EAIJC,OAJI,CAII,qBAJJ,EAI2B,iDAJ3B,CAD2B;AAMpCC,EAAAA,IAAI,EAAET,GAAG,CAACI,MAAJ,GACDC,QADC,CACQ,kBADR,EAEDC,GAFC,CAEG,CAFH,EAEM,4CAFN,EAGDC,GAHC,CAGG,EAHH,EAGO,4CAHP,EAIDC,OAJC,CAIO,qBAJP,EAI8B,8CAJ9B,CAN8B;AAWpCE,EAAAA,MAAM,EAAEV,GAAG,CAACI,MAAJ,GACHC,QADG,CACM,oBADN,EAEHC,GAFG,CAEC,CAFD,EAEI,8CAFJ,EAGHC,GAHG,CAGC,EAHD,EAGK,8CAHL,EAIHC,OAJG,CAIK,2BAJL,EAIkC,4DAJlC,CAX4B;AAgBpCG,EAAAA,KAAK,EAAEX,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,mBADP,EAEFE,GAFE,CAEE,CAFF,EAEK,4CAFL,EAGFC,OAHE,CAGM,sBAHN,EAG8B,oDAH9B,CAhB6B;AAoBpCI,EAAAA,KAAK,EAAEZ,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,mBADP,EAEFE,GAFE,CAEE,EAFF,EAEM,2CAFN,EAGFK,KAHE,CAGI,kBAHJ,CApB6B;AAwBpCC,EAAAA,KAAK,EAAEb,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,mBADP,EAEFC,GAFE,CAEE,CAFF,EAEK,2CAFL,EAGFC,GAHE,CAGE,EAHF,EAGM,2CAHN,EAIFC,OAJE,CAIM,UAJN,EAIkB,gCAJlB;AAxB6B,CAAX,CAAtB","sourcesContent":["import * as Yup from \"yup\";\r\n\r\nexport const StorageScheme = Yup.object({\r\n    country: Yup.string()\r\n        .required(\"Country is required\")\r\n        .min(2, \"Country length must be greater than 2 symbols\")\r\n        .max(24, \"Country length must be lesser than 24 symbols\")\r\n        .matches(/^[A-Яа-яA-Za-z\\s]+$/, \"Country must contain symbols A-Z, a-z, А-Я, а-я\"),\r\n    city: Yup.string()\r\n        .required(\"City is required\")\r\n        .min(2, \"City length must be greater than 2 symbols\")\r\n        .max(24, \"City length must be lesser than 24 symbols\")\r\n        .matches(/^[A-Яа-яA-Za-z\\s]+$/, \"City must contain symbols A-Z, a-z, А-Я, а-я\"),\r\n    street: Yup.string()\r\n        .required(\"Street is required\")\r\n        .min(2, \"Street length must be greater than 2 symbols\")\r\n        .max(24, \"Street length must be lesser than 24 symbols\")\r\n        .matches(/^[-A-Яа-яA-Za-z\\s0-9,.]+$/, \"Street must contain symbols A-Z, a-z, А-Я, а-я, 0-9, (,.-)\"),\r\n    house: Yup.string()\r\n        .required(\"House is required\")\r\n        .max(6, \"House length must be lesser than 6 symbols\")\r\n        .matches(/^[A-Яа-яA-Za-z0-9]+$/, \"House must contain symbols A-Z, a-z, А-Я, а-я, 0-9\"),\r\n    email: Yup.string()\r\n        .required(\"Email is required\")\r\n        .max(64, \"Max length must be lesser than 64 symbols\")\r\n        .email(\"Email is invalid\"),\r\n    phone: Yup.string()\r\n        .required(\"Phone is required\")\r\n        .min(5, \"Min length must be greater than 5 symbols\")\r\n        .max(16, \"Max length must be lesser than 16 symbols\")\r\n        .matches(/^\\+?\\d+$/, \"Phone must contain only digits\")\r\n});"]},"metadata":{},"sourceType":"module"}