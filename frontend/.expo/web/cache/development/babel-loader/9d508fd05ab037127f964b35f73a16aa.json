{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\forms\\\\waybill-form\\\\auto-search.js\";\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nexport default function AutoSearch(props) {\n  var _this = this;\n\n  var autoArr = props.autoArr;\n  var onAutoSelect = props.onAutoSelect;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedAuto = _useState4[0],\n      setSelectedAuto = _useState4[1];\n\n  return React.createElement(Autocomplete, {\n    value: selectedAuto,\n    onChange: function onChange(event, newValue) {\n      setSelectedAuto(newValue);\n      onAutoSelect(newValue);\n    },\n    inputValue: inputValue,\n    onInputChange: function onInputChange(event, newInputValue) {\n      setInputValue(newInputValue);\n    },\n    getOptionLabel: function getOptionLabel(auto) {\n      return auto === \"\" ? \"\" : auto.mark + \" \" + auto.autoType + \" \" + auto.maxLoad;\n    },\n    options: autoArr,\n    renderInput: function renderInput(params) {\n      return React.createElement(TextField, _extends({}, params, {\n        label: \"Auto\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 38\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/forms/waybill-form/auto-search.js"],"names":["React","useState","TextField","Autocomplete","AutoSearch","props","autoArr","onAutoSelect","inputValue","setInputValue","selectedAuto","setSelectedAuto","event","newValue","newInputValue","auto","mark","autoType","maxLoad","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,MAAMC,YAAY,GAAGF,KAAK,CAACE,YAA3B;;AAFsC,kBAIFN,QAAQ,CAAC,EAAD,CAJN;AAAA;AAAA,MAI/BO,UAJ+B;AAAA,MAInBC,aAJmB;;AAAA,mBAKER,QAAQ,CAAC,EAAD,CALV;AAAA;AAAA,MAK/BS,YAL+B;AAAA,MAKjBC,eALiB;;AAOtC,SACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAED,YADX;AAEI,IAAA,QAAQ,EAAE,kBAACE,KAAD,EAAQC,QAAR,EAAqB;AAC3BF,MAAAA,eAAe,CAACE,QAAD,CAAf;AACAN,MAAAA,YAAY,CAACM,QAAD,CAAZ;AACH,KALL;AAMI,IAAA,UAAU,EAAEL,UANhB;AAOI,IAAA,aAAa,EAAE,uBAACI,KAAD,EAAQE,aAAR,EAA0B;AACrCL,MAAAA,aAAa,CAACK,aAAD,CAAb;AACH,KATL;AAUI,IAAA,cAAc,EAAE,wBAACC,IAAD;AAAA,aAAUA,IAAI,KAAK,EAAT,GAAc,EAAd,GAAsBA,IAAI,CAACC,IAA3B,SAAmCD,IAAI,CAACE,QAAxC,SAAoDF,IAAI,CAACG,OAAnE;AAAA,KAVpB;AAWI,IAAA,OAAO,EAAEZ,OAXb;AAYI,IAAA,WAAW,EAAE,qBAACa,MAAD;AAAA,aAAY,oBAAC,SAAD,eAAeA,MAAf;AAAuB,QAAA,KAAK,EAAE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;AAAA,KAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH","sourcesContent":["import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n\r\nexport default function AutoSearch(props) {\r\n    const autoArr = props.autoArr;\r\n    const onAutoSelect = props.onAutoSelect;\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [selectedAuto, setSelectedAuto] = useState(\"\");\r\n\r\n    return (\r\n        <Autocomplete\r\n            value={selectedAuto}\r\n            onChange={(event, newValue) => {\r\n                setSelectedAuto(newValue);\r\n                onAutoSelect(newValue);\r\n            }}\r\n            inputValue={inputValue}\r\n            onInputChange={(event, newInputValue) => {\r\n                setInputValue(newInputValue);\r\n            }}\r\n            getOptionLabel={(auto) => auto === \"\" ? \"\" : `${auto.mark} ${auto.autoType} ${auto.maxLoad}`}\r\n            options={autoArr}\r\n            renderInput={(params) => <TextField {...params} label={\"Auto\"}/>}\r\n        />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}