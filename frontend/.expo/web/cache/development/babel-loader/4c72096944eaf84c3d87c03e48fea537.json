{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\dispatcher\\\\product-owners\\\\product-owners-table.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { handleRequestError, makeRequest, OWNER_URL } from \"../../../parts/util/request-util\";\nimport InvoiceDialog from \"../invoice/invoice-dialog\";\nimport useToast from \"../../../parts/toast-notification/useToast\";\nimport Button from \"@material-ui/core/Button\";\nimport ProductOwnerDialog from \"./product-owner-dialog\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\nimport { Typography } from \"@material-ui/core\";\nimport fetchFieldFromObject, { getSimplePropertiesFromObject } from \"../../../parts/util/function-util\";\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport { connect } from \"react-redux\";\nimport TextSearch from \"../../../parts/search/text-search\";\nimport ConfirmDeletingDialog from \"../../admin/slide-dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport EnhancedTableHead, { getComparator, stableSort } from \"../../../parts/util/sorted-table-head\";\nvar MAX_WIDTH = 170;\nvar MIN_WIDTH = 170;\nvar FONT_SIZE = 18;\nvar ALIGN = \"left\";\nvar REMOVE_TITLE = \"Do you want to delete the storage ?\";\nvar columns = [{\n  id: \"name\",\n  label: \"Name\",\n  maxWidth: MAX_WIDTH,\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"type\",\n  label: \"Company type\",\n  maxWidth: 180,\n  minWidth: 180,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"phone\",\n  label: \"Phone\",\n  maxWidth: MAX_WIDTH,\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"country\",\n  label: \"Country\",\n  maxWidth: 150,\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"city\",\n  label: \"City\",\n  maxWidth: 150,\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"street\",\n  label: \"Street\",\n  maxWidth: 150,\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"house\",\n  label: \"House\",\n  maxWidth: 100,\n  minWidth: 100,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"registrationDate\",\n  label: \"Date of registration\",\n  maxWidth: 150,\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}];\nvar EMPTY_PRODUCT_OWNER = {\n  name: \"\",\n  type: \"SP\",\n  phone: \"\"\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    role: store.user.roles[0]\n  };\n};\n\nexport var ProductOwnersTable = connect(mapStateToProps)(function (props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      amountProductOwners = _useState6[0],\n      setAmountProductOwners = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      productOwnerDialogOpen = _useState8[0],\n      setProductOwnerDialogOpen = _useState8[1];\n\n  var _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedProductOwnerId = _useState10[0],\n      setSelectedProductOwnerId = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      productOwners = _useState12[0],\n      setProductOwners = _useState12[1];\n\n  var _useState13 = useState(EMPTY_PRODUCT_OWNER),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedProductOwner = _useState14[0],\n      setSelectedProductOwner = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      invoiceDialogOpen = _useState16[0],\n      setInvoiceDialogOpen = _useState16[1];\n\n  var _useToast = useToast(),\n      _useToast2 = _slicedToArray(_useToast, 2),\n      ToastComponent = _useToast2[0],\n      showToastComponent = _useToast2[1];\n\n  var _useState17 = useState('asc'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      order = _useState18[0],\n      setOrder = _useState18[1];\n\n  var _useState19 = useState('status'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      orderBy = _useState20[0],\n      setOrderBy = _useState20[1];\n\n  var updateTable = function updateTable() {\n    var isComponentMounted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var newPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : page;\n    var newRowsPerPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rowsPerPage;\n    makeRequest(\"GET\", OWNER_URL + (\"?requestedPage=\" + newPage + \"&productOwnersPerPage=\" + newRowsPerPage)).then(function (response) {\n      if (isComponentMounted) {\n        setAmountProductOwners(response.data.totalAmountProductOwners);\n        setProductOwners(response.data.productOwners.map(function (pr) {\n          return getSimplePropertiesFromObject(pr);\n        }));\n      }\n    }).catch(function (err) {\n      setProductOwners([]);\n      handleRequestError(err, showToastComponent);\n    });\n  };\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n    updateTable(mounted);\n    return function () {\n      return mounted = false;\n    };\n  }, []);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n    updateTable(true, newPage);\n  };\n\n  var handleEditProductOwnerClick = function handleEditProductOwnerClick(productOwner) {\n    setProductOwnerDialogOpen(true);\n    setSelectedProductOwnerId(productOwner.id);\n  };\n\n  function deleteProductOwner(id) {\n    return _regeneratorRuntime.async(function deleteProductOwner$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(makeRequest(\"DELETE\", OWNER_URL + \"/\" + id));\n\n          case 3:\n            updateTable();\n            showToastComponent(\"Client has been deleted\", \"success\");\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            handleRequestError(_context.t0, showToastComponent);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  }\n\n  var handleTableRowClick = function handleTableRowClick(productOwner) {\n    setSelectedProductOwner(productOwner);\n    setInvoiceDialogOpen(true);\n  };\n\n  var handleCreateProductOwnerClick = function handleCreateProductOwnerClick() {\n    setSelectedProductOwnerId(-1);\n    setProductOwnerDialogOpen(true);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    updateTable(true, 0, +event.target.value);\n  };\n\n  var updateTableWithSearch = function updateTableWithSearch(searchStr) {\n    var uri;\n    return _regeneratorRuntime.async(function updateTableWithSearch$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setPage(0);\n            searchStr = searchStr.trim();\n\n            if (searchStr === \"\") {\n              updateTable(true, 0);\n            } else {\n              uri = OWNER_URL + \"/filter?name=\" + searchStr + \"&requestedPage=\" + 0 + \"&productOwnersPerPage=\" + rowsPerPage;\n              makeRequest(\"GET\", uri).then(function (response) {\n                setAmountProductOwners(response.data.totalAmountProductOwners);\n                setProductOwners(response.data.productOwners.map(function (pr) {\n                  return getSimplePropertiesFromObject(pr);\n                }));\n              }).catch(function (err) {\n                setProductOwners([]);\n                handleRequestError(err, showToastComponent);\n              });\n            }\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    style: {\n      marginLeft: 20\n    },\n    className: \"table-paper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, React.createElement(TableContainer, {\n    className: \"table-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    className: \"table-header-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    display: \"block\",\n    gutterBottom: true,\n    style: {\n      fontSize: 26,\n      marginLeft: 15,\n      marginTop: 15,\n      textDecoration: \"underline\"\n    },\n    className: \"table-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, React.createElement(LibraryBooksIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }), \"Clients\"), React.createElement(\"div\", {\n    className: \"table-header-right-part\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, React.createElement(TextSearch, {\n    onFieldChange: updateTableWithSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleCreateProductOwnerClick,\n    className: \"add-table-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, React.createElement(LibraryAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  })))), React.createElement(Table, {\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, React.createElement(EnhancedTableHead, {\n    columns: columns,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    thirdMenu: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }), React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, stableSort(productOwners, getComparator(order, orderBy)).map(function (client) {\n    return React.createElement(TableRow, {\n      onClick: function onClick() {\n        handleTableRowClick(client);\n      },\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: client.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    }, columns.map(function (column) {\n      var value = fetchFieldFromObject(client, column.id);\n\n      if (value === \"SP\") {\n        value = \"Sole proprietorship\";\n      } else if (value === \"JP\") {\n        value = \"Juridical person\";\n      }\n\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 53\n        }\n      }, value);\n    }), React.createElement(TableCell, {\n      key: \"edit_product_owner\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 45\n      }\n    }, React.createElement(\"div\", {\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 49\n      }\n    }, React.createElement(Tooltip, {\n      title: \"Click to create new invoice\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 53\n      }\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: \"menu-table-btn\",\n      startIcon: React.createElement(NoteAddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 72\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleTableRowClick(client);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 57\n      }\n    })), React.createElement(Tooltip, {\n      title: \"Click to edit client\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 53\n      }\n    }, React.createElement(Button, {\n      color: \"primary\",\n      className: \"menu-table-btn\",\n      startIcon: React.createElement(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 72\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleEditProductOwnerClick(client);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 57\n      }\n    })), React.createElement(ConfirmDeletingDialog, {\n      id: client.id,\n      onDelete: deleteProductOwner,\n      text: REMOVE_TITLE,\n      toolTitle: \"Click to delete client\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 53\n      }\n    }))));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 50, 100],\n    component: \"div\",\n    count: amountProductOwners,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })), ToastComponent, React.createElement(InvoiceDialog, {\n    productOwner: selectedProductOwner,\n    open: invoiceDialogOpen,\n    onClose: function onClose() {\n      setInvoiceDialogOpen(false);\n    },\n    openToast: showToastComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }), React.createElement(ProductOwnerDialog, {\n    open: productOwnerDialogOpen,\n    productOwnerId: selectedProductOwnerId,\n    onClose: function onClose() {\n      setProductOwnerDialogOpen(false);\n      setSelectedProductOwnerId(-1);\n      updateTable();\n    },\n    openToast: showToastComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }));\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/dispatcher/product-owners/product-owners-table.js"],"names":["React","useEffect","useState","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","handleRequestError","makeRequest","OWNER_URL","InvoiceDialog","useToast","Button","ProductOwnerDialog","EditIcon","LibraryAddRoundedIcon","Typography","fetchFieldFromObject","getSimplePropertiesFromObject","NoteAddIcon","connect","TextSearch","ConfirmDeletingDialog","Tooltip","LibraryBooksIcon","EnhancedTableHead","getComparator","stableSort","MAX_WIDTH","MIN_WIDTH","FONT_SIZE","ALIGN","REMOVE_TITLE","columns","id","label","maxWidth","minWidth","align","fontSize","EMPTY_PRODUCT_OWNER","name","type","phone","mapStateToProps","store","role","user","roles","ProductOwnersTable","props","page","setPage","rowsPerPage","setRowsPerPage","amountProductOwners","setAmountProductOwners","productOwnerDialogOpen","setProductOwnerDialogOpen","selectedProductOwnerId","setSelectedProductOwnerId","productOwners","setProductOwners","selectedProductOwner","setSelectedProductOwner","invoiceDialogOpen","setInvoiceDialogOpen","ToastComponent","showToastComponent","order","setOrder","orderBy","setOrderBy","updateTable","isComponentMounted","newPage","newRowsPerPage","then","response","data","totalAmountProductOwners","map","pr","catch","err","handleRequestSort","event","property","isAsc","mounted","handleChangePage","handleEditProductOwnerClick","productOwner","deleteProductOwner","handleTableRowClick","handleCreateProductOwnerClick","handleChangeRowsPerPage","target","value","updateTableWithSearch","searchStr","trim","uri","marginLeft","marginTop","textDecoration","client","column","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {handleRequestError, makeRequest, OWNER_URL} from \"../../../parts/util/request-util\";\r\nimport InvoiceDialog from \"../invoice/invoice-dialog\";\r\nimport useToast from \"../../../parts/toast-notification/useToast\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ProductOwnerDialog from \"./product-owner-dialog\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport fetchFieldFromObject, {getSimplePropertiesFromObject} from \"../../../parts/util/function-util\";\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport {connect} from \"react-redux\";\r\nimport TextSearch from \"../../../parts/search/text-search\";\r\nimport ConfirmDeletingDialog from \"../../admin/slide-dialog\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport EnhancedTableHead, {getComparator, stableSort} from \"../../../parts/util/sorted-table-head\";\r\n\r\nconst MAX_WIDTH = 170;\r\nconst MIN_WIDTH = 170;\r\nconst FONT_SIZE = 18;\r\nconst ALIGN = \"left\";\r\nconst REMOVE_TITLE = \"Do you want to delete the storage ?\";\r\n\r\nconst columns = [\r\n    {id: \"name\", label: \"Name\", maxWidth: MAX_WIDTH, minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"type\", label: \"Company type\", maxWidth: 180, minWidth: 180, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"phone\", label: \"Phone\", maxWidth: MAX_WIDTH, minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"country\", label: \"Country\", maxWidth: 150, minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"city\", label: \"City\", maxWidth: 150, minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"street\", label: \"Street\", maxWidth: 150, minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"house\", label: \"House\", maxWidth: 100, minWidth: 100, align: ALIGN, fontSize: FONT_SIZE},\r\n    {\r\n        id: \"registrationDate\",\r\n        label: \"Date of registration\",\r\n        maxWidth: 150,\r\n        minWidth: 150,\r\n        align: ALIGN,\r\n        fontSize: FONT_SIZE\r\n    }\r\n];\r\n\r\nconst EMPTY_PRODUCT_OWNER = {\r\n    name: \"\",\r\n    type: \"SP\",\r\n    phone: \"\",\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        role: store.user.roles[0]\r\n    }\r\n};\r\n\r\nexport const ProductOwnersTable = connect(mapStateToProps)((props) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [amountProductOwners, setAmountProductOwners] = useState(0);\r\n\r\n    const [productOwnerDialogOpen, setProductOwnerDialogOpen] = useState(false);\r\n    const [selectedProductOwnerId, setSelectedProductOwnerId] = useState(-1);\r\n    const [productOwners, setProductOwners] = useState([]);\r\n    const [selectedProductOwner, setSelectedProductOwner] = useState(EMPTY_PRODUCT_OWNER);\r\n    const [invoiceDialogOpen, setInvoiceDialogOpen] = useState(false);\r\n    const [ToastComponent, showToastComponent] = useToast();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('status');\r\n\r\n    const updateTable = (isComponentMounted = true, newPage = page, newRowsPerPage = rowsPerPage) => {\r\n        makeRequest(\"GET\", OWNER_URL + `?requestedPage=${newPage}&productOwnersPerPage=${newRowsPerPage}`)\r\n            .then((response) => {\r\n                if (isComponentMounted) {\r\n                    setAmountProductOwners(response.data.totalAmountProductOwners);\r\n                    setProductOwners(response.data.productOwners.map(pr => getSimplePropertiesFromObject(pr)));\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setProductOwners([]);\r\n                handleRequestError(err, showToastComponent);\r\n            })\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        updateTable(mounted);\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        updateTable(true, newPage);\r\n    };\r\n\r\n    const handleEditProductOwnerClick = (productOwner) => {\r\n        setProductOwnerDialogOpen(true);\r\n        setSelectedProductOwnerId(productOwner.id)\r\n    };\r\n\r\n    async function deleteProductOwner(id) {\r\n        try {\r\n            await makeRequest(\"DELETE\", OWNER_URL + \"/\" + id);\r\n            updateTable();\r\n            showToastComponent(\"Client has been deleted\", \"success\");\r\n        } catch (error) {\r\n            handleRequestError(error, showToastComponent);\r\n        }\r\n    }\r\n\r\n\r\n    const handleTableRowClick = (productOwner) => {\r\n        setSelectedProductOwner(productOwner);\r\n        setInvoiceDialogOpen(true);\r\n    };\r\n\r\n    const handleCreateProductOwnerClick = () => {\r\n        setSelectedProductOwnerId(-1);\r\n        setProductOwnerDialogOpen(true);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        updateTable(true, 0, +event.target.value)\r\n    };\r\n\r\n    const updateTableWithSearch = async (searchStr) => {\r\n        setPage(0);\r\n\r\n        searchStr = searchStr.trim();\r\n        if (searchStr === \"\") {\r\n            updateTable(true, 0);\r\n        } else {\r\n            const uri = `${OWNER_URL}/filter?name=${searchStr}&requestedPage=${0}&productOwnersPerPage=${rowsPerPage}`;\r\n            makeRequest(\"GET\", uri)\r\n                .then((response) => {\r\n                    setAmountProductOwners(response.data.totalAmountProductOwners);\r\n                    setProductOwners(response.data.productOwners.map(pr => getSimplePropertiesFromObject(pr)));\r\n                })\r\n                .catch((err) => {\r\n                    setProductOwners([]);\r\n                    handleRequestError(err, showToastComponent);\r\n                })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Paper style={{marginLeft: 20}} className=\"table-paper\">\r\n                <TableContainer className=\"table-container\">\r\n                    <div className=\"table-header-wrapper\">\r\n                        <Typography variant=\"button\" display=\"block\" gutterBottom\r\n                                    style={{fontSize: 26, marginLeft: 15, marginTop: 15, textDecoration: \"underline\"}}\r\n                                    className=\"table-title\"\r\n                        >\r\n                            <LibraryBooksIcon/>\r\n                            Clients\r\n                        </Typography>\r\n                        <div className=\"table-header-right-part\">\r\n                            <TextSearch onFieldChange={updateTableWithSearch}/>\r\n                            <Button variant=\"contained\"\r\n                                    color={\"primary\"}\r\n                                    onClick={handleCreateProductOwnerClick}\r\n                                    className=\"add-table-btn\"\r\n                            >\r\n                                <LibraryAddRoundedIcon/>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <Table aria-label=\"sticky table\">\r\n                        <EnhancedTableHead\r\n                            columns={columns}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            thirdMenu={true}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(productOwners, getComparator(order, orderBy))\r\n                                .map((client) => {\r\n                                    return (\r\n                                        <TableRow\r\n                                            onClick={() => {\r\n                                                handleTableRowClick(client);\r\n                                            }}\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={client.id}\r\n                                        >\r\n                                            {columns.map((column) => {\r\n                                                let value = fetchFieldFromObject(client, column.id);\r\n                                                if (value === \"SP\") {\r\n                                                    value = \"Sole proprietorship\";\r\n                                                } else if (value === \"JP\") {\r\n                                                    value = \"Juridical person\";\r\n                                                }\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                            <TableCell key={\"edit_product_owner\"}>\r\n                                                <div className=\"table-delete-edit-div\">\r\n                                                    <Tooltip title=\"Click to create new invoice\"\r\n                                                             arrow>\r\n                                                        <Button\r\n                                                            color={\"primary\"}\r\n                                                            className=\"menu-table-btn\"\r\n                                                            startIcon={<NoteAddIcon/>}\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleTableRowClick(client)\r\n                                                            }}/>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip title=\"Click to edit client\"\r\n                                                             arrow>\r\n                                                        <Button\r\n                                                            color={\"primary\"}\r\n                                                            className=\"menu-table-btn\"\r\n                                                            startIcon={<EditIcon/>}\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleEditProductOwnerClick(client)\r\n                                                            }}/>\r\n                                                    </Tooltip>\r\n                                                    <ConfirmDeletingDialog\r\n                                                        id={client.id}\r\n                                                        onDelete={deleteProductOwner}\r\n                                                        text={REMOVE_TITLE}\r\n                                                        toolTitle=\"Click to delete client\"\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 50, 100]}\r\n                    component=\"div\"\r\n                    count={amountProductOwners}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            {ToastComponent}\r\n\r\n            <InvoiceDialog\r\n                productOwner={selectedProductOwner}\r\n                open={invoiceDialogOpen}\r\n                onClose={() => {\r\n                    setInvoiceDialogOpen(false);\r\n                }}\r\n                openToast={showToastComponent}\r\n            />\r\n\r\n            <ProductOwnerDialog\r\n                open={productOwnerDialogOpen}\r\n                productOwnerId={selectedProductOwnerId}\r\n                onClose={() => {\r\n                    setProductOwnerDialogOpen(false);\r\n                    setSelectedProductOwnerId(-1);\r\n                    updateTable();\r\n                }}\r\n                openToast={showToastComponent}\r\n            />\r\n        </main>\r\n    );\r\n});"]},"metadata":{},"sourceType":"module"}