{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\admin\\\\users\\\\user-table.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { UserDialog } from \"./user-dialog\";\nimport useToast from \"../../../parts/toast-notification/useToast\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport ConfirmDeletingDialog from \"../slide-dialog\";\nimport { handleRequestError, makeRequest, USER_URL } from \"../../../parts/util/request-util\";\nimport { Typography } from \"@material-ui/core\";\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\nimport { connect } from \"react-redux\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport FiberManualRecordSharpIcon from '@material-ui/icons/FiberManualRecordSharp';\nimport photo from \"../../../../resources/images/user_no_photo.png\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport EnhancedTableHead, { getComparator, stableSort } from \"../../../parts/util/sorted-table-head\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MailDialog } from \"./mail-dialog\";\nvar MIN_WIDTH = 170;\nvar ALIGN = \"left\";\nvar FONT_SIZE = 18;\nvar columns = [{\n  id: \"photo\",\n  label: \"\",\n  minWidth: 50,\n  align: \"center\",\n  fontSize: FONT_SIZE\n}, {\n  id: \"email\",\n  label: \"Email\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"name\",\n  label: \"Name\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"surname\",\n  label: \"Surname\",\n  minWidth: MIN_WIDTH,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"role\",\n  label: \"Role\",\n  minWidth: 150,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"birthday\",\n  label: \"Date of birth\",\n  minWidth: 140,\n  align: ALIGN,\n  fontSize: FONT_SIZE,\n  format: function format(value) {\n    return value.toFixed(2);\n  }\n}, {\n  id: \"status\",\n  label: \"Status\",\n  minWidth: 100,\n  align: ALIGN,\n  fontSize: FONT_SIZE\n}, {\n  id: \"edit_delete\",\n  label: \"\",\n  align: \"right\"\n}];\n\nvar isOnlineDiv = function isOnlineDiv(isOnline) {\n  return isOnline ? React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(FiberManualRecordSharpIcon, {\n    style: {\n      fontSize: 12,\n      color: \"green\",\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(\"span\", {\n    style: {\n      marginLeft: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Online\")) : React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(FiberManualRecordSharpIcon, {\n    style: {\n      fontSize: 12,\n      color: \"crimson\",\n      marginTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(\"span\", {\n    style: {\n      marginLeft: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Offline\"));\n};\n\nvar getColorStatus = function getColorStatus(status) {\n  switch (status) {\n    case \"ACTIVE\":\n      return React.createElement(\"div\", {\n        className: \"green-status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      }, status);\n\n    case \"BLOCKED\":\n      return React.createElement(\"div\", {\n        className: \"red-status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }\n      }, status);\n\n    default:\n      return React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 20\n        }\n      }, status);\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    role: store.user.roles[0]\n  };\n};\n\nexport var UserTable = connect(mapStateToProps)(function (props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      formDialogOpen = _useState8[0],\n      setFormDialogOpen = _useState8[1];\n\n  var _useState9 = useState(-1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedUserId = _useState10[0],\n      setSelectedUserId = _useState10[1];\n\n  var _useState11 = useState(-1),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedPhotoId = _useState12[0],\n      setSelectedPhotoId = _useState12[1];\n\n  var _useToast = useToast(),\n      _useToast2 = _slicedToArray(_useToast, 2),\n      toastComponent = _useToast2[0],\n      showToastComponent = _useToast2[1];\n\n  var _useState13 = useState('asc'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      order = _useState14[0],\n      setOrder = _useState14[1];\n\n  var _useState15 = useState('status'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      orderBy = _useState16[0],\n      setOrderBy = _useState16[1];\n\n  var _useState17 = useState(new Set([])),\n      _useState18 = _slicedToArray(_useState17, 2),\n      checkboxes = _useState18[0],\n      setCheckboxes = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      mailDialog = _useState20[0],\n      setMailDialog = _useState20[1];\n\n  var role = props.role;\n  var REMOVE_TITLE = \"Do you want to remove the user ?\";\n  var maxSizeOfImg = 12000000;\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  var handleChange = function handleChange(e) {\n    var file = e.target.files[0];\n    var reader = new FileReader();\n\n    if (file !== undefined) {\n      if (file.type.match(\"image.*\")) {\n        if (file.size > maxSizeOfImg) {\n          showToastComponent(\"File is to large. Max size is :\" + maxSizeOfImg / 1000000 + \"MB\", \"error\");\n          return;\n        }\n\n        if (file.name.length > 100) {\n          showToastComponent(\"File name is too long (maximum is 100 characters)\", \"error\");\n          return;\n        }\n\n        reader.readAsDataURL(file);\n      } else {\n        showToastComponent(\"Incorrect file type\", \"error\");\n      }\n    }\n\n    reader.onload = function () {\n      var photoInBase64 = reader.result;\n      makeRequest(\"PUT\", USER_URL + \"/photo/\" + selectedPhotoId, {\n        photo: photoInBase64\n      }).then(function (res) {\n        users.forEach(function (u) {\n          if (u.id === selectedPhotoId) {\n            u.photo = photoInBase64;\n            showToastComponent(\"User's photo has been updated\");\n          }\n        });\n      }).catch(function (error) {\n        return handleRequestError(error, showToastComponent);\n      });\n    };\n  };\n\n  useEffect(function () {\n    insertUsers();\n  }, []);\n\n  var insertUsers = function insertUsers() {\n    makeRequest(\"GET\", USER_URL).then(function (res) {\n      setUsers(res.data.map(function (u) {\n        if (u.photo !== null) {\n          u.photo = u.photo + \"?time=\" + new Date().getTime();\n        }\n\n        return u;\n      }));\n    }).catch(function (error) {\n      return handleRequestError(error, showToastComponent);\n    });\n  };\n\n  var deleteSelectedUser = function deleteSelectedUser(id) {\n    makeRequest(\"DELETE\", USER_URL + \"/\" + id).then(function (res) {\n      insertUsers();\n      showToastComponent(\"User has been deleted\", \"success\");\n    }).catch(function (error) {\n      return handleRequestError(error, showToastComponent);\n    });\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleTableRowClick = function handleTableRowClick(user) {\n    setSelectedUserId(user.id);\n    setFormDialogOpen(true);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  var handleCheckBoxClick = function handleCheckBoxClick(e, email) {\n    if (e.target.checked) {\n      setCheckboxes(function (prevState) {\n        return new Set([].concat(_toConsumableArray(prevState), [email]));\n      });\n    } else {\n      checkboxes.delete(email);\n      setCheckboxes(checkboxes);\n    }\n  };\n\n  return React.createElement(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    className: \"table-paper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, React.createElement(TableContainer, {\n    className: \"table-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    className: \"table-header-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    display: \"block\",\n    gutterBottom: true,\n    style: {\n      fontSize: 26,\n      marginLeft: 15,\n      marginTop: 15,\n      textDecoration: \"underline\"\n    },\n    className: \"table-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, React.createElement(LibraryBooksIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }), \"Users\"), React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      if (checkboxes.size === 0) {\n        showToastComponent(\"You should choose at least one user\", \"warning\");\n      } else {\n        setMailDialog(true);\n      }\n    },\n    className: \"add-table-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, React.createElement(EmailRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return setFormDialogOpen(true);\n    },\n    className: \"add-table-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, React.createElement(LibraryAddRoundedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  })))), React.createElement(Table, {\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, React.createElement(EnhancedTableHead, {\n    columns: columns,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    checkBoxes: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }), React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, stableSort(users, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (user) {\n    var roles = user.roles.map(function (role) {\n      return role.charAt(0) + role.substring(1).toLowerCase();\n    });\n    var inPutId = \"hidden-input-user\" + user.id;\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    }, React.createElement(TableCell, {\n      key: user.email,\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, React.createElement(Checkbox, {\n      onChange: function onChange(e) {\n        return handleCheckBoxClick(e, user.email);\n      },\n      size: \"small\",\n      inputProps: {\n        'aria-label': 'checkbox with small size'\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 49\n      }\n    })), React.createElement(TableCell, {\n      key: columns[0].id,\n      align: columns[0].align,\n      className: \"avatar-td\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 45\n      }\n    }, React.createElement(Tooltip, {\n      title: \"Click to edit photo\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 49\n      }\n    }, React.createElement(Avatar, {\n      alt: \"avatar\",\n      src: user.photo === null ? photo : user.photo,\n      onClick: function onClick(e) {\n        setSelectedPhotoId(user.id);\n        document.getElementById(inPutId).click();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 53\n      }\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      multiple: false,\n      size: \"1000\",\n      accept: \"image/*\",\n      hidden: true,\n      id: inPutId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 49\n      }\n    })), React.createElement(TableCell, {\n      key: columns[1].id,\n      align: columns[1].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 45\n      }\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 49\n      }\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 53\n      }\n    }, user.email), isOnlineDiv(user.online))), React.createElement(TableCell, {\n      key: columns[2].id,\n      align: columns[2].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 45\n      }\n    }, user.name), React.createElement(TableCell, {\n      key: columns[3].id,\n      align: columns[3].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 45\n      }\n    }, user.surname), React.createElement(TableCell, {\n      key: columns[4].id,\n      align: columns[4].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 45\n      }\n    }, roles), React.createElement(TableCell, {\n      key: columns[5].id,\n      align: columns[5].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }, user.birthday), React.createElement(TableCell, {\n      key: columns[6].id,\n      align: columns[6].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, getColorStatus(user.status)), React.createElement(TableCell, {\n      key: columns[7].id,\n      align: columns[7].align,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 45\n      }\n    }, React.createElement(\"div\", {\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 49\n      }\n    }, React.createElement(Tooltip, {\n      title: \"Click to edit user\",\n      arrow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 53\n      }\n    }, React.createElement(Button, {\n      className: \"menu-table-btn\",\n      color: \"primary\",\n      startIcon: React.createElement(EditIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 72\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleTableRowClick(user);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 57\n      }\n    })), React.createElement(ConfirmDeletingDialog, {\n      id: user.id,\n      onDelete: deleteSelectedUser,\n      text: REMOVE_TITLE,\n      toolTitle: \"Click to delete user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 53\n      }\n    }))));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 15, 20],\n    component: \"div\",\n    count: users.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }), React.createElement(UserDialog, {\n    open: formDialogOpen,\n    userId: selectedUserId,\n    onClose: function onClose() {\n      setFormDialogOpen(false);\n      setSelectedUserId(-1);\n    },\n    refreshTable: insertUsers,\n    showToast: showToastComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }), React.createElement(MailDialog, {\n    open: mailDialog,\n    emails: checkboxes,\n    onClose: function onClose() {\n      setMailDialog(false);\n    },\n    showToast: showToastComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }), toastComponent));\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/admin/users/user-table.js"],"names":["React","useEffect","useState","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","UserDialog","useToast","Button","EditIcon","ConfirmDeletingDialog","handleRequestError","makeRequest","USER_URL","Typography","LibraryAddRoundedIcon","EmailRoundedIcon","connect","LibraryBooksIcon","FiberManualRecordSharpIcon","photo","Avatar","Tooltip","EnhancedTableHead","getComparator","stableSort","Checkbox","MailDialog","MIN_WIDTH","ALIGN","FONT_SIZE","columns","id","label","minWidth","align","fontSize","format","value","toFixed","isOnlineDiv","isOnline","color","marginTop","marginLeft","getColorStatus","status","mapStateToProps","store","role","user","roles","UserTable","props","page","setPage","rowsPerPage","setRowsPerPage","users","setUsers","formDialogOpen","setFormDialogOpen","selectedUserId","setSelectedUserId","selectedPhotoId","setSelectedPhotoId","toastComponent","showToastComponent","order","setOrder","orderBy","setOrderBy","Set","checkboxes","setCheckboxes","mailDialog","setMailDialog","REMOVE_TITLE","maxSizeOfImg","handleRequestSort","event","property","isAsc","handleChange","e","file","target","files","reader","FileReader","undefined","type","match","size","name","length","readAsDataURL","onload","photoInBase64","result","then","res","forEach","u","catch","error","insertUsers","data","map","Date","getTime","deleteSelectedUser","handleChangePage","newPage","handleTableRowClick","handleChangeRowsPerPage","handleCheckBoxClick","email","checked","prevState","delete","textDecoration","slice","charAt","substring","toLowerCase","inPutId","document","getElementById","click","display","flexDirection","fontWeight","online","surname","birthday","stopPropagation"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {UserDialog} from \"./user-dialog\";\r\nimport useToast from \"../../../parts/toast-notification/useToast\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ConfirmDeletingDialog from \"../slide-dialog\";\r\nimport {handleRequestError, makeRequest, USER_URL} from \"../../../parts/util/request-util\"\r\nimport {Typography} from \"@material-ui/core\";\r\nimport LibraryAddRoundedIcon from \"@material-ui/icons/LibraryAddRounded\";\r\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\r\nimport {connect} from \"react-redux\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport FiberManualRecordSharpIcon from '@material-ui/icons/FiberManualRecordSharp';\r\nimport photo from \"../../../../resources/images/user_no_photo.png\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EnhancedTableHead, {getComparator, stableSort} from \"../../../parts/util/sorted-table-head\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {MailDialog} from \"./mail-dialog\";\r\n\r\n\r\nconst MIN_WIDTH = 170;\r\nconst ALIGN = \"left\";\r\nconst FONT_SIZE = 18;\r\n\r\nconst columns = [\r\n    {id: \"photo\", label: \"\", minWidth: 50, align: \"center\", fontSize: FONT_SIZE},\r\n    {id: \"email\", label: \"Email\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"name\", label: \"Name\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"surname\", label: \"Surname\", minWidth: MIN_WIDTH, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"role\", label: \"Role\", minWidth: 150, align: ALIGN, fontSize: FONT_SIZE},\r\n    {\r\n        id: \"birthday\",\r\n        label: \"Date of birth\",\r\n        minWidth: 140,\r\n        align: ALIGN,\r\n        fontSize: FONT_SIZE,\r\n        format: (value) => value.toFixed(2)\r\n    },\r\n    {id: \"status\", label: \"Status\", minWidth: 100, align: ALIGN, fontSize: FONT_SIZE},\r\n    {id: \"edit_delete\", label: \"\", align: \"right\"}\r\n];\r\n\r\n\r\nconst isOnlineDiv = (isOnline) => {\r\n    return isOnline ?\r\n        <div>\r\n            <FiberManualRecordSharpIcon style={{fontSize: 12, color: \"green\", marginTop: 3}}/>\r\n            <span style={{marginLeft: 3}}>Online</span>\r\n        </div>\r\n        :\r\n        <div>\r\n            <FiberManualRecordSharpIcon style={{fontSize: 12, color: \"crimson\", marginTop: 3}}/>\r\n            <span style={{marginLeft: 3}}>Offline</span>\r\n        </div>\r\n};\r\n\r\nconst getColorStatus = (status) => {\r\n\r\n    switch (status) {\r\n        case \"ACTIVE\":\r\n            return <div className=\"green-status\">{status}</div>;\r\n        case \"BLOCKED\":\r\n            return <div className=\"red-status\">{status}</div>;\r\n        default:\r\n            return <div>{status}</div>\r\n    }\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        role: store.user.roles[0]\r\n    }\r\n};\r\n\r\nexport const UserTable = connect(mapStateToProps)((props) => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [users, setUsers] = useState([]);\r\n    const [formDialogOpen, setFormDialogOpen] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState(-1);\r\n    const [selectedPhotoId, setSelectedPhotoId] = useState(-1);\r\n    const [toastComponent, showToastComponent] = useToast();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('status');\r\n    const [checkboxes, setCheckboxes] = useState(new Set([]));\r\n    const [mailDialog, setMailDialog] = useState(false);\r\n\r\n    const role = props.role;\r\n    const REMOVE_TITLE = \"Do you want to remove the user ?\";\r\n    const maxSizeOfImg = 12000000;\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        let file = e.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        if (file !== undefined) {\r\n            if (file.type.match(\"image.*\")) {\r\n\r\n                if (file.size > maxSizeOfImg) {\r\n                    showToastComponent(\"File is to large. Max size is :\" + maxSizeOfImg / 1000000 + \"MB\", \"error\");\r\n                    return;\r\n                }\r\n\r\n                if (file.name.length > 100) {\r\n                    showToastComponent(\"File name is too long (maximum is 100 characters)\", \"error\");\r\n                    return;\r\n                }\r\n\r\n                reader.readAsDataURL(file);\r\n\r\n            } else {\r\n                showToastComponent(\"Incorrect file type\", \"error\")\r\n            }\r\n        }\r\n\r\n        reader.onload = () => {\r\n            let photoInBase64 = reader.result;\r\n            makeRequest(\"PUT\", USER_URL + \"/photo/\" + selectedPhotoId, {photo: photoInBase64})\r\n                .then(res => {\r\n\r\n                        users.forEach(u => {\r\n                                if (u.id === selectedPhotoId) {\r\n                                    u.photo = photoInBase64;\r\n                                    showToastComponent(\"User's photo has been updated\");\r\n                                }\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n                .catch(error => handleRequestError(error, showToastComponent))\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        insertUsers()\r\n    }, []);\r\n\r\n    const insertUsers = () => {\r\n        makeRequest(\"GET\", USER_URL)\r\n            .then(res => {\r\n                setUsers(res.data.map(u => {\r\n                    if (u.photo !== null) {\r\n                        u.photo = u.photo + \"?time=\" + new Date().getTime();\r\n                    }\r\n                    return u;\r\n                }))\r\n            })\r\n            .catch(error => handleRequestError(error, showToastComponent))\r\n    };\r\n\r\n\r\n    const deleteSelectedUser = (id) => {\r\n        makeRequest(\"DELETE\", USER_URL + \"/\" + id)\r\n            .then(res => {\r\n                insertUsers();\r\n                showToastComponent(\"User has been deleted\", \"success\");\r\n            })\r\n            .catch(error => handleRequestError(error, showToastComponent))\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleTableRowClick = (user) => {\r\n        setSelectedUserId(user.id);\r\n        setFormDialogOpen(true);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleCheckBoxClick = (e, email) => {\r\n        if (e.target.checked) {\r\n            setCheckboxes((prevState) => new Set([...prevState, email]));\r\n        } else {\r\n            checkboxes.delete(email);\r\n            setCheckboxes(checkboxes);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <Paper className=\"table-paper\">\r\n                <TableContainer className=\"table-container\">\r\n                    <div className=\"table-header-wrapper\">\r\n                        <Typography variant=\"button\" display=\"block\" gutterBottom\r\n                                    style={{fontSize: 26, marginLeft: 15, marginTop: 15, textDecoration: \"underline\"}}\r\n                                    className=\"table-title\"\r\n                        >\r\n                            <LibraryBooksIcon/>\r\n                            Users\r\n                        </Typography>\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color={\"primary\"}\r\n                                onClick={() => {\r\n                                    if (checkboxes.size === 0) {\r\n                                        showToastComponent(\"You should choose at least one user\", \"warning\")\r\n                                    } else {\r\n                                        setMailDialog(true)\r\n                                    }\r\n                                }}\r\n                                className=\"add-table-btn\"\r\n                            >\r\n                                <EmailRoundedIcon/>\r\n                            </Button>\r\n                            <Button variant=\"contained\"\r\n                                    color={\"primary\"}\r\n                                    onClick={() => setFormDialogOpen(true)}\r\n                                    className=\"add-table-btn\"\r\n                            >\r\n                                <LibraryAddRoundedIcon/>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <Table aria-label=\"sticky table\">\r\n                        <EnhancedTableHead\r\n                            columns={columns}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            checkBoxes={true}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(users, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((user) => {\r\n\r\n                                    let roles = user.roles.map(role => role.charAt(0) + role.substring(1).toLowerCase());\r\n                                    let inPutId = \"hidden-input-user\" + user.id;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={user.id}\r\n                                        >\r\n                                            <TableCell key={user.email} align=\"center\">\r\n                                                <Checkbox\r\n                                                    onChange={(e) => handleCheckBoxClick(e, user.email)}\r\n                                                    size=\"small\"\r\n                                                    inputProps={{'aria-label': 'checkbox with small size'}}\r\n                                                    color=\"primary\"\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[0].id} align={columns[0].align}\r\n                                                       className=\"avatar-td\">\r\n                                                <Tooltip title=\"Click to edit photo\"\r\n                                                         arrow>\r\n                                                    <Avatar alt=\"avatar\"\r\n                                                            src={user.photo === null ? photo : user.photo}\r\n                                                            onClick={(e) => {\r\n                                                                setSelectedPhotoId(user.id);\r\n                                                                document.getElementById(inPutId).click();\r\n                                                            }}\r\n                                                    />\r\n                                                </Tooltip>\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    onChange={handleChange}\r\n                                                    multiple={false}\r\n                                                    size=\"1000\"\r\n                                                    accept=\"image/*\"\r\n                                                    hidden={true}\r\n                                                    id={inPutId}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[1].id} align={columns[1].align}>\r\n                                                <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                                                    <span style={{fontWeight: \"bold\"}}>{user.email}</span>\r\n                                                    {isOnlineDiv(user.online)}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[2].id} align={columns[2].align}>\r\n                                                {user.name}\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[3].id} align={columns[3].align}>\r\n                                                {user.surname}\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[4].id} align={columns[4].align}>\r\n                                                {roles}\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[5].id} align={columns[5].align}>\r\n                                                {user.birthday}\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[6].id} align={columns[6].align}>\r\n                                                {getColorStatus(user.status)}\r\n                                            </TableCell>\r\n                                            <TableCell key={columns[7].id} align={columns[7].align}>\r\n                                                <div className=\"table-delete-edit-div\">\r\n                                                    <Tooltip title=\"Click to edit user\"\r\n                                                             arrow>\r\n                                                        <Button\r\n                                                            className=\"menu-table-btn\"\r\n                                                            color={\"primary\"}\r\n                                                            startIcon={<EditIcon/>}\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleTableRowClick(user)\r\n                                                            }}/>\r\n                                                    </Tooltip>\r\n                                                    <ConfirmDeletingDialog\r\n                                                        id={user.id}\r\n                                                        onDelete={deleteSelectedUser}\r\n                                                        text={REMOVE_TITLE}\r\n                                                        toolTitle=\"Click to delete user\"\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 15, 20]}\r\n                    component=\"div\"\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n\r\n                <UserDialog\r\n                    open={formDialogOpen}\r\n                    userId={selectedUserId}\r\n                    onClose={() => {\r\n                        setFormDialogOpen(false);\r\n                        setSelectedUserId(-1);\r\n                    }}\r\n                    refreshTable={insertUsers}\r\n                    showToast={showToastComponent}\r\n                />\r\n                <MailDialog\r\n                    open={mailDialog}\r\n                    emails={checkboxes}\r\n                    onClose={() => {\r\n                        setMailDialog(false);\r\n                    }}\r\n                    showToast={showToastComponent}\r\n                />\r\n\r\n                {toastComponent}\r\n            </Paper>\r\n        </main>\r\n    );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}