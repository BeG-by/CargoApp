{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\map\\\\driver-map.js\";\nimport React, { useState } from \"react\";\nimport { InfoWindow } from \"@react-google-maps/api\";\nimport { dateToString } from \"./utils\";\nimport Button from \"@material-ui/core/Button\";\nimport AbstractMap from \"./abstract-map\";\nvar NO_MATTER_NUMBER = -1;\nexport default function DriverMap(props) {\n  var markers = props.markers;\n  var onMarkerPass = props.onMarkerPass;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedMarker = _useState2[0],\n      setSelectedMarker = _useState2[1];\n\n  var _useState3 = useState(NO_MATTER_NUMBER),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedMarkerIndex = _useState4[0],\n      setSelectedMarkerIndex = _useState4[1];\n\n  var handleMarkerPass = function handleMarkerPass(marker) {\n    setSelectedMarker(null);\n    onMarkerPass(marker);\n  };\n\n  var handleMarkerClick = function handleMarkerClick(marker, markerIndex) {\n    setSelectedMarker(marker);\n    setSelectedMarkerIndex(markerIndex + 1);\n  };\n\n  var InfoWindowComponent = selectedMarker === null ? null : React.createElement(InfoWindow, {\n    position: {\n      lat: selectedMarker.lat,\n      lng: selectedMarker.lng\n    },\n    onCloseClick: function onCloseClick() {\n      return setSelectedMarker(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, selectedMarker.isPassed ? React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, \"[\" + selectedMarkerIndex + \"] Point\"), React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, dateToString(selectedMarker.passageDate))) : React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"[\" + selectedMarkerIndex + \"] Point\"), React.createElement(Button, {\n    onClick: function onClick() {\n      return handleMarkerPass(selectedMarker);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"Pass point\"))));\n  return React.createElement(AbstractMap, {\n    markers: markers,\n    onMapClick: function onMapClick() {\n      return setSelectedMarker(null);\n    },\n    onMarkerClick: handleMarkerClick,\n    infoWindowComponent: InfoWindowComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/map/driver-map.js"],"names":["React","useState","InfoWindow","dateToString","Button","AbstractMap","NO_MATTER_NUMBER","DriverMap","props","markers","onMarkerPass","selectedMarker","setSelectedMarker","selectedMarkerIndex","setSelectedMarkerIndex","handleMarkerPass","marker","handleMarkerClick","markerIndex","InfoWindowComponent","lat","lng","isPassed","passageDate"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,YAAR;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP;AAEA,IAAMC,gBAAgB,GAAG,CAAC,CAA1B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,MAAMC,YAAY,GAAGF,KAAK,CAACE,YAA3B;;AAFqC,kBAIOT,QAAQ,CAAC,IAAD,CAJf;AAAA;AAAA,MAI9BU,cAJ8B;AAAA,MAIdC,iBAJc;;AAAA,mBAKiBX,QAAQ,CAACK,gBAAD,CALzB;AAAA;AAAA,MAK9BO,mBAL8B;AAAA,MAKTC,sBALS;;AAOrC,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACjCJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,YAAY,CAACM,MAAD,CAAZ;AACH,GAHD;;AAKA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACD,MAAD,EAASE,WAAT,EAAyB;AAC/CN,IAAAA,iBAAiB,CAACI,MAAD,CAAjB;AACAF,IAAAA,sBAAsB,CAACI,WAAW,GAAG,CAAf,CAAtB;AACH,GAHD;;AAKA,MAAMC,mBAAmB,GACrBR,cAAc,KAAK,IAAnB,GAA0B,IAA1B,GACI,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAE;AAACS,MAAAA,GAAG,EAAET,cAAc,CAACS,GAArB;AAA0BC,MAAAA,GAAG,EAAEV,cAAc,CAACU;AAA9C,KADd;AAEI,IAAA,YAAY,EAAE;AAAA,aAAMT,iBAAiB,CAAC,IAAD,CAAvB;AAAA,KAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,cAAc,CAACW,QAAf,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAST,mBAAT,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,YAAY,CAACQ,cAAc,CAACY,WAAhB,CAAjB,CAFJ,CADH,GAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASV,mBAAT,aADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAME,gBAAgB,CAACJ,cAAD,CAAtB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAPR,CAJJ,CAFR;AAyBA,SACI,oBAAC,WAAD;AACI,IAAA,OAAO,EAAEF,OADb;AAEI,IAAA,UAAU,EAAE;AAAA,aAAMG,iBAAiB,CAAC,IAAD,CAAvB;AAAA,KAFhB;AAGI,IAAA,aAAa,EAAEK,iBAHnB;AAII,IAAA,mBAAmB,EAAEE,mBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH","sourcesContent":["import React, {useState} from \"react\";\r\nimport {InfoWindow} from \"@react-google-maps/api\";\r\nimport {dateToString} from \"./utils\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AbstractMap from \"./abstract-map\";\r\n\r\nconst NO_MATTER_NUMBER = -1;\r\n\r\nexport default function DriverMap(props) {\r\n    const markers = props.markers;\r\n    const onMarkerPass = props.onMarkerPass;\r\n\r\n    const [selectedMarker, setSelectedMarker] = useState(null);\r\n    const [selectedMarkerIndex, setSelectedMarkerIndex] = useState(NO_MATTER_NUMBER);\r\n\r\n    const handleMarkerPass = (marker) => {\r\n        setSelectedMarker(null);\r\n        onMarkerPass(marker);\r\n    }\r\n\r\n    const handleMarkerClick = (marker, markerIndex) => {\r\n        setSelectedMarker(marker);\r\n        setSelectedMarkerIndex(markerIndex + 1);\r\n    }\r\n\r\n    const InfoWindowComponent = (\r\n        selectedMarker === null ? null :\r\n            <InfoWindow\r\n                position={{lat: selectedMarker.lat, lng: selectedMarker.lng}}\r\n                onCloseClick={() => setSelectedMarker(null)}\r\n            >\r\n                <div>\r\n                    {selectedMarker.isPassed ?\r\n                        <div>\r\n                            <h2>{`[${selectedMarkerIndex}] Point`}</h2>\r\n                            <h3>{dateToString(selectedMarker.passageDate)}</h3>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <h2>{`[${selectedMarkerIndex}] Point`}</h2>\r\n                            <Button onClick={() => handleMarkerPass(selectedMarker)}>\r\n                                Pass point\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </InfoWindow>);\r\n\r\n\r\n    return (\r\n        <AbstractMap\r\n            markers={markers}\r\n            onMapClick={() => setSelectedMarker(null)}\r\n            onMarkerClick={handleMarkerClick}\r\n            infoWindowComponent={InfoWindowComponent}\r\n        />)\r\n}"]},"metadata":{},"sourceType":"module"}