{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\parts\\\\dialogs\\\\verify-invoice.js\";\n\nimport { OkButton } from \"../buttons/ok-button\";\nimport React from \"react\";\nimport { CancelButton } from \"../buttons/cancel-button\";\nimport { updateInvoiceStatus } from \"../../roles/manager/request-utils\";\nimport { withRouter } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport { RejectInvoiceValidation } from \"../validation/reject-invoice-validation\";\nimport { FillWaybillDialog } from \"./fill-waybill\";\nimport WaybillDialog from \"../../roles/manager/waybill-dialog\";\nimport { DialogWindow } from \"./dialog\";\nimport { FormikTextArea } from \"../util/formik-field\";\nexport var AssignVerificationInvoice = withRouter(function (props) {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedInvoice = _React$useState2[0],\n      setSelectedInvoice = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      form = _React$useState4[0],\n      setForm = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      waybillFillDialogOpen = _React$useState6[0],\n      setWaybillFillDialogOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      waybillDialogOpen = _React$useState8[0],\n      setWaybillDialogOpen = _React$useState8[1];\n\n  var handleClose = function handleClose() {\n    props.onClose();\n  };\n\n  var handleAssign = function handleAssign() {\n    props.onAssign();\n  };\n\n  var handleWaybillFill = function handleWaybillFill() {\n    setSelectedInvoice(props.invoice);\n    setForm(FillWaybillDialog(handleWaybillFormOpen, handleAssign));\n    setWaybillFillDialogOpen(true);\n  };\n\n  var handleWaybillFormOpen = function handleWaybillFormOpen() {\n    setWaybillFillDialogOpen(false);\n    setWaybillDialogOpen(true);\n  };\n\n  var handleVerify = function handleVerify() {\n    var invoice;\n    return _regeneratorRuntime.async(function handleVerify$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            invoice = {\n              id: props.invoice.id,\n              status: \"ACCEPTED\",\n              comment: \"Invoice checked, errors: none\"\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateInvoiceStatus(invoice));\n\n          case 3:\n            handleWaybillFill();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-signin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(\"i\", {\n    style: {\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Assign the invoice status as \\\"verified\\\"?\"), React.createElement(\"div\", {\n    className: \"btn-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(OkButton, {\n    content: \"OK\",\n    handleClick: handleVerify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), React.createElement(CancelButton, {\n    content: \"Cancel\",\n    handleClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }))), React.createElement(WaybillDialog, {\n    invoice: selectedInvoice,\n    open: waybillDialogOpen,\n    onClose: handleAssign,\n    onSave: handleAssign,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Confirmation\",\n    handleClose: handleAssign,\n    openDialog: waybillFillDialogOpen,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n});\nexport var RejectVerificationInvoice = withRouter(function (props) {\n  var handleReject = function handleReject(values) {\n    var invoice;\n    return _regeneratorRuntime.async(function handleReject$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            invoice = {\n              id: values.id,\n              status: values.status,\n              comment: values.comment\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(updateInvoiceStatus(invoice));\n\n          case 3:\n            props.onReject();\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleClose = function handleClose() {\n    props.onClose();\n  };\n\n  var comment = React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      id: props.invoice.id,\n      status: \"REJECTED\",\n      comment: \"\"\n    },\n    onSubmit: handleReject,\n    validationSchema: RejectInvoiceValidation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, React.createElement(FormikTextArea, {\n      formikProps: formProps,\n      id: \"comment\",\n      label: \"Comment\",\n      formikFieldName: \"comment\",\n      multiline: true,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), React.createElement(\"div\", {\n      className: \"btn-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Reject\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  });\n  return React.createElement(\"div\", {\n    className: \"form-signin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(\"i\", {\n    style: {\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Reject the incorrect invoice?\"), comment));\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/parts/dialogs/verify-invoice.js"],"names":["OkButton","React","CancelButton","updateInvoiceStatus","withRouter","Form","Formik","Button","RejectInvoiceValidation","FillWaybillDialog","WaybillDialog","DialogWindow","FormikTextArea","AssignVerificationInvoice","props","useState","selectedInvoice","setSelectedInvoice","form","setForm","waybillFillDialogOpen","setWaybillFillDialogOpen","waybillDialogOpen","setWaybillDialogOpen","handleClose","onClose","handleAssign","onAssign","handleWaybillFill","invoice","handleWaybillFormOpen","handleVerify","id","status","comment","fontSize","RejectVerificationInvoice","handleReject","values","onReject","formProps"],"mappings":"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","sourcesContent":["import {OkButton} from \"../buttons/ok-button\";\r\nimport React from \"react\";\r\nimport {CancelButton} from \"../buttons/cancel-button\";\r\nimport {updateInvoiceStatus} from \"../../roles/manager/request-utils\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Form, Formik} from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {RejectInvoiceValidation} from \"../validation/reject-invoice-validation\";\r\nimport {FillWaybillDialog} from \"./fill-waybill\";\r\nimport WaybillDialog from \"../../roles/manager/waybill-dialog\";\r\nimport {DialogWindow} from \"./dialog\";\r\nimport {FormikTextArea} from \"../util/formik-field\";\r\n\r\nexport const AssignVerificationInvoice = withRouter((props) => {\r\n    const [selectedInvoice, setSelectedInvoice] = React.useState({});\r\n    const [form, setForm] = React.useState(null);\r\n    const [waybillFillDialogOpen, setWaybillFillDialogOpen] = React.useState(false);\r\n    const [waybillDialogOpen, setWaybillDialogOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    }\r\n\r\n    const handleAssign = () => {\r\n        props.onAssign();\r\n    }\r\n\r\n    const handleWaybillFill = () => {\r\n        setSelectedInvoice(props.invoice);\r\n        setForm(FillWaybillDialog(handleWaybillFormOpen, handleAssign));\r\n        setWaybillFillDialogOpen(true);\r\n    }\r\n\r\n    const handleWaybillFormOpen = () => {\r\n        setWaybillFillDialogOpen(false);\r\n        setWaybillDialogOpen(true);\r\n    };\r\n\r\n    const handleVerify = async () => {\r\n        const invoice = {\r\n            id: props.invoice.id,\r\n            status: \"ACCEPTED\",\r\n            comment: \"Invoice checked, errors: none\"\r\n        };\r\n        await updateInvoiceStatus(invoice);\r\n        handleWaybillFill();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-signin\">\r\n            <div>\r\n                <i style={{fontSize: 16}}>Assign the invoice status as \"verified\"?</i>\r\n                <div className='btn-row'>\r\n                    <OkButton content='OK' handleClick={handleVerify}/>\r\n                    <CancelButton content='Cancel' handleClick={handleClose}/>\r\n                </div>\r\n            </div>\r\n\r\n            <WaybillDialog\r\n                invoice={selectedInvoice}\r\n                open={waybillDialogOpen}\r\n                onClose={handleAssign}\r\n                onSave={handleAssign}\r\n            />\r\n\r\n            <DialogWindow\r\n                dialogTitle=\"Confirmation\"\r\n                handleClose={handleAssign}\r\n                openDialog={waybillFillDialogOpen}\r\n                form={form}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport const RejectVerificationInvoice = withRouter((props) => {\r\n    const handleReject = async (values) => {\r\n        const invoice = {\r\n            id: values.id,\r\n            status: values.status,\r\n            comment: values.comment\r\n        };\r\n        await updateInvoiceStatus(invoice);\r\n        props.onReject()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.onClose();\r\n    }\r\n\r\n    const comment = <Formik\r\n        enableReinitialize\r\n        initialValues={{\r\n            id: props.invoice.id,\r\n            status: \"REJECTED\",\r\n            comment: \"\"\r\n        }}\r\n        onSubmit={handleReject}\r\n        validationSchema={RejectInvoiceValidation}\r\n    >\r\n        {(formProps) => (\r\n            <Form>\r\n                <FormikTextArea\r\n                    formikProps={formProps}\r\n                    id={\"comment\"}\r\n                    label={\"Comment\"}\r\n                    formikFieldName={\"comment\"}\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                />\r\n                <div className=\"btn-row\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Reject\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='secondary'\r\n                        onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        )}\r\n    </Formik>;\r\n\r\n    return (\r\n        <div className=\"form-signin\">\r\n            <div>\r\n                <i style={{fontSize: 16}}>Reject the incorrect invoice?</i>\r\n                {comment}\r\n            </div>\r\n        </div>);\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}