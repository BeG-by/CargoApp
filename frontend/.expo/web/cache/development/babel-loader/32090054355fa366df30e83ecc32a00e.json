{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\web_socket\\\\hooks\\\\handlers\\\\use-invoice-status-update-message-handler.js\";\nimport React from \"react\";\nimport { INVOICE_NOTIFICATION_DATA_URL, makeRequest } from \"../../../components/parts/util/request-util\";\nimport useInvoiceConfirmationForm from \"../forms/use-invoice-confirmation-form\";\nimport useInvoiceEditForm from \"../forms/use-invoice-edit-form\";\nexport default function useInvoiceStatusUpdateMessageHandler() {\n  var _this = this;\n\n  var _useInvoiceConfirmati = useInvoiceConfirmationForm(),\n      _useInvoiceConfirmati2 = _slicedToArray(_useInvoiceConfirmati, 2),\n      InvoiceConfirmationDialogComponent = _useInvoiceConfirmati2[0],\n      openInvoiceConfirmationDialogComponent = _useInvoiceConfirmati2[1];\n\n  var _useInvoiceEditForm = useInvoiceEditForm(),\n      _useInvoiceEditForm2 = _slicedToArray(_useInvoiceEditForm, 2),\n      InvoiceEditDialogComponent = _useInvoiceEditForm2[0],\n      openEditInvoiceDialog = _useInvoiceEditForm2[1];\n\n  var loadInvoiceNotificationData = function loadInvoiceNotificationData(invoiceId) {\n    return makeRequest(\"GET\", INVOICE_NOTIFICATION_DATA_URL + \"/\" + invoiceId);\n  };\n\n  var convertToStringAndFormat = function convertToStringAndFormat(invoiceNotificationData) {\n    var data = invoiceNotificationData;\n    return [\"Number: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }\n    }, data.number), React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), \"Driver: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, data.driver.name, \" \", data.driver.surname), React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), \"Registered by: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 32\n      }\n    }, data.registrationUser.name, \" \", data.registrationUser.surname), React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), \"New status: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }, data.status)];\n  };\n\n  var openNecessaryDialog = function openNecessaryDialog(messageData, formatData, openActionToastCallback, showNotificationToastCallback) {\n    var title = \"\";\n\n    switch (messageData.newStatus) {\n      case \"REJECTED\":\n        title = \"Invoice was rejected\";\n        openActionToastCallback(title, formatData, function () {\n          return openEditInvoiceDialog(messageData.invoiceId, showNotificationToastCallback);\n        });\n        break;\n\n      case \"ACCEPTED\":\n        title = \"Invoice was accepted\";\n        openActionToastCallback(title, formatData, function () {\n          return openInvoiceConfirmationDialogComponent(messageData.invoiceId);\n        });\n        break;\n\n      default:\n        title = \"Invoice status updated\";\n        openActionToastCallback(title, formatData, function () {\n          return openInvoiceConfirmationDialogComponent(messageData.invoiceId);\n        });\n        break;\n    }\n  };\n\n  var handleNewInvoiceMessage = function handleNewInvoiceMessage(messageData, openActionToastCallback, showNotificationToastCallback) {\n    var response, formatData;\n    return _regeneratorRuntime.async(function handleNewInvoiceMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(loadInvoiceNotificationData(messageData.invoiceId));\n\n          case 2:\n            response = _context.sent;\n            formatData = convertToStringAndFormat(response.data);\n            openNecessaryDialog(messageData, formatData, openActionToastCallback, showNotificationToastCallback);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ComboComponent = React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, InvoiceConfirmationDialogComponent, InvoiceEditDialogComponent);\n  return [ComboComponent, handleNewInvoiceMessage];\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/web_socket/hooks/handlers/use-invoice-status-update-message-handler.js"],"names":["React","INVOICE_NOTIFICATION_DATA_URL","makeRequest","useInvoiceConfirmationForm","useInvoiceEditForm","useInvoiceStatusUpdateMessageHandler","InvoiceConfirmationDialogComponent","openInvoiceConfirmationDialogComponent","InvoiceEditDialogComponent","openEditInvoiceDialog","loadInvoiceNotificationData","invoiceId","convertToStringAndFormat","invoiceNotificationData","data","number","driver","name","surname","registrationUser","status","openNecessaryDialog","messageData","formatData","openActionToastCallback","showNotificationToastCallback","title","newStatus","handleNewInvoiceMessage","response","ComboComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {INVOICE_NOTIFICATION_DATA_URL, makeRequest} from \"../../../components/parts/util/request-util\";\r\nimport useInvoiceConfirmationForm from \"../forms/use-invoice-confirmation-form\";\r\nimport useInvoiceEditForm from \"../forms/use-invoice-edit-form\";\r\n\r\nexport default function useInvoiceStatusUpdateMessageHandler() {\r\n    const [InvoiceConfirmationDialogComponent, openInvoiceConfirmationDialogComponent] = useInvoiceConfirmationForm();\r\n    const [InvoiceEditDialogComponent, openEditInvoiceDialog] = useInvoiceEditForm();\r\n\r\n    const loadInvoiceNotificationData = (invoiceId) => {\r\n        return makeRequest(\"GET\", INVOICE_NOTIFICATION_DATA_URL + \"/\" + invoiceId);\r\n    }\r\n\r\n    const convertToStringAndFormat = (invoiceNotificationData) => {\r\n        const data = invoiceNotificationData;\r\n        return [\r\n            \"Number: \", <strong>{data.number}</strong>,\r\n            <br/>,\r\n            \"Driver: \", <strong>{data.driver.name} {data.driver.surname}</strong>,\r\n            <br/>,\r\n            \"Registered by: \", <strong>{data.registrationUser.name} {data.registrationUser.surname}</strong>,\r\n            <br/>,\r\n            \"New status: \", <strong>{data.status}</strong>,\r\n        ]\r\n    }\r\n\r\n    const openNecessaryDialog = (messageData, formatData, openActionToastCallback, showNotificationToastCallback) => {\r\n        let title = \"\";\r\n        switch (messageData.newStatus) {\r\n            case \"REJECTED\":\r\n                title = `Invoice was rejected`;\r\n                openActionToastCallback(title,\r\n                    formatData,\r\n                    () => openEditInvoiceDialog(messageData.invoiceId, showNotificationToastCallback))\r\n                break;\r\n            case \"ACCEPTED\":\r\n                title = `Invoice was accepted`\r\n                openActionToastCallback(\r\n                    title,\r\n                    formatData,\r\n                    () => openInvoiceConfirmationDialogComponent(messageData.invoiceId));\r\n                break;\r\n            default:\r\n                title = `Invoice status updated`\r\n                openActionToastCallback(\r\n                    title,\r\n                    formatData,\r\n                    () => openInvoiceConfirmationDialogComponent(messageData.invoiceId));\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleNewInvoiceMessage = async (messageData, openActionToastCallback, showNotificationToastCallback) => {\r\n        let response = await loadInvoiceNotificationData(messageData.invoiceId);\r\n        let formatData = convertToStringAndFormat(response.data);\r\n        openNecessaryDialog(messageData, formatData, openActionToastCallback, showNotificationToastCallback);\r\n    }\r\n\r\n    const ComboComponent = (\r\n        <div>\r\n            {InvoiceConfirmationDialogComponent}\r\n            {InvoiceEditDialogComponent}\r\n        </div>\r\n    )\r\n\r\n    return [ComboComponent, handleNewInvoiceMessage]\r\n}"]},"metadata":{},"sourceType":"module"}