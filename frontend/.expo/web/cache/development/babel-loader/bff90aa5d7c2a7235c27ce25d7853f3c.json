{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\forms\\\\profile-form\\\\password-dialog.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { handleRequestError, makeRequest, USER_URL } from \"../../parts/util/request-util\";\nimport { Form, Formik } from \"formik\";\nimport FormikField from \"../../parts/util/formik-field\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { PasswordScheme } from \"../../parts/validation/profile-validation\";\nexport default function ChangePassword(props) {\n  var _this = this;\n\n  var showToastComponent = props.showToastComponent,\n      open = props.open,\n      onClose = props.onClose;\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(\"span\", {\n    id: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Password\"), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: onClose,\n    className: \"close-user-dialog-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }))), React.createElement(DialogContent, {\n    className: \"password-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    validationSchema: PasswordScheme,\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      var passwordRequest = {\n        oldPassword: values.oldPassword,\n        newPassword: values.newPassword,\n        confirmNewPassword: values.confirmNewPassword\n      };\n\n      if (passwordRequest.newPassword !== passwordRequest.confirmNewPassword) {\n        showToastComponent(\"Passwords don't match \", \"error\");\n      } else {\n        makeRequest(\"PUT\", USER_URL + \"/password\", passwordRequest).then(function (res) {\n          showToastComponent(\"Password has been updated\", \"success\");\n          onClose();\n        }).catch(function (error) {\n          return handleRequestError(error, showToastComponent);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      className: \"password-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"oldPassword\",\n      label: \"Old password\",\n      formikFieldName: \"oldPassword\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"newPassword\",\n      label: \"New password\",\n      formikFieldName: \"newPassword\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"confirmNewPassword\",\n      label: \"Confirm new password\",\n      formikFieldName: \"confirmNewPassword\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }), React.createElement(\"div\", {\n      className: \"btn-form-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: formProps.listener,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, \"Change password\")));\n  })));\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/forms/profile-form/password-dialog.js"],"names":["React","Button","Dialog","DialogTitle","DialogContent","handleRequestError","makeRequest","USER_URL","Form","Formik","FormikField","IconButton","CloseIcon","PasswordScheme","ChangePassword","props","showToastComponent","open","onClose","oldPassword","newPassword","confirmNewPassword","values","passwordRequest","then","res","catch","error","formProps","listener"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport {handleRequestError, makeRequest, USER_URL} from \"../../parts/util/request-util\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormikField from \"../../parts/util/formik-field\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {PasswordScheme} from \"../../parts/validation/profile-validation\";\r\n\r\n\r\nexport default function ChangePassword(props) {\r\n\r\n    const {showToastComponent, open, onClose} = props;\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose}>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                <span id=\"form-title\">Password</span>\r\n                <IconButton aria-label=\"close\"\r\n                            onClick={onClose}\r\n                            className=\"close-user-dialog-btn\"\r\n                >\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent className=\"password-dialog\">\r\n                <Formik\r\n                    enableReinitialize\r\n                    validationSchema={PasswordScheme}\r\n                    initialValues={{\r\n                        oldPassword: \"\",\r\n                        newPassword: \"\",\r\n                        confirmNewPassword: \"\"\r\n                    }}\r\n                    onSubmit={(values) => {\r\n\r\n                        const passwordRequest = {\r\n                            oldPassword: values.oldPassword,\r\n                            newPassword: values.newPassword,\r\n                            confirmNewPassword: values.confirmNewPassword\r\n                        };\r\n\r\n                        if (passwordRequest.newPassword !== passwordRequest.confirmNewPassword) {\r\n                            showToastComponent(\"Passwords don't match \", \"error\");\r\n                        } else {\r\n\r\n                            makeRequest(\"PUT\", USER_URL + \"/password\", passwordRequest)\r\n                                .then(res => {\r\n                                    showToastComponent(\"Password has been updated\", \"success\");\r\n                                    onClose();\r\n                                }).catch(error => handleRequestError(error, showToastComponent))\r\n                        }\r\n\r\n                    }}\r\n                >\r\n                    {(formProps) => {\r\n                        return (\r\n                            <Form className=\"password-form\">\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"oldPassword\"}\r\n                                    label={\"Old password\"}\r\n                                    formikFieldName={\"oldPassword\"}\r\n                                    type=\"password\"\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"newPassword\"}\r\n                                    label={\"New password\"}\r\n                                    formikFieldName={\"newPassword\"}\r\n                                    type=\"password\"\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"confirmNewPassword\"}\r\n                                    label={\"Confirm new password\"}\r\n                                    formikFieldName={\"confirmNewPassword\"}\r\n                                    type=\"password\"\r\n                                />\r\n                                <div className=\"btn-form-wrapper\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        disabled={formProps.listener}\r\n                                    >\r\n                                        Change password\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}