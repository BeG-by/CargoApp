{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\forms\\\\registration\\\\registration-form.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Formik } from \"formik\";\nimport FormikField from \"../../parts/util/formik-field\";\nimport CustomDatePicker from \"../../roles/admin/custom-date-picker\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withRouter } from \"react-router-dom\";\nimport useToast from \"../../parts/toast-notification/useToast\";\nimport { handleRequestError, makeRequest, REGISTRATION_URL } from \"../../parts/util/request-util\";\nimport \"../forms.css\";\nimport { RegistrationValidation } from \"../../parts/validation/registartion-form\";\nexport var RegistrationForm = function RegistrationForm(props) {\n  var _useToast = useToast(),\n      _useToast2 = _slicedToArray(_useToast, 2),\n      toast = _useToast2[0],\n      showToast = _useToast2[1];\n\n  var _useState = useState({\n    code: \"\",\n    role: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      params = _useState2[0],\n      setParams = _useState2[1];\n\n  useEffect(function () {\n    var href = window.location.href;\n    var url = new URL(href);\n    var code = url.searchParams.get(\"code\");\n    var role = url.searchParams.get(\"role\");\n\n    if (code === null || code === undefined) {\n      props.history.push(\"/\");\n    }\n\n    setParams({\n      code: code,\n      role: role\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    style: {\n      width: 400,\n      marginBottom: 80,\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\",\n      confirm: \"\",\n      name: \"\",\n      surname: \"\",\n      patronymic: \"\",\n      birthday: \"1990-01-01\",\n      phone: \"\",\n      passport: \"\",\n      country: \"\",\n      city: \"\",\n      street: \"\",\n      house: \"\",\n      flat: \"\"\n    },\n    validationSchema: RegistrationValidation,\n    onSubmit: function onSubmit(values) {\n      var user = {\n        password: values.password,\n        confirmPassword: values.confirm,\n        name: values.name,\n        surname: values.surname,\n        patronymic: values.patronymic,\n        birthday: values.birthday,\n        phone: values.phone,\n        passport: values.passport,\n        address: {\n          country: values.country,\n          city: values.city,\n          street: values.street,\n          house: values.house,\n          flat: values.flat\n        },\n        activationCode: params.code\n      };\n\n      if (user.password === user.confirmPassword) {\n        makeRequest(\"POST\", REGISTRATION_URL, user).then(function (res) {\n          showToast(res.data, \"success\");\n          setTimeout(function () {\n            return window.location.href = \"/\";\n          }, 2000);\n        }).catch(function (error) {\n          return handleRequestError(error, showToast);\n        });\n      } else {\n        showToast(\"Passwords don't match\", \"error\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, React.createElement(\"header\", {\n      className: \"reg-header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"Registration\"), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"password\",\n      label: \"Password\",\n      formikFieldName: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"confirm\",\n      label: \"Confirm password\",\n      formikFieldName: \"confirm\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"name\",\n      label: \"Name\",\n      formikFieldName: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"surname\",\n      label: \"Surname\",\n      formikFieldName: \"surname\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"patronymic\",\n      label: \"Patronymic\",\n      formikFieldName: \"patronymic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"passport\",\n      label: \"Passport\",\n      formikFieldName: \"passport\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }), React.createElement(CustomDatePicker, {\n      formikProps: formProps,\n      id: \"birthday\",\n      label: \"Date of birth\",\n      formikFieldName: \"birthday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"phone\",\n      label: \"Phone\",\n      formikFieldName: \"phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"country\",\n      label: \"Country\",\n      formikFieldName: \"country\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"city\",\n      label: \"City\",\n      formikFieldName: \"city\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"street\",\n      label: \"Street\",\n      formikFieldName: \"street\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"house\",\n      label: \"House\",\n      formikFieldName: \"house\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"flat\",\n      label: \"Flat\",\n      formikFieldName: \"flat\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 7,\n        marginBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: formProps.listener,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, \"Confirm\")));\n  })), toast);\n};\nexport default withRouter(RegistrationForm);","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/forms/registration/registration-form.js"],"names":["React","useEffect","useState","Button","Form","Formik","FormikField","CustomDatePicker","Paper","withRouter","useToast","handleRequestError","makeRequest","REGISTRATION_URL","RegistrationValidation","RegistrationForm","props","toast","showToast","code","role","params","setParams","href","window","location","url","URL","searchParams","get","undefined","history","push","width","marginBottom","padding","id","password","confirm","name","surname","patronymic","birthday","phone","passport","country","city","street","house","flat","values","user","confirmPassword","address","activationCode","then","res","data","setTimeout","catch","error","formProps","textAlign","marginTop","listener"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormikField from \"../../parts/util/formik-field\";\r\nimport CustomDatePicker from \"../../roles/admin/custom-date-picker\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport useToast from \"../../parts/toast-notification/useToast\";\r\nimport {handleRequestError, makeRequest, REGISTRATION_URL} from \"../../parts/util/request-util\";\r\nimport \"../forms.css\"\r\nimport {RegistrationValidation} from \"../../parts/validation/registartion-form\";\r\n\r\n\r\nexport const RegistrationForm = (props) => {\r\n\r\n    const [toast, showToast] = useToast();\r\n    const [params, setParams] = useState({code: \"\", role: \"\"});\r\n\r\n\r\n    useEffect(() => {\r\n        let href = window.location.href;\r\n        let url = new URL(href);\r\n        let code = url.searchParams.get(\"code\");\r\n        let role = url.searchParams.get(\"role\");\r\n\r\n        if (code === null || code === undefined) {\r\n            props.history.push(\"/\")\r\n        }\r\n\r\n        setParams({code: code, role: role})\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <Paper style={{width: 400, marginBottom: 80, padding: 20}}>\r\n                <Formik\r\n                    initialValues={{\r\n                        id: \"\",\r\n                        password: \"\",\r\n                        confirm: \"\",\r\n                        name: \"\",\r\n                        surname: \"\",\r\n                        patronymic: \"\",\r\n                        birthday: \"1990-01-01\",\r\n                        phone: \"\",\r\n                        passport: \"\",\r\n                        country: \"\",\r\n                        city: \"\",\r\n                        street: \"\",\r\n                        house: \"\",\r\n                        flat: \"\",\r\n                    }}\r\n\r\n                    validationSchema={RegistrationValidation}\r\n                    onSubmit={(values) => {\r\n\r\n                        const user = {\r\n                            password: values.password,\r\n                            confirmPassword: values.confirm,\r\n                            name: values.name,\r\n                            surname: values.surname,\r\n                            patronymic: values.patronymic,\r\n                            birthday: values.birthday,\r\n                            phone: values.phone,\r\n                            passport: values.passport,\r\n                            address: {\r\n                                country: values.country,\r\n                                city: values.city,\r\n                                street: values.street,\r\n                                house: values.house,\r\n                                flat: values.flat\r\n                            },\r\n                            activationCode: params.code\r\n                        };\r\n\r\n\r\n                        if (user.password === user.confirmPassword) {\r\n                            makeRequest(\"POST\", REGISTRATION_URL, user)\r\n                                .then(res => {\r\n                                    showToast(res.data, \"success\");\r\n                                    setTimeout(() => window.location.href = \"/\", 2000)\r\n                                })\r\n                                .catch(error => handleRequestError(error, showToast))\r\n                        } else {\r\n                            showToast(\"Passwords don't match\", \"error\")\r\n                        }\r\n\r\n                    }}\r\n                >\r\n                    {(formProps) => {\r\n                        return (\r\n                            <Form>\r\n                                <header className=\"reg-header\">\r\n                                    Registration\r\n                                </header>\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"password\"}\r\n                                    label={\"Password\"}\r\n                                    formikFieldName={\"password\"}\r\n                                    type={\"password\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"confirm\"}\r\n                                    label={\"Confirm password\"}\r\n                                    formikFieldName={\"confirm\"}\r\n                                    type={\"password\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"name\"}\r\n                                    label={\"Name\"}\r\n                                    formikFieldName={\"name\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"surname\"}\r\n                                    label={\"Surname\"}\r\n                                    formikFieldName={\"surname\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"patronymic\"}\r\n                                    label={\"Patronymic\"}\r\n                                    formikFieldName={\"patronymic\"}\r\n                                />\r\n\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"passport\"}\r\n                                    label={\"Passport\"}\r\n                                    formikFieldName={\"passport\"}\r\n                                />\r\n\r\n\r\n                                <CustomDatePicker\r\n                                    formikProps={formProps}\r\n                                    id={\"birthday\"}\r\n                                    label={\"Date of birth\"}\r\n                                    formikFieldName={\"birthday\"}/>\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"phone\"}\r\n                                    label={\"Phone\"}\r\n                                    formikFieldName={\"phone\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"country\"}\r\n                                    label={\"Country\"}\r\n                                    formikFieldName={\"country\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"city\"}\r\n                                    label={\"City\"}\r\n                                    formikFieldName={\"city\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"street\"}\r\n                                    label={\"Street\"}\r\n                                    formikFieldName={\"street\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"house\"}\r\n                                    label={\"House\"}\r\n                                    formikFieldName={\"house\"}\r\n                                />\r\n                                <FormikField\r\n                                    formikProps={formProps}\r\n                                    id={\"flat\"}\r\n                                    label={\"Flat\"}\r\n                                    formikFieldName={\"flat\"}\r\n                                />\r\n                                <div style={{textAlign: \"center\", marginTop: 7, marginBottom: 5}}>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        disabled={formProps.listener}\r\n                                    >\r\n                                        Confirm\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </Paper>\r\n            {toast}\r\n        </main>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(RegistrationForm);\r\n"]},"metadata":{},"sourceType":"module"}