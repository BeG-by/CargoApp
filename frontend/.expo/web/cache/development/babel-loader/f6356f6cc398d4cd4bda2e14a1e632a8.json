{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\admin\\\\autos\\\\auto-dialog.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Form, Formik } from \"formik\";\nimport FormikField from \"../../../parts/util/formik-field\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { AUTO_URL, handleRequestError, makeRequest } from \"../../../parts/util/request-util\";\nimport { AutoStatusSelector, AutoTypeSelector } from \"./auto-selectors\";\nimport CustomDatePicker from \"../custom-date-picker\";\nimport \"./auto-form.css\";\nimport { AutoScheme } from \"../../../parts/validation/auto-validation\";\nvar EMPTY_AUTO = {\n  id: -1,\n  mark: \"\",\n  number: \"\",\n  autoType: \"\",\n  consumption: \"\",\n  maxLoad: \"\",\n  dateOfIssue: \"2000-01-01\",\n  status: \"\"\n};\nexport var AutoDialog = function AutoDialog(props) {\n  var open = props.open,\n      onClose = props.onClose,\n      autoId = props.autoId,\n      refreshTable = props.refreshTable,\n      showToast = props.showToast;\n\n  var _useState = useState(EMPTY_AUTO),\n      _useState2 = _slicedToArray(_useState, 2),\n      auto = _useState2[0],\n      setAuto = _useState2[1];\n\n  var TITLE = \"Auto\";\n  var isUpdateForm = autoId >= 0;\n  useEffect(function () {\n    if (isUpdateForm) {\n      makeRequest(\"GET\", AUTO_URL + \"/\" + autoId).then(function (res) {\n        setAuto(res.data);\n      }).catch(function (error) {\n        return handleRequestError(error, showToast);\n      });\n    }\n  }, [autoId]);\n\n  var handleClose = function handleClose() {\n    setAuto(EMPTY_AUTO);\n    onClose();\n  };\n\n  return React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(\"span\", {\n    id: \"form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, TITLE), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))), React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    validationSchema: AutoScheme,\n    initialValues: {\n      id: autoId,\n      mark: auto.mark,\n      number: auto.number,\n      autoType: auto.autoType,\n      consumption: auto.consumption,\n      maxLoad: auto.maxLoad,\n      dateOfIssue: auto.dateOfIssue,\n      status: auto.status\n    },\n    onSubmit: function onSubmit(values) {\n      var auto = {\n        mark: values.mark,\n        number: values.number,\n        autoType: values.autoType,\n        consumption: values.consumption,\n        maxLoad: values.maxLoad,\n        dateOfIssue: values.dateOfIssue,\n        status: values.status\n      };\n\n      if (isUpdateForm) {\n        auto.id = values.id;\n        makeRequest(\"PUT\", AUTO_URL, auto).then(function (res) {\n          handleClose();\n          refreshTable();\n          showToast(\"Auto has been updated\", \"success\");\n        }).catch(function (error) {\n          return handleRequestError(error, showToast);\n        });\n      } else {\n        makeRequest(\"POST\", AUTO_URL, auto).then(function (res) {\n          handleClose();\n          refreshTable();\n          showToast(\"Auto has been created\", \"success\");\n        }).catch(function (error) {\n          return handleRequestError(error, showToast);\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      className: \"auto-form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"mark\",\n      label: \"Mark\",\n      formikFieldName: \"mark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"number\",\n      label: \"Number\",\n      formikFieldName: \"number\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }), React.createElement(AutoTypeSelector, {\n      formikProps: formProps,\n      id: \"autoType\",\n      label: \"Type\",\n      formikFieldName: \"autoType\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"consumption\",\n      label: \"Consumption (liter / 100 km)\",\n      formikFieldName: \"consumption\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"maxLoad\",\n      label: \"Max load (kg)\",\n      formikFieldName: \"maxLoad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }), React.createElement(CustomDatePicker, {\n      formikProps: formProps,\n      id: \"dateOfIssue\",\n      label: \"Date of issue\",\n      formikFieldName: \"dateOfIssue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }), isUpdateForm ? React.createElement(AutoStatusSelector, {\n      formikProps: formProps,\n      id: \"status\",\n      label: \"Status\",\n      formikFieldName: \"status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 53\n      }\n    }) : \"\", React.createElement(\"div\", {\n      className: \"auto-btn-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: formProps.listener,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, isUpdateForm ? \"Update\" : \"Save\")));\n  }))));\n};","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/admin/autos/auto-dialog.js"],"names":["React","useEffect","useState","Button","Dialog","DialogContent","DialogTitle","Form","Formik","FormikField","IconButton","CloseIcon","AUTO_URL","handleRequestError","makeRequest","AutoStatusSelector","AutoTypeSelector","CustomDatePicker","AutoScheme","EMPTY_AUTO","id","mark","number","autoType","consumption","maxLoad","dateOfIssue","status","AutoDialog","props","open","onClose","autoId","refreshTable","showToast","auto","setAuto","TITLE","isUpdateForm","then","res","data","catch","error","handleClose","values","formProps","listener"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormikField from \"../../../parts/util/formik-field\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {AUTO_URL, handleRequestError, makeRequest} from \"../../../parts/util/request-util\"\r\nimport {AutoStatusSelector, AutoTypeSelector} from \"./auto-selectors\";\r\nimport CustomDatePicker from \"../custom-date-picker\";\r\nimport \"./auto-form.css\"\r\nimport {AutoScheme} from \"../../../parts/validation/auto-validation\";\r\n\r\n\r\nconst EMPTY_AUTO = {\r\n    id: -1,\r\n    mark: \"\",\r\n    number: \"\",\r\n    autoType: \"\",\r\n    consumption: \"\",\r\n    maxLoad: \"\",\r\n    dateOfIssue: \"2000-01-01\",\r\n    status: \"\",\r\n};\r\n\r\n\r\nexport const AutoDialog = (props) => {\r\n    const {open, onClose, autoId, refreshTable, showToast} = props;\r\n    const [auto, setAuto] = useState(EMPTY_AUTO);\r\n    const TITLE = \"Auto\";\r\n\r\n    const isUpdateForm = autoId >= 0;\r\n\r\n    useEffect(() => {\r\n\r\n        if (isUpdateForm) {\r\n            makeRequest(\"GET\", AUTO_URL + \"/\" + autoId)\r\n                .then(res => {\r\n                    setAuto(res.data);\r\n                }).catch(error => handleRequestError(error, showToast))\r\n        }\r\n    }, [autoId]);\r\n\r\n    const handleClose = () => {\r\n        setAuto(EMPTY_AUTO);\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    <span id=\"form-title\">{TITLE}</span>\r\n                    <IconButton aria-label=\"close\"\r\n                                onClick={handleClose}\r\n                    >\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        validationSchema={AutoScheme}\r\n                        initialValues={{\r\n                            id: autoId,\r\n                            mark: auto.mark,\r\n                            number: auto.number,\r\n                            autoType: auto.autoType,\r\n                            consumption: auto.consumption,\r\n                            maxLoad: auto.maxLoad,\r\n                            dateOfIssue: auto.dateOfIssue,\r\n                            status: auto.status,\r\n                        }}\r\n                        onSubmit={(values) => {\r\n\r\n                            const auto = {\r\n                                mark: values.mark,\r\n                                number: values.number,\r\n                                autoType: values.autoType,\r\n                                consumption: values.consumption,\r\n                                maxLoad: values.maxLoad,\r\n                                dateOfIssue: values.dateOfIssue,\r\n                                status: values.status,\r\n                            };\r\n\r\n                            if (isUpdateForm) {\r\n\r\n                                auto.id = values.id;\r\n\r\n                                makeRequest(\"PUT\", AUTO_URL, auto)\r\n                                    .then(res => {\r\n                                        handleClose();\r\n                                        refreshTable();\r\n                                        showToast(\"Auto has been updated\", \"success\")\r\n                                    })\r\n                                    .catch(error => handleRequestError(error, showToast))\r\n\r\n                            } else {\r\n\r\n                                makeRequest(\"POST\", AUTO_URL, auto)\r\n                                    .then(res => {\r\n                                        handleClose();\r\n                                        refreshTable();\r\n                                        showToast(\"Auto has been created\", \"success\")\r\n                                    })\r\n                                    .catch(error => handleRequestError(error, showToast))\r\n                            }\r\n\r\n                        }}\r\n                    >\r\n                        {(formProps) => {\r\n                            return (\r\n                                <Form className=\"auto-form\">\r\n                                    <FormikField\r\n                                        formikProps={formProps}\r\n                                        id={\"mark\"}\r\n                                        label={\"Mark\"}\r\n                                        formikFieldName={\"mark\"}\r\n                                    />\r\n                                    <FormikField\r\n                                        formikProps={formProps}\r\n                                        id={\"number\"}\r\n                                        label={\"Number\"}\r\n                                        formikFieldName={\"number\"}\r\n                                    />\r\n                                    <AutoTypeSelector\r\n                                        formikProps={formProps}\r\n                                        id={\"autoType\"}\r\n                                        label={\"Type\"}\r\n                                        formikFieldName={\"autoType\"}\r\n                                    />\r\n                                    <FormikField\r\n                                        formikProps={formProps}\r\n                                        id={\"consumption\"}\r\n                                        label={\"Consumption (liter / 100 km)\"}\r\n                                        formikFieldName={\"consumption\"}\r\n                                    />\r\n                                    <FormikField\r\n                                        formikProps={formProps}\r\n                                        id={\"maxLoad\"}\r\n                                        label={\"Max load (kg)\"}\r\n                                        formikFieldName={\"maxLoad\"}\r\n                                    />\r\n                                    <CustomDatePicker\r\n                                        formikProps={formProps}\r\n                                        id={\"dateOfIssue\"}\r\n                                        label={\"Date of issue\"}\r\n                                        formikFieldName={\"dateOfIssue\"}\r\n                                    />\r\n\r\n                                    {isUpdateForm ? <AutoStatusSelector\r\n                                        formikProps={formProps}\r\n                                        id={\"status\"}\r\n                                        label={\"Status\"}\r\n                                        formikFieldName={\"status\"}\r\n                                    /> : \"\"}\r\n\r\n                                    <div className=\"auto-btn-wrapper\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            disabled={formProps.listener}\r\n                                        >\r\n                                            {isUpdateForm ? \"Update\" : \"Save\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}