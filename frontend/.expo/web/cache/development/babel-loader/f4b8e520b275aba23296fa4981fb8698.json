{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\forms\\\\act-form\\\\products-table.js\";\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\nvar columns = [{\n  label: \"Name\",\n  id: \"name\",\n  minWidth: 150,\n  maxWidth: 150\n}, {\n  label: \"Status\",\n  id: \"productStatus\",\n  minWidth: 60,\n  maxWidth: 60\n}, {\n  label: \"Mass\",\n  id: \"mass\",\n  minWidth: 50,\n  maxWidth: 50\n}, {\n  label: \"Measure\",\n  id: \"massMeasure\",\n  minWidth: 130,\n  maxWidth: 130\n}, {\n  label: \"Price\",\n  id: \"price\",\n  minWidth: 50,\n  maxWidth: 50\n}, {\n  label: \"Currency\",\n  id: \"currency\",\n  minWidth: 100,\n  maxWidth: 100\n}, {\n  label: \"Quantity\",\n  id: \"quantity\",\n  minWidth: 70,\n  maxWidth: 70\n}, {\n  label: \"Measure\",\n  id: \"quantityMeasure\",\n  minWidth: 140,\n  maxWidth: 140\n}, {\n  label: \"Lost\",\n  id: \"lostQuantity\",\n  minWidth: 140,\n  maxWidth: 140\n}, {\n  label: \"Comment\",\n  id: \"comment\",\n  minWidth: 100,\n  maxWidth: 100\n}];\nvar useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport var ProductsTable = function ProductsTable(props) {\n  var onRowClick = props.onRowClick;\n  var products = props.products;\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleTableRowClick = function handleTableRowClick(product) {\n    onRowClick(product);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Table, {\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, columns.map(function (column) {\n    return React.createElement(TableCell, {\n      key: column.id,\n      style: {\n        maxWidth: column.maxWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, column.label);\n  }))), React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (product) {\n    return React.createElement(TableRow, {\n      onClick: function onClick() {\n        handleTableRowClick(product);\n      },\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: product.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, columns.map(function (column) {\n      return React.createElement(TableCell, {\n        key: column.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }\n      }, fetchFieldFromObject(product, column.id));\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: products.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/forms/act-form/products-table.js"],"names":["React","useState","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","fetchFieldFromObject","columns","label","id","minWidth","maxWidth","useStyles","root","width","container","maxHeight","ProductsTable","props","onRowClick","products","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleTableRowClick","product","handleChangeRowsPerPage","target","value","map","column","slice","length"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\r\n\r\nconst columns = [\r\n    {label: \"Name\", id: \"name\", minWidth: 150, maxWidth: 150},\r\n    {label: \"Status\", id: \"productStatus\", minWidth: 60, maxWidth: 60},\r\n    {label: \"Mass\", id: \"mass\", minWidth: 50, maxWidth: 50},\r\n    {label: \"Measure\", id: \"massMeasure\", minWidth: 130, maxWidth: 130},\r\n    {label: \"Price\", id: \"price\", minWidth: 50, maxWidth: 50},\r\n    {label: \"Currency\", id: \"currency\", minWidth: 100, maxWidth: 100},\r\n    {label: \"Quantity\", id: \"quantity\", minWidth: 70, maxWidth: 70},\r\n    {label: \"Measure\", id: \"quantityMeasure\", minWidth: 140, maxWidth: 140},\r\n    {label: \"Lost\", id: \"lostQuantity\", minWidth: 140, maxWidth: 140},\r\n    {label: \"Comment\", id: \"comment\", minWidth: 100, maxWidth: 100},\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n});\r\n\r\nexport const ProductsTable = (props) => {\r\n    const onRowClick = props.onRowClick;\r\n    const products = props.products;\r\n\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleTableRowClick = (product) => {\r\n\r\n        onRowClick(product);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    style={{ maxWidth: column.maxWidth}}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((product) => {\r\n                                return (\r\n                                    <TableRow\r\n                                        onClick={() => {\r\n                                            handleTableRowClick(product);\r\n                                        }}\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        tabIndex={-1}\r\n                                        key={product.id}\r\n                                    >\r\n                                        {columns.map((column) => {\r\n                                            return (\r\n                                                <TableCell key={column.id}>\r\n                                                    {fetchFieldFromObject(product, column.id)}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={products.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}