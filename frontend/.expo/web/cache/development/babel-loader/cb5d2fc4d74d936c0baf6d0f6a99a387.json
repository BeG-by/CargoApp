{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\driver\\\\waybills-table.js\";\n\nimport React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { DRIVER_WAYBILL_URL, handleRequestError, makeRequest, MANAGER_WAYBILL_URL, WAYBILL_URL } from \"../../parts/util/request-util\";\nimport { DialogWindow } from \"../../parts/dialogs/dialog\";\nimport { Typography } from \"@material-ui/core\";\nimport { WaybillInfo } from \"./waybill-info\";\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\nimport { FillActDialog } from \"../../parts/dialogs/fill-act\";\nimport ActDialog from \"./act-dialog\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport EnhancedTableHead, { getComparator, stableSort } from \"../../parts/util/sorted-table-head\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport TextSearch from \"../../parts/search/text-search\";\nvar LEFT = \"left\";\nvar CENTER = \"center\";\nvar SIZE = 18;\nvar columns = [{\n  id: \"registrationDate\",\n  label: \"Registration Date\",\n  minWidth: 150,\n  align: CENTER,\n  fontSize: SIZE\n}, {\n  id: \"auto\",\n  label: \"Auto\",\n  minWidth: 100,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  id: \"departureDate\",\n  label: \"Departure Date\",\n  minWidth: 150,\n  align: CENTER,\n  fontSize: SIZE\n}, {\n  id: \"arrivalDate\",\n  label: \"Arrival Date\",\n  minWidth: 150,\n  align: CENTER,\n  fontSize: SIZE\n}, {\n  id: \"invoiceNumber\",\n  label: \"Invoice #\",\n  minWidth: 100,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  id: \"status\",\n  label: \"Waybill Status\",\n  minWidth: 150,\n  align: CENTER,\n  fontSize: SIZE\n}];\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    role: store.user.roles[0]\n  };\n};\n\nexport var WaybillsTable = connect(mapStateToProps)(function (props) {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      totalWaybillsAmount = _React$useState6[0],\n      setTotalWaybillsAmount = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      waybills = _React$useState8[0],\n      setWaybills = _React$useState8[1];\n\n  var _React$useState9 = React.useState({\n    id: 0,\n    invoice: {}\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      waybill = _React$useState10[0],\n      setWaybill = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      actFillDialogOpen = _React$useState12[0],\n      setActFillDialogOpen = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      actDialogOpen = _React$useState14[0],\n      setActDialogOpen = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      waybillInfoDialogOpen = _React$useState16[0],\n      setWaybillInfoDialogOpen = _React$useState16[1];\n\n  var _React$useState17 = React.useState(null),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      form = _React$useState18[0],\n      setForm = _React$useState18[1];\n\n  var role = props.role;\n\n  var _React$useState19 = React.useState('asc'),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      order = _React$useState20[0],\n      setOrder = _React$useState20[1];\n\n  var _React$useState21 = React.useState('status'),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      orderBy = _React$useState22[0],\n      setOrderBy = _React$useState22[1];\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  function fetchWaybills(cleanupFunction) {\n    var curPage,\n        curRowsPerPage,\n        searchStr,\n        url,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.async(function fetchWaybills$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            curPage = _args.length > 1 && _args[1] !== undefined ? _args[1] : page;\n            curRowsPerPage = _args.length > 2 && _args[2] !== undefined ? _args[2] : rowsPerPage;\n            searchStr = _args.length > 3 && _args[3] !== undefined ? _args[3] : null;\n\n            if (cleanupFunction) {\n              _context.next = 14;\n              break;\n            }\n\n            url = \"\";\n\n            if (role === \"DRIVER\") {\n              url = DRIVER_WAYBILL_URL + \"?page=\" + curPage + \"&waybillsPerPage=\" + curRowsPerPage;\n            } else if (role === \"MANAGER\") {\n              url = MANAGER_WAYBILL_URL + \"?page=\" + curPage + \"&waybillsPerPage=\" + curRowsPerPage;\n            } else {\n              url = WAYBILL_URL + \"?page=\" + curPage + \"&waybillsPerPage=\" + curRowsPerPage;\n            }\n\n            if (searchStr !== null) {\n              url += \"&invoiceNumber=\" + searchStr;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(makeRequest(\"GET\", url));\n\n          case 9:\n            response = _context.sent;\n            setTotalWaybillsAmount(response.data.totalAmount);\n            data = response.data.waybills;\n            data.forEach(function (waybill) {\n              var checkPassage = true;\n              var checkLosses = true;\n\n              if (!waybill.points) {\n                checkPassage = false;\n              } else {\n                waybill.points.forEach(function (p) {\n                  if (!p.passed) {\n                    checkPassage = false;\n                  }\n                });\n              }\n\n              waybill.invoice.products.forEach(function (p) {\n                if (p.lostQuantity > 0) {\n                  checkLosses = false;\n                }\n              });\n              waybill.checkPassage = checkPassage;\n              waybill.checkLosses = checkLosses;\n            });\n            setWaybills(data);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    var cleanupFunction = false;\n    fetchWaybills(cleanupFunction).catch(function (err) {\n      setWaybills([]);\n      handleRequestError(err, alert);\n    });\n    return function () {\n      return cleanupFunction = true;\n    };\n  }, []);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n    fetchWaybills(false, newPage);\n  };\n\n  var handleTableRowClick = function handleTableRowClick(wb) {\n    var response, data;\n    return _regeneratorRuntime.async(function handleTableRowClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(makeRequest(\"GET\", WAYBILL_URL + \"/\" + wb.id));\n\n          case 2:\n            response = _context2.sent;\n            data = response.data;\n            setWaybill(function () {\n              return {\n                id: data.id,\n                invoice: data.invoice\n              };\n            });\n            handleWaybillInfoOpen(data.id);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleTextSearchChange = function handleTextSearchChange(searchStr) {\n    if (searchStr !== \"\") fetchWaybills(false, page, rowsPerPage, searchStr);else fetchWaybills(false);\n  };\n\n  var handleWaybillInfoOpen = function handleWaybillInfoOpen(id) {\n    setForm(React.createElement(WaybillInfo, {\n      waybillId: id,\n      onSave: fetchWaybills,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }));\n    setActFillDialogOpen(false);\n    setWaybillInfoDialogOpen(true);\n  };\n\n  var handleActFormOpen = function handleActFormOpen() {\n    setActFillDialogOpen(false);\n    setActDialogOpen(true);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n    fetchWaybills(false, 0, +event.target.value);\n  };\n\n  var handleClose = function handleClose() {\n    setActFillDialogOpen(false);\n    setWaybillInfoDialogOpen(false);\n    setActDialogOpen(false);\n  };\n\n  var handleActFill = function handleActFill(wb) {\n    var response, data;\n    return _regeneratorRuntime.async(function handleActFill$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(makeRequest(\"GET\", WAYBILL_URL + \"/\" + wb.id));\n\n          case 2:\n            response = _context3.sent;\n            data = response.data;\n            setWaybill(function () {\n              return {\n                id: data.id,\n                invoice: data.invoice\n              };\n            });\n            setForm(FillActDialog(handleActFormOpen, handleClose));\n            setActFillDialogOpen(true);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    className: \"table-paper main-table-paper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(\"div\", {\n    className: \"table-header-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, React.createElement(Typography, {\n    variant: \"button\",\n    display: \"block\",\n    gutterBottom: true,\n    style: {\n      fontSize: 26,\n      marginLeft: 15,\n      marginTop: 15,\n      textDecoration: \"underline\"\n    },\n    className: \"table-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, React.createElement(LibraryBooksIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }), \"Waybills\"), React.createElement(TextSearch, {\n    onFieldChange: handleTextSearchChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), React.createElement(TableContainer, {\n    className: \"table-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, React.createElement(Table, {\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, React.createElement(EnhancedTableHead, {\n    firstMenu: true,\n    secondMenu: true,\n    columns: columns,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }), React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, stableSort(waybills, getComparator(order, orderBy)).map(function (waybill) {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: waybill.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 45\n      }\n    }, waybill.checkPassage && waybill.checkLosses && waybill.invoice.status !== \"CLOSED\" && waybill.invoice.status !== \"CLOSED_WITH_ACT\" && role === \"DRIVER\" ? React.createElement(Tooltip, {\n      title: \"Click to fill in act of losses\",\n      arrow: true,\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 55\n      }\n    }, React.createElement(Button, {\n      className: \"menu-table-btn\",\n      color: \"secondary\",\n      startIcon: React.createElement(PostAddIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 72\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleActFill(waybill);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 57\n      }\n    })) : waybill.status === \"CURRENT\" && role === \"DRIVER\" ? React.createElement(Tooltip, {\n      title: \"Current waybill\",\n      arrow: true,\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 59\n      }\n    }, React.createElement(Button, {\n      className: \"menu-table-btn\",\n      color: \"secondary\",\n      startIcon: React.createElement(ArrowForwardIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 76\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleTableRowClick(waybill);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 61\n      }\n    })) : null), columns.map(function (column) {\n      var value = fetchFieldFromObject(waybill, column.id);\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        style: {\n          minWidth: column.minWidth,\n          maxWidth: column.maxWidth\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 53\n        }\n      }, column.id === \"invoiceNumber\" ? waybill.invoice.number : column.id === \"registrationDate\" ? waybill.invoice.checkingDate : column.id === \"status\" && value === \"FUTURE\" ? React.createElement(\"div\", {\n        style: {\n          color: \"royalblue\",\n          border: \"1px solid royalblue\",\n          padding: 3,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 71\n        }\n      }, waybill.status) : column.id === \"status\" && value === \"DONE\" ? React.createElement(\"div\", {\n        style: {\n          color: \"black\",\n          border: \"1px solid black\",\n          padding: 3,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 75\n        }\n      }, waybill.status) : column.id === \"status\" && value === \"CURRENT\" ? React.createElement(\"div\", {\n        style: {\n          color: \"crimson\",\n          border: \"1px solid crimson\",\n          padding: 3,\n          borderRadius: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 79\n        }\n      }, waybill.status) : value);\n    }), React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 45\n      }\n    }, React.createElement(Tooltip, {\n      title: \"Click to see waybill info\",\n      arrow: true,\n      className: \"table-delete-edit-div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 49\n      }\n    }, React.createElement(Button, {\n      className: \"menu-table-btn\",\n      color: \"primary\",\n      startIcon: React.createElement(VisibilityIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 68\n        }\n      }),\n      onClick: function onClick(e) {\n        e.stopPropagation();\n        handleTableRowClick(waybill);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 53\n      }\n    }))));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 20, 30],\n    component: \"div\",\n    count: totalWaybillsAmount,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }), React.createElement(ActDialog, {\n    waybill: waybill,\n    open: actDialogOpen,\n    onClose: function onClose() {\n      setActDialogOpen(false);\n    },\n    onSave: function onSave() {\n      fetchWaybills(false).catch(function (err) {\n        setWaybills([]);\n        handleRequestError(err);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Confirmation\",\n    handleClose: handleClose,\n    openDialog: actFillDialogOpen,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Waybill to invoice # \" + waybill.invoice.number,\n    fullWidth: true,\n    maxWidth: \"xl\",\n    handleClose: handleClose,\n    openDialog: waybillInfoDialogOpen,\n    form: form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  })));\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/driver/waybills-table.js"],"names":["React","useEffect","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","DRIVER_WAYBILL_URL","handleRequestError","makeRequest","MANAGER_WAYBILL_URL","WAYBILL_URL","DialogWindow","Typography","WaybillInfo","fetchFieldFromObject","FillActDialog","ActDialog","connect","Button","VisibilityIcon","ArrowForwardIcon","EnhancedTableHead","getComparator","stableSort","LibraryBooksIcon","Tooltip","PostAddIcon","TextSearch","LEFT","CENTER","SIZE","columns","id","label","minWidth","align","fontSize","mapStateToProps","store","role","user","roles","WaybillsTable","props","useState","page","setPage","rowsPerPage","setRowsPerPage","totalWaybillsAmount","setTotalWaybillsAmount","waybills","setWaybills","invoice","waybill","setWaybill","actFillDialogOpen","setActFillDialogOpen","actDialogOpen","setActDialogOpen","waybillInfoDialogOpen","setWaybillInfoDialogOpen","form","setForm","order","setOrder","orderBy","setOrderBy","handleRequestSort","event","property","isAsc","fetchWaybills","cleanupFunction","curPage","curRowsPerPage","searchStr","url","response","data","totalAmount","forEach","checkPassage","checkLosses","points","p","passed","products","lostQuantity","catch","err","alert","handleChangePage","newPage","handleTableRowClick","wb","handleWaybillInfoOpen","handleTextSearchChange","handleActFormOpen","handleChangeRowsPerPage","target","value","handleClose","handleActFill","marginLeft","marginTop","textDecoration","map","status","e","stopPropagation","column","maxWidth","number","checkingDate","color","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n    DRIVER_WAYBILL_URL,\r\n    handleRequestError,\r\n    makeRequest,\r\n    MANAGER_WAYBILL_URL,\r\n    WAYBILL_URL\r\n} from \"../../parts/util/request-util\";\r\nimport {DialogWindow} from \"../../parts/dialogs/dialog\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {WaybillInfo} from \"./waybill-info\";\r\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\r\nimport {FillActDialog} from \"../../parts/dialogs/fill-act\";\r\nimport ActDialog from \"./act-dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport EnhancedTableHead, {getComparator, stableSort} from \"../../parts/util/sorted-table-head\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport TextSearch from \"../../parts/search/text-search\";\r\n\r\nconst LEFT = \"left\";\r\nconst CENTER = \"center\";\r\nconst SIZE = 18;\r\n\r\nconst columns = [\r\n    {id: \"registrationDate\", label: \"Registration Date\", minWidth: 150, align: CENTER, fontSize: SIZE},\r\n    {id: \"auto\", label: \"Auto\", minWidth: 100, align: LEFT, fontSize: SIZE},\r\n    {id: \"departureDate\", label: \"Departure Date\", minWidth: 150, align: CENTER, fontSize: SIZE},\r\n    {id: \"arrivalDate\", label: \"Arrival Date\", minWidth: 150, align: CENTER, fontSize: SIZE},\r\n    {id: \"invoiceNumber\", label: \"Invoice #\", minWidth: 100, align: LEFT, fontSize: SIZE},\r\n    {id: \"status\", label: \"Waybill Status\", minWidth: 150, align: CENTER, fontSize: SIZE},\r\n];\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        role: store.user.roles[0]\r\n    }\r\n};\r\n\r\nexport const WaybillsTable = connect(mapStateToProps)((props) => {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [totalWaybillsAmount, setTotalWaybillsAmount] = React.useState(0);\r\n\r\n    const [waybills, setWaybills] = React.useState([]);\r\n    const [waybill, setWaybill] = React.useState({id: 0, invoice: {}});\r\n    const [actFillDialogOpen, setActFillDialogOpen] = React.useState(false);\r\n    const [actDialogOpen, setActDialogOpen] = React.useState(false);\r\n    const [waybillInfoDialogOpen, setWaybillInfoDialogOpen] = React.useState(false);\r\n    const [form, setForm] = React.useState(null);\r\n    const role = props.role;\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('status');\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    async function fetchWaybills(cleanupFunction, curPage = page, curRowsPerPage = rowsPerPage, searchStr = null) {\r\n        if (!cleanupFunction) {\r\n            let url = \"\";\r\n            if (role === \"DRIVER\") {\r\n                url = `${DRIVER_WAYBILL_URL}?page=${curPage}&waybillsPerPage=${curRowsPerPage}`\r\n            } else if (role === \"MANAGER\") {\r\n                url = `${MANAGER_WAYBILL_URL}?page=${curPage}&waybillsPerPage=${curRowsPerPage}`\r\n            } else {\r\n                url = `${WAYBILL_URL}?page=${curPage}&waybillsPerPage=${curRowsPerPage}`\r\n            }\r\n\r\n            if (searchStr !== null) {\r\n                url += `&invoiceNumber=${searchStr}`\r\n            }\r\n\r\n            let response = await makeRequest(\"GET\", url);\r\n            setTotalWaybillsAmount(response.data.totalAmount);\r\n            let data = response.data.waybills;\r\n            data.forEach(waybill => {\r\n                let checkPassage = true;\r\n                let checkLosses = true;\r\n                if (!waybill.points) {\r\n                    checkPassage = false;\r\n                } else {\r\n                    waybill.points.forEach(p => {\r\n                        if (!p.passed) {\r\n                            checkPassage = false;\r\n                        }\r\n                    });\r\n                }\r\n                waybill.invoice.products.forEach(p => {\r\n                    if (p.lostQuantity > 0) {\r\n                        checkLosses = false;\r\n                    }\r\n                });\r\n                waybill.checkPassage = checkPassage;\r\n                waybill.checkLosses = checkLosses;\r\n            })\r\n            setWaybills(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let cleanupFunction = false;\r\n        fetchWaybills(cleanupFunction)\r\n            .catch((err) => {\r\n                setWaybills([]);\r\n                handleRequestError(err, alert); // TODO toast\r\n            });\r\n        return () => cleanupFunction = true;\r\n    }, []);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        fetchWaybills(false, newPage);\r\n    };\r\n\r\n    const handleTableRowClick = async (wb) => {\r\n        let response = await makeRequest(\"GET\", WAYBILL_URL + \"/\" + wb.id);\r\n        const data = response.data;\r\n        setWaybill(() => ({\r\n            id: data.id,\r\n            invoice: data.invoice,\r\n        }));\r\n        handleWaybillInfoOpen(data.id);\r\n    };\r\n\r\n    const handleTextSearchChange = (searchStr) => {\r\n        if (searchStr !== \"\")\r\n            fetchWaybills(false, page, rowsPerPage, searchStr);\r\n        else\r\n            fetchWaybills(false);\r\n    }\r\n\r\n    const handleWaybillInfoOpen = (id) => {\r\n        setForm(<WaybillInfo waybillId={id} onSave={fetchWaybills}/>);\r\n        setActFillDialogOpen(false);\r\n        setWaybillInfoDialogOpen(true);\r\n    }\r\n\r\n    const handleActFormOpen = () => {\r\n        setActFillDialogOpen(false);\r\n        setActDialogOpen(true);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        fetchWaybills(false, 0, +event.target.value)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setActFillDialogOpen(false);\r\n        setWaybillInfoDialogOpen(false);\r\n        setActDialogOpen(false);\r\n    };\r\n\r\n    const handleActFill = async (wb) => {\r\n        let response = await makeRequest(\"GET\", WAYBILL_URL + \"/\" + wb.id);\r\n        const data = response.data;\r\n        setWaybill(() => ({\r\n            id: data.id,\r\n            invoice: data.invoice,\r\n        }));\r\n        setForm(FillActDialog(handleActFormOpen, handleClose));\r\n        setActFillDialogOpen(true);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <Paper className=\"table-paper main-table-paper\">\r\n                <div className=\"table-header-wrapper\">\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom\r\n                                style={{fontSize: 26, marginLeft: 15, marginTop: 15, textDecoration: \"underline\"}}\r\n                                className=\"table-title\">\r\n                        <LibraryBooksIcon/>\r\n                        Waybills\r\n                    </Typography>\r\n                    <TextSearch onFieldChange={handleTextSearchChange}/>\r\n                </div>\r\n\r\n                <TableContainer className=\"table-container\">\r\n                    <Table aria-label=\"sticky table\">\r\n                        <EnhancedTableHead\r\n                            firstMenu={true}\r\n                            secondMenu={true}\r\n                            columns={columns}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(waybills, getComparator(order, orderBy))\r\n                                .map((waybill) => {\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            key={waybill.id}\r\n                                        >\r\n                                            <TableCell>\r\n                                                {waybill.checkPassage\r\n                                                && waybill.checkLosses\r\n                                                && waybill.invoice.status !== \"CLOSED\"\r\n                                                && waybill.invoice.status !== \"CLOSED_WITH_ACT\"\r\n                                                && role === \"DRIVER\"\r\n                                                    ? <Tooltip title=\"Click to fill in act of losses\"\r\n                                                               arrow\r\n                                                               className=\"table-delete-edit-div\">\r\n                                                        <Button\r\n                                                            className=\"menu-table-btn\"\r\n                                                            color={\"secondary\"}\r\n                                                            startIcon={<PostAddIcon/>}\r\n                                                            onClick={(e) => {\r\n                                                                e.stopPropagation();\r\n                                                                handleActFill(waybill);\r\n                                                            }}/>\r\n                                                    </Tooltip>\r\n                                                    : waybill.status === \"CURRENT\"\r\n                                                    && role === \"DRIVER\"\r\n                                                        ? <Tooltip title=\"Current waybill\"\r\n                                                                   arrow\r\n                                                                   className=\"table-delete-edit-div\">\r\n                                                            <Button\r\n                                                                className=\"menu-table-btn\"\r\n                                                                color={\"secondary\"}\r\n                                                                startIcon={<ArrowForwardIcon/>}\r\n                                                                onClick={(e) => {\r\n                                                                    e.stopPropagation();\r\n                                                                    handleTableRowClick(waybill);\r\n                                                                }}/>\r\n                                                        </Tooltip>\r\n                                                        : null\r\n                                                }\r\n                                            </TableCell>\r\n                                            {columns.map((column) => {\r\n                                                const value = fetchFieldFromObject(waybill, column.id);\r\n                                                return (\r\n                                                    <TableCell key={column.id}\r\n                                                               align={column.align}\r\n                                                               style={{\r\n                                                                   minWidth: column.minWidth,\r\n                                                                   maxWidth: column.maxWidth\r\n                                                               }}>\r\n                                                        {column.id === \"invoiceNumber\"\r\n                                                            ? waybill.invoice.number\r\n                                                            : column.id === \"registrationDate\"\r\n                                                                ? waybill.invoice.checkingDate\r\n                                                                : column.id === \"status\"\r\n                                                                && value === \"FUTURE\"\r\n                                                                    ? <div style={{\r\n                                                                        color: \"royalblue\",\r\n                                                                        border: \"1px solid royalblue\",\r\n                                                                        padding: 3,\r\n                                                                        borderRadius: 5\r\n                                                                    }}>{waybill.status}</div>\r\n                                                                    : column.id === \"status\"\r\n                                                                    && (value === \"DONE\")\r\n                                                                        ? <div style={{\r\n                                                                            color: \"black\",\r\n                                                                            border: \"1px solid black\",\r\n                                                                            padding: 3,\r\n                                                                            borderRadius: 5\r\n                                                                        }}>{waybill.status}</div>\r\n                                                                        : column.id === \"status\"\r\n                                                                        && (value === \"CURRENT\")\r\n                                                                            ? <div style={{\r\n                                                                                color: \"crimson\",\r\n                                                                                border: \"1px solid crimson\",\r\n                                                                                padding: 3,\r\n                                                                                borderRadius: 5\r\n                                                                            }}>{waybill.status}</div>\r\n                                                                            : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                            <TableCell>\r\n                                                <Tooltip title=\"Click to see waybill info\"\r\n                                                         arrow\r\n                                                         className=\"table-delete-edit-div\">\r\n                                                    <Button\r\n                                                        className=\"menu-table-btn\"\r\n                                                        color={\"primary\"}\r\n                                                        startIcon={<VisibilityIcon/>}\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation();\r\n                                                            handleTableRowClick(waybill)\r\n                                                        }}/>\r\n                                                </Tooltip>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 20, 30]}\r\n                    component=\"div\"\r\n                    count={totalWaybillsAmount}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n\r\n                <ActDialog\r\n                    waybill={waybill}\r\n                    open={actDialogOpen}\r\n                    onClose={() => {\r\n                        setActDialogOpen(false);\r\n                    }}\r\n                    onSave={() => {\r\n                        fetchWaybills(false)\r\n                            .catch((err) => {\r\n                                setWaybills([]);\r\n                                handleRequestError(err);\r\n                            });\r\n                    }}\r\n                />\r\n\r\n                <DialogWindow\r\n                    dialogTitle=\"Confirmation\"\r\n                    handleClose={handleClose}\r\n                    openDialog={actFillDialogOpen}\r\n                    form={form}\r\n                />\r\n\r\n                <DialogWindow\r\n                    dialogTitle={\"Waybill to invoice # \" + waybill.invoice.number}\r\n                    fullWidth={true}\r\n                    maxWidth=\"xl\"\r\n                    handleClose={handleClose}\r\n                    openDialog={waybillInfoDialogOpen}\r\n                    form={form}\r\n                />\r\n\r\n            </Paper>\r\n        </main>\r\n    );\r\n})"]},"metadata":{},"sourceType":"module"}