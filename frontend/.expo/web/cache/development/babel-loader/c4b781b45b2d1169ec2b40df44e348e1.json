{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\parts\\\\greeting\\\\greeting.js\";\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport useToast from \"../toast-notification/useToast\";\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    userId: store.user.id,\n    username: store.user.name,\n    userPatronymic: store.user.patronymic\n  };\n};\n\nvar isNightTime = function isNightTime() {\n  var hours = new Date().getHours();\n  return hours >= 0 && hours <= 5;\n};\n\nvar isDayTime = function isDayTime() {\n  var hours = new Date().getHours();\n  return hours >= 14 && hours <= 17;\n};\n\nvar isEveningTime = function isEveningTime() {\n  var hours = new Date().getHours();\n  return hours >= 18 && hours <= 24;\n};\n\nvar isMorningTime = function isMorningTime() {\n  var hours = new Date().getHours();\n  return hours >= 6 && hours <= 13;\n};\n\nexport var Greeting = connect(mapStateToProps)(function (props) {\n  var _useToast = useToast(),\n      _useToast2 = _slicedToArray(_useToast, 2),\n      NotificationToast = _useToast2[0],\n      openNotificationToast = _useToast2[1];\n\n  useEffect(function () {\n    if (props.userId > 0) {\n      if (isDayTime()) {\n        openNotificationToast([\"Good day \", React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 53\n          }\n        }, \" \", props.username, \" \", props.userPatronymic)]);\n      } else if (isEveningTime()) {\n        openNotificationToast([\"Good evening \", React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 57\n          }\n        }, \" \", props.username, \" \", props.userPatronymic)]);\n      } else if (isMorningTime()) {\n        openNotificationToast([\"Good morning \", React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 57\n          }\n        }, \" \", props.username, \" \", props.userPatronymic)]);\n      } else if (isNightTime()) {\n        openNotificationToast([\"Good night \", React.createElement(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 55\n          }\n        }, \" \", props.username, \" \", props.userPatronymic)]);\n      }\n    }\n  }, [props.userId]);\n  return React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, NotificationToast);\n});","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/parts/greeting/greeting.js"],"names":["React","useEffect","connect","useToast","mapStateToProps","store","userId","user","id","username","name","userPatronymic","patronymic","isNightTime","hours","Date","getHours","isDayTime","isEveningTime","isMorningTime","Greeting","props","NotificationToast","openNotificationToast"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWC,EADhB;AAEHC,IAAAA,QAAQ,EAAEJ,KAAK,CAACE,IAAN,CAAWG,IAFlB;AAGHC,IAAAA,cAAc,EAAEN,KAAK,CAACE,IAAN,CAAWK;AAHxB,GAAP;AAKH,CAND;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAAd;AACA,SAAOF,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;AACH,CAHD;;AAKA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMH,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAAd;AACA,SAAOF,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,EAA/B;AACH,CAHD;;AAKA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAMJ,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAAd;AACA,SAAOF,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,EAA/B;AACH,CAHD;;AAKA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAML,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAAd;AACA,SAAOF,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAA9B;AACH,CAHD;;AAKA,OAAO,IAAMM,QAAQ,GAAGlB,OAAO,CAACE,eAAD,CAAP,CAAyB,UAACiB,KAAD,EAAW;AAAA,kBACLlB,QAAQ,EADH;AAAA;AAAA,MACjDmB,iBADiD;AAAA,MAC9BC,qBAD8B;;AAGxDtB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIoB,KAAK,CAACf,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAIW,SAAS,EAAb,EAAiB;AACbM,QAAAA,qBAAqB,CAAC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,KAAK,CAACZ,QAAhB,OAA2BY,KAAK,CAACV,cAAjC,CAAd,CAAD,CAArB;AACH,OAFD,MAEO,IAAIO,aAAa,EAAjB,EAAqB;AACxBK,QAAAA,qBAAqB,CAAC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,KAAK,CAACZ,QAAhB,OAA2BY,KAAK,CAACV,cAAjC,CAAlB,CAAD,CAArB;AACH,OAFM,MAEA,IAAIQ,aAAa,EAAjB,EAAqB;AACxBI,QAAAA,qBAAqB,CAAC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,KAAK,CAACZ,QAAhB,OAA2BY,KAAK,CAACV,cAAjC,CAAlB,CAAD,CAArB;AACH,OAFM,MAEA,IAAIE,WAAW,EAAf,EAAmB;AACtBU,QAAAA,qBAAqB,CAAC,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,KAAK,CAACZ,QAAhB,OAA2BY,KAAK,CAACV,cAAjC,CAAhB,CAAD,CAArB;AACH;AACJ;AACJ,GAZQ,EAYN,CAACU,KAAK,CAACf,MAAP,CAZM,CAAT;AAcA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,iBAAN,CAAR;AACH,CAlBuB,CAAjB","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport useToast from \"../toast-notification/useToast\";\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        userId: store.user.id,\r\n        username: store.user.name,\r\n        userPatronymic: store.user.patronymic,\r\n    }\r\n};\r\n\r\nconst isNightTime = () => {\r\n    const hours = new Date().getHours()\r\n    return hours >= 0 && hours <= 5\r\n}\r\n\r\nconst isDayTime = () => {\r\n    const hours = new Date().getHours()\r\n    return hours >= 14 && hours <= 17\r\n}\r\n\r\nconst isEveningTime = () => {\r\n    const hours = new Date().getHours()\r\n    return hours >= 18 && hours <= 24\r\n}\r\n\r\nconst isMorningTime = () => {\r\n    const hours = new Date().getHours()\r\n    return hours >= 6 && hours <= 13\r\n}\r\n\r\nexport const Greeting = connect(mapStateToProps)((props) => {\r\n    const [NotificationToast, openNotificationToast] = useToast();\r\n\r\n    useEffect(() => {\r\n        if (props.userId > 0) {\r\n            if (isDayTime()) {\r\n                openNotificationToast([`Good day `, <strong> {props.username} {props.userPatronymic}</strong>])\r\n            } else if (isEveningTime()) {\r\n                openNotificationToast([`Good evening `, <strong> {props.username} {props.userPatronymic}</strong>])\r\n            } else if (isMorningTime()) {\r\n                openNotificationToast([`Good morning `, <strong> {props.username} {props.userPatronymic}</strong>])\r\n            } else if (isNightTime()) {\r\n                openNotificationToast([`Good night `, <strong> {props.username} {props.userPatronymic}</strong>])\r\n            }\r\n        }\r\n    }, [props.userId])\r\n\r\n    return (<div>{NotificationToast}</div>)\r\n});"]},"metadata":{},"sourceType":"module"}