{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\manager\\\\invoice-info-content.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport React from \"react\";\nimport { List } from \"material-ui\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DepartureBoardIcon from '@material-ui/icons/DepartureBoard';\nimport StoreIcon from '@material-ui/icons/Store';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { ActInfo } from \"./act-info\";\nimport { DialogWindow } from \"../../parts/dialogs/dialog\";\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { WaybillInfo } from \"../driver/waybill-info\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { UserInfo } from \"../admin/user-info\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Typography } from \"@material-ui/core\";\nimport EnhancedTableHead, { getComparator, stableSort } from \"../../parts/util/sorted-table-head\";\nimport { countTotalQuantity, countTotalSum, countTotalWeight } from \"../../parts/util/cargo-total-info\";\nvar LEFT = \"left\";\nvar SIZE = 12;\nvar columns = [{\n  label: \"Name\",\n  id: \"name\",\n  minWidth: 100,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Mass\",\n  id: \"mass\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Measure\",\n  id: \"massMeasure\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Price\",\n  id: \"price\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Currency\",\n  id: \"currency\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Quantity\",\n  id: \"quantity\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}, {\n  label: \"Measure\",\n  id: \"quantityMeasure\",\n  minWidth: 50,\n  maxWidth: 60,\n  align: LEFT,\n  fontSize: SIZE\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    infoPiece: {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\"\n    },\n    boldText: {\n      fontWeight: \"bold\"\n    },\n    tableHeader: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      marginTop: 5,\n      fontSize: 20\n    }\n  };\n});\nexport default function InvoiceInfoContent(props) {\n  var _this = this;\n\n  var styles = useStyles();\n  var invoice = props.invoice;\n  var act = props.invoice.act;\n  var waybill = props.invoice.waybill;\n  var totalSum = countTotalSum(invoice.products);\n  var totalWeight = countTotalWeight(invoice.products);\n  var totalQuantity = countTotalQuantity(invoice.products);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      rowsPerPage = _React$useState4[0];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      actInfoDialogOpen = _React$useState6[0],\n      setActInfoDialogOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      waybillInfoDialogOpen = _React$useState8[0],\n      setWaybillInfoDialogOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      userInfoDialogOpen = _React$useState10[0],\n      setUserInfoDialogOpen = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      form = _React$useState12[0],\n      setForm = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      title = _React$useState14[0],\n      setTitle = _React$useState14[1];\n\n  var _React$useState15 = React.useState('asc'),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      order = _React$useState16[0],\n      setOrder = _React$useState16[1];\n\n  var _React$useState17 = React.useState('status'),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      orderBy = _React$useState18[0],\n      setOrderBy = _React$useState18[1];\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  var handleActInfoOpen = function handleActInfoOpen() {\n    if (act !== null && act !== undefined) {\n      setForm(React.createElement(ActInfo, {\n        act: act,\n        invoice: invoice,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }));\n      setActInfoDialogOpen(true);\n    }\n  };\n\n  var handleWaybillInfoOpen = function handleWaybillInfoOpen() {\n    if (waybill) {\n      setForm(React.createElement(WaybillInfo, {\n        waybillId: waybill.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }));\n      setWaybillInfoDialogOpen(true);\n    }\n  };\n\n  var handleDriverInfoOpen = function handleDriverInfoOpen() {\n    var user = invoice.driver;\n\n    if (user) {\n      setForm(React.createElement(UserInfo, {\n        user: user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }));\n      setTitle(\"Driver\");\n      setUserInfoDialogOpen(true);\n    }\n  };\n\n  var handleDispatcherInfoOpen = function handleDispatcherInfoOpen() {\n    var user = invoice.registrationUser;\n\n    if (user) {\n      setForm(React.createElement(UserInfo, {\n        user: user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }));\n      setTitle(\"Dispatcher\");\n      setUserInfoDialogOpen(true);\n    }\n  };\n\n  var handleManagerInfoOpen = function handleManagerInfoOpen() {\n    var user = invoice.checkingUser;\n\n    if (user) {\n      setForm(React.createElement(UserInfo, {\n        user: user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }));\n      setTitle(\"Manager\");\n      setUserInfoDialogOpen(true);\n    }\n  };\n\n  var handleClose = function handleClose() {\n    setActInfoDialogOpen(false);\n    setWaybillInfoDialogOpen(false);\n    setUserInfoDialogOpen(false);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    className: \"info-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(\"div\", {\n    className: \"info-content-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, React.createElement(Paper, {\n    className: styles.infoPiece + \" table-paper\",\n    style: {\n      minWidth: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, React.createElement(List, {\n    className: \"info-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, React.createElement(\"div\", {\n    className: \"info-content-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, React.createElement(CheckCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }, invoice.status),\n    secondary: \"Invoice status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  }, React.createElement(CheckCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    onClick: handleWaybillInfoOpen,\n    primary: invoice.waybill === null ? React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 49\n      }\n    }, \"Empty\") : React.createElement(Tooltip, {\n      className: \"link-pointer\",\n      title: \"Click to see Waybill info\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 51\n      }\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"#3f51b5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 53\n      }\n    }, \"Filled\")),\n    secondary: \"Waybill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, React.createElement(CheckCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    onClick: handleActInfoOpen,\n    primary: act === null ? React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 49\n      }\n    }, \"Empty\") : React.createElement(Tooltip, {\n      className: \"link-pointer\",\n      title: \"Click to see Act info\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 51\n      }\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"#3f51b5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 53\n      }\n    }, \"Filled\")),\n    secondary: \"Act\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  })), React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  }), React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 37\n    }\n  }, React.createElement(DepartureBoardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 45\n      }\n    }, invoice.registrationDate),\n    secondary: \"Registration Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 37\n    }\n  }), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, React.createElement(DepartureBoardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }, invoice.checkingDate),\n    secondary: \"Checking Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  }, React.createElement(DepartureBoardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }, invoice.closeDate),\n    secondary: \"Closing Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  })), React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }), React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, React.createElement(HowToRegIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  })), React.createElement(Tooltip, {\n    className: \"link-pointer\",\n    title: \"Click to see Driver info\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, React.createElement(ListItemText, {\n    onClick: handleDriverInfoOpen,\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 49\n      }\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"#3f51b5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 53\n      }\n    }, invoice.driver.name + \" \" + invoice.driver.surname)),\n    secondary: \"Driver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 37\n    }\n  }, React.createElement(HowToRegIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  })), React.createElement(Tooltip, {\n    className: \"link-pointer\",\n    title: \"Click to see Dispatcher info\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, React.createElement(ListItemText, {\n    onClick: handleDispatcherInfoOpen,\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 49\n      }\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"#3f51b5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }, invoice.registrationUser.name + \" \" + invoice.registrationUser.surname)),\n    secondary: \"Dispatcher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, React.createElement(HowToRegIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    onClick: handleManagerInfoOpen,\n    primary: invoice.checkingUser === null ? null : React.createElement(Tooltip, {\n      className: \"link-pointer\",\n      title: \"Click to see Manager info\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 51\n      }\n    }, React.createElement(\"strong\", {\n      style: {\n        color: \"#3f51b5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 53\n      }\n    }, invoice.checkingUser.name + \" \" + invoice.checkingUser.surname)),\n    secondary: \"Manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }))), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }), React.createElement(\"div\", {\n    className: \"info-content-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 37\n    }\n  }, React.createElement(StoreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 45\n      }\n    }, invoice.shipper.address.country + \" \" + invoice.shipper.address.city + \" \" + invoice.shipper.address.street + \" \" + invoice.shipper.email),\n    secondary: \"Shipper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  })), React.createElement(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }), React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, React.createElement(StoreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 41\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, invoice.consignee.address.country + \" \" + invoice.consignee.address.city + \" \" + invoice.consignee.address.street + \" \" + invoice.consignee.email),\n    secondary: \"Consignee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }))), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }), React.createElement(ListItem, {\n    className: styles.infoPiece,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }, React.createElement(CommentIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  })), React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 41\n      }\n    }, invoice.comment),\n    secondary: \"Comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 33\n    }\n  }))), React.createElement(\"div\", {\n    className: \"btn-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, props.buttons)), React.createElement(Paper, {\n    className: styles.infoPiece + \" table-paper\",\n    style: {\n      maxWidth: \"60%\",\n      minWidth: \"55%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, React.createElement(Typography, {\n    className: styles.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, \"CARGO LIST\"), React.createElement(TableContainer, {\n    style: {\n      maxHeight: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, React.createElement(TableRow, {\n    className: styles.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, React.createElement(TableCell, {\n    colSpan: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, \"Owner:\"), React.createElement(TableCell, {\n    align: \"right\",\n    className: styles.boldText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 33\n    }\n  }, invoice.productOwnerDTO.name), React.createElement(TableCell, {\n    colSpan: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, \"Quantity:\"), React.createElement(TableCell, {\n    align: \"right\",\n    className: styles.boldText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }, totalQuantity + \" items\"), React.createElement(TableCell, {\n    colSpan: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, \"Weight:\"), React.createElement(TableCell, {\n    align: \"right\",\n    className: styles.boldText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 33\n    }\n  }, totalWeight + \" KG\"), React.createElement(TableCell, {\n    colSpan: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, \"Total Sum:\"), React.createElement(TableCell, {\n    align: \"right\",\n    className: styles.boldText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 33\n    }\n  }, totalSum + \" \" + (invoice.currency ? invoice.currency : \"\"))), React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, React.createElement(EnhancedTableHead, {\n    firstMenu: false,\n    secondMenu: false,\n    columns: columns,\n    order: order,\n    orderBy: orderBy,\n    onRequestSort: handleRequestSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 33\n    }\n  }), React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 33\n    }\n  }, stableSort(invoice.products, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (product) {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: product.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 49\n      }\n    }, columns.map(function (column) {\n      var value = fetchFieldFromObject(product, column.id);\n      return React.createElement(TableCell, {\n        align: column.align,\n        style: {\n          minWidth: column.minWidth,\n          maxWidth: column.maxWidth\n        },\n        key: column.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 61\n        }\n      }, value);\n    }));\n  })))), React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 50],\n    component: \"div\",\n    count: invoice.products.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 25\n    }\n  })))), React.createElement(DialogWindow, {\n    dialogTitle: \"Act to invoice # \" + invoice.number,\n    fullWidth: true,\n    maxWidth: \"md\",\n    handleClose: handleClose,\n    openDialog: actInfoDialogOpen,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: \"Waybill to invoice # \" + invoice.number,\n    fullWidth: true,\n    maxWidth: \"xl\",\n    handleClose: handleClose,\n    openDialog: waybillInfoDialogOpen,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }), React.createElement(DialogWindow, {\n    dialogTitle: title,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    handleClose: handleClose,\n    openDialog: userInfoDialogOpen,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/manager/invoice-info-content.js"],"names":["Paper","TableContainer","Table","TableRow","TableCell","TableBody","TablePagination","React","List","ListItem","ListItemIcon","ListItemText","HowToRegIcon","CheckCircleIcon","DepartureBoardIcon","StoreIcon","CommentIcon","ActInfo","DialogWindow","fetchFieldFromObject","Tooltip","WaybillInfo","Divider","UserInfo","makeStyles","Typography","EnhancedTableHead","getComparator","stableSort","countTotalQuantity","countTotalSum","countTotalWeight","LEFT","SIZE","columns","label","id","minWidth","align","fontSize","maxWidth","useStyles","theme","infoPiece","flexDirection","alignItems","boldText","fontWeight","tableHeader","display","justifyContent","marginTop","InvoiceInfoContent","props","styles","invoice","act","waybill","totalSum","products","totalWeight","totalQuantity","useState","page","setPage","rowsPerPage","actInfoDialogOpen","setActInfoDialogOpen","waybillInfoDialogOpen","setWaybillInfoDialogOpen","userInfoDialogOpen","setUserInfoDialogOpen","form","setForm","title","setTitle","order","setOrder","orderBy","setOrderBy","handleRequestSort","event","property","isAsc","handleActInfoOpen","undefined","handleWaybillInfoOpen","handleDriverInfoOpen","user","driver","handleDispatcherInfoOpen","registrationUser","handleManagerInfoOpen","checkingUser","handleClose","handleChangePage","newPage","status","color","registrationDate","checkingDate","closeDate","name","surname","shipper","address","country","city","street","email","consignee","comment","buttons","maxHeight","productOwnerDTO","currency","slice","map","product","column","value","length","number"],"mappings":"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","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport React from \"react\";\r\nimport {List} from \"material-ui\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport DepartureBoardIcon from '@material-ui/icons/DepartureBoard';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport {ActInfo} from \"./act-info\";\r\nimport {DialogWindow} from \"../../parts/dialogs/dialog\";\r\nimport fetchFieldFromObject from \"../../parts/util/function-util\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {WaybillInfo} from \"../driver/waybill-info\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {UserInfo} from \"../admin/user-info\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport EnhancedTableHead, {getComparator, stableSort} from \"../../parts/util/sorted-table-head\";\r\nimport {countTotalQuantity, countTotalSum, countTotalWeight} from \"../../parts/util/cargo-total-info\";\r\n\r\nconst LEFT = \"left\";\r\nconst SIZE = 12;\r\n\r\nconst columns = [\r\n    {label: \"Name\", id: \"name\", minWidth: 100, align: LEFT, fontSize: SIZE},\r\n    {label: \"Mass\", id: \"mass\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n    {label: \"Measure\", id: \"massMeasure\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n    {label: \"Price\", id: \"price\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n    {label: \"Currency\", id: \"currency\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n    {label: \"Quantity\", id: \"quantity\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n    {label: \"Measure\", id: \"quantityMeasure\", minWidth: 50, maxWidth: 60, align: LEFT, fontSize: SIZE},\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    infoPiece: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\"\r\n    },\r\n    boldText: {\r\n        fontWeight: \"bold\",\r\n    },\r\n    tableHeader: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        marginTop: 5,\r\n        fontSize: 20\r\n    }\r\n}));\r\n\r\nexport default function InvoiceInfoContent(props) {\r\n    const styles = useStyles();\r\n    const invoice = props.invoice;\r\n    const act = props.invoice.act;\r\n    const waybill = props.invoice.waybill;\r\n    const totalSum = countTotalSum(invoice.products);\r\n    const totalWeight = countTotalWeight(invoice.products);\r\n    const totalQuantity = countTotalQuantity(invoice.products);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage] = React.useState(10);\r\n    const [actInfoDialogOpen, setActInfoDialogOpen] = React.useState(false);\r\n    const [waybillInfoDialogOpen, setWaybillInfoDialogOpen] = React.useState(false);\r\n    const [userInfoDialogOpen, setUserInfoDialogOpen] = React.useState(false);\r\n    const [form, setForm] = React.useState(null);\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('status');\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleActInfoOpen = () => {\r\n        if (act !== null && act !== undefined) {\r\n            setForm(<ActInfo act={act} invoice={invoice}/>);\r\n            setActInfoDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleWaybillInfoOpen = () => {\r\n        if (waybill) {\r\n            setForm(<WaybillInfo waybillId={waybill.id}/>);\r\n            setWaybillInfoDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleDriverInfoOpen = () => {\r\n        const user = invoice.driver;\r\n        if (user) {\r\n            setForm(<UserInfo user={user}/>);\r\n            setTitle(\"Driver\");\r\n            setUserInfoDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleDispatcherInfoOpen = () => {\r\n        const user = invoice.registrationUser;\r\n        if (user) {\r\n            setForm(<UserInfo user={user}/>);\r\n            setTitle(\"Dispatcher\");\r\n            setUserInfoDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleManagerInfoOpen = () => {\r\n        const user = invoice.checkingUser;\r\n        if (user) {\r\n            setForm(<UserInfo user={user}/>);\r\n            setTitle(\"Manager\");\r\n            setUserInfoDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setActInfoDialogOpen(false);\r\n        setWaybillInfoDialogOpen(false);\r\n        setUserInfoDialogOpen(false);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"info-content\">\r\n                <div className=\"info-content-column\">\r\n                    <Paper className={`${styles.infoPiece} table-paper`} style={{minWidth: 400}}>\r\n                        <List className=\"info-content\">\r\n                            <div className=\"info-content-column\">\r\n                                <ListItem className={styles.infoPiece}>\r\n                                    <ListItemIcon>\r\n                                        <CheckCircleIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {invoice.status}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Invoice status\"\r\n                                    />\r\n\r\n                                    <ListItemIcon>\r\n                                        <CheckCircleIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        onClick={handleWaybillInfoOpen}\r\n                                        primary={\r\n                                            invoice.waybill === null ?\r\n                                                <React.Fragment>Empty</React.Fragment>\r\n                                                : <Tooltip className=\"link-pointer\"\r\n                                                           title=\"Click to see Waybill info\"\r\n                                                           arrow>\r\n                                                    <strong style={{color: \"#3f51b5\"}}>Filled</strong>\r\n                                                </Tooltip>\r\n                                        }\r\n                                        secondary=\"Waybill\"\r\n                                    />\r\n\r\n                                    <ListItemIcon>\r\n                                        <CheckCircleIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        onClick={handleActInfoOpen}\r\n                                        primary={\r\n                                            act === null ?\r\n                                                <React.Fragment>Empty</React.Fragment>\r\n                                                : <Tooltip className=\"link-pointer\"\r\n                                                           title=\"Click to see Act info\"\r\n                                                           arrow>\r\n                                                    <strong style={{color: \"#3f51b5\"}}>Filled</strong>\r\n                                                </Tooltip>\r\n                                        }\r\n                                        secondary=\"Act\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider orientation=\"vertical\" flexItem/>\r\n\r\n                                <ListItem className={styles.infoPiece}>\r\n                                    <ListItemIcon>\r\n                                        <DepartureBoardIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {invoice.registrationDate}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Registration Date\"\r\n                                    />\r\n\r\n                                    <ListItemIcon>\r\n                                        <DepartureBoardIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {invoice.checkingDate}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Checking Date\"\r\n                                    />\r\n                                    <ListItemIcon>\r\n                                        <DepartureBoardIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {invoice.closeDate}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Closing Date\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider orientation=\"vertical\" flexItem/>\r\n\r\n                                <ListItem className={styles.infoPiece}>\r\n                                    <ListItemIcon>\r\n                                        <HowToRegIcon/>\r\n                                    </ListItemIcon>\r\n                                    <Tooltip className=\"link-pointer\" title=\"Click to see Driver info\" arrow>\r\n                                        <ListItemText\r\n                                            onClick={handleDriverInfoOpen}\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <strong style={{color: \"#3f51b5\"}}>\r\n                                                        {invoice.driver.name + \" \"\r\n                                                        + invoice.driver.surname}\r\n                                                    </strong>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary=\"Driver\"\r\n                                        />\r\n                                    </Tooltip>\r\n\r\n                                    <ListItemIcon>\r\n                                        <HowToRegIcon/>\r\n                                    </ListItemIcon>\r\n                                    <Tooltip className=\"link-pointer\" title=\"Click to see Dispatcher info\" arrow>\r\n                                        <ListItemText\r\n                                            onClick={handleDispatcherInfoOpen}\r\n                                            primary={\r\n                                                <React.Fragment>\r\n                                                    <strong style={{color: \"#3f51b5\"}}>\r\n                                                        {invoice.registrationUser.name + \" \"\r\n                                                        + invoice.registrationUser.surname}\r\n                                                    </strong>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                            secondary=\"Dispatcher\"\r\n                                        />\r\n                                    </Tooltip>\r\n\r\n                                    <ListItemIcon>\r\n                                        <HowToRegIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        onClick={handleManagerInfoOpen}\r\n                                        primary={\r\n                                            invoice.checkingUser === null ? null\r\n                                                : <Tooltip className=\"link-pointer\"\r\n                                                           title=\"Click to see Manager info\"\r\n                                                           arrow>\r\n                                                    <strong style={{color: \"#3f51b5\"}}>\r\n                                                        {invoice.checkingUser.name + \" \"\r\n                                                        + invoice.checkingUser.surname}\r\n                                                    </strong>\r\n                                                </Tooltip>\r\n                                        }\r\n                                        secondary=\"Manager\"\r\n                                    />\r\n                                </ListItem>\r\n                            </div>\r\n                            <Divider/>\r\n\r\n                            <div className=\"info-content-column\">\r\n                                <ListItem className={styles.infoPiece}>\r\n                                    <ListItemIcon>\r\n                                        <StoreIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {`${invoice.shipper.address.country} ${invoice.shipper.address.city} ${invoice.shipper.address.street} ${invoice.shipper.email}`}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Shipper\"\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider orientation=\"vertical\" flexItem/>\r\n\r\n                                <ListItem className={styles.infoPiece}>\r\n                                    <ListItemIcon>\r\n                                        <StoreIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={\r\n                                            <React.Fragment>\r\n                                                {`${invoice.consignee.address.country} ${invoice.consignee.address.city} ${invoice.consignee.address.street} ${invoice.consignee.email}`}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        secondary=\"Consignee\"\r\n                                    />\r\n                                </ListItem>\r\n                            </div>\r\n                            <Divider/>\r\n\r\n                            <ListItem className={styles.infoPiece}>\r\n                                <ListItemIcon>\r\n                                    <CommentIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={\r\n                                        <React.Fragment>\r\n                                            {invoice.comment}\r\n                                        </React.Fragment>\r\n                                    }\r\n                                    secondary=\"Comment\"\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n\r\n                        <div className=\"btn-row\">\r\n                            {props.buttons}\r\n                        </div>\r\n                    </Paper>\r\n\r\n                    <Paper className={`${styles.infoPiece} table-paper`}\r\n                           style={{maxWidth: \"60%\", minWidth: \"55%\"}}>\r\n                        <Typography className={styles.tableHeader}>\r\n                            CARGO LIST\r\n                        </Typography>\r\n\r\n                        <TableContainer style={{maxHeight: \"80%\"}}>\r\n                            <TableRow className={styles.tableHeader}>\r\n                                <TableCell colSpan={1}>\r\n                                    Owner:\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"\r\n                                           className={styles.boldText}>\r\n                                    {invoice.productOwnerDTO.name}\r\n                                </TableCell>\r\n                                <TableCell colSpan={1}>\r\n                                    Quantity:\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"\r\n                                           className={styles.boldText}>\r\n                                    {totalQuantity + \" items\"}\r\n                                </TableCell>\r\n                                <TableCell colSpan={1}>\r\n                                    Weight:\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"\r\n                                           className={styles.boldText}>\r\n                                    {totalWeight + \" KG\"}\r\n                                </TableCell>\r\n                                <TableCell colSpan={1}>\r\n                                    Total Sum:\r\n                                </TableCell>\r\n                                <TableCell align=\"right\"\r\n                                           className={styles.boldText}>\r\n                                    {totalSum + \" \" + (invoice.currency ? invoice.currency : \"\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <EnhancedTableHead\r\n                                    firstMenu={false}\r\n                                    secondMenu={false}\r\n                                    columns={columns}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n                                    onRequestSort={handleRequestSort}\r\n                                />\r\n                                <TableBody>\r\n                                    {stableSort(invoice.products, getComparator(order, orderBy))\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((product) => {\r\n                                            return (\r\n                                                <TableRow\r\n                                                    hover\r\n                                                    role=\"checkbox\"\r\n                                                    tabIndex={-1}\r\n                                                    key={product.id}\r\n                                                >\r\n                                                    {columns.map((column) => {\r\n                                                        const value = fetchFieldFromObject(product, column.id);\r\n                                                        return (\r\n                                                            <TableCell align={column.align}\r\n                                                                       style={{\r\n                                                                           minWidth: column.minWidth,\r\n                                                                           maxWidth: column.maxWidth\r\n                                                                       }}\r\n                                                                       key={column.id}>\r\n                                                                {value}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                </TableRow>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <br/>\r\n\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50]}\r\n                            component=\"div\"\r\n                            count={invoice.products.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                        />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n\r\n            <DialogWindow\r\n                dialogTitle={\"Act to invoice # \" + invoice.number}\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                handleClose={handleClose}\r\n                openDialog={actInfoDialogOpen}\r\n                form={form}\r\n            />\r\n\r\n            <DialogWindow\r\n                dialogTitle={\"Waybill to invoice # \" + invoice.number}\r\n                fullWidth={true}\r\n                maxWidth=\"xl\"\r\n                handleClose={handleClose}\r\n                openDialog={waybillInfoDialogOpen}\r\n                form={form}\r\n            />\r\n\r\n            <DialogWindow\r\n                dialogTitle={title}\r\n                fullWidth={true}\r\n                maxWidth=\"xs\"\r\n                handleClose={handleClose}\r\n                openDialog={userInfoDialogOpen}\r\n                form={form}\r\n            />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}