{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\roles\\\\admin\\\\users\\\\user-dialog.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Form, Formik } from \"formik\";\nimport FormikField from \"../../../parts/util/formik-field\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CustomDatePicker from \"../custom-date-picker\";\nimport { UserTypeSelector, UserStatusSelector } from \"./user-selectors\";\nimport { USER_URL, handleRequestError, makeRequest } from \"../../../parts/util/request-util\";\nimport { PasswordNotRequiredScheme, UpdateUserScheme } from \"../../../parts/validation/user-validation\";\nimport { LinkScheme } from \"../../../parts/validation/activation-link-form-validation\";\nvar EMPTY_USER = {\n  id: -1,\n  email: \"\",\n  password: \"\",\n  name: \"\",\n  surname: \"\",\n  patronymic: \"\",\n  passport: \"\",\n  roles: \"\",\n  birthday: \"2000-01-01\",\n  address: {\n    country: \"\",\n    city: \"\",\n    street: \"\",\n    house: \"\",\n    flat: \"\"\n  },\n  phone: \"\",\n  status: \"\"\n};\nexport var UserDialog = function UserDialog(props) {\n  var open = props.open,\n      onClose = props.onClose,\n      userId = props.userId,\n      refreshTable = props.refreshTable,\n      showToast = props.showToast;\n\n  var _useState = useState(EMPTY_USER),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var TITLE = \"User\";\n  var isUpdateForm = userId >= 0;\n  useEffect(function () {\n    if (isUpdateForm) {\n      makeRequest(\"GET\", USER_URL + \"/\" + userId).then(function (res) {\n        var user = res.data;\n\n        if (user.address === null) {\n          user.address = {\n            country: \"\",\n            city: \"\",\n            street: \"\",\n            house: \"\",\n            flat: \"\"\n          };\n        }\n\n        user.roles = user.roles[0];\n        setUser(res.data);\n      }).catch(function (error) {\n        return handleRequestError(error, showToast);\n      });\n    }\n  }, [userId]);\n\n  var handleClose = function handleClose() {\n    setUser(EMPTY_USER);\n    onClose();\n  };\n\n  return React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(\"span\", {\n    id: \"form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, TITLE), React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }))), React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(Formik, {\n    enableReinitialize: true,\n    validationSchema: isUpdateForm ? UpdateUserScheme.concat(PasswordNotRequiredScheme) : LinkScheme,\n    initialValues: {\n      id: userId,\n      email: user.email,\n      password: user.password,\n      name: user.name,\n      surname: user.surname,\n      patronymic: user.patronymic,\n      role: user.roles,\n      birthday: user.birthday,\n      phone: user.phone,\n      passport: user.passport,\n      status: user.status,\n      country: user.address.country,\n      city: user.address.city,\n      street: user.address.street,\n      house: user.address.house,\n      flat: user.address.flat\n    },\n    onSubmit: function onSubmit(values) {\n      if (isUpdateForm) {\n        var _user = {\n          id: values.id,\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          surname: values.surname,\n          patronymic: values.patronymic,\n          roles: [values.role],\n          birthday: values.birthday,\n          phone: values.phone,\n          passport: values.passport,\n          status: values.status,\n          address: {\n            country: values.country,\n            city: values.city,\n            street: values.street,\n            house: values.house,\n            flat: values.flat\n          }\n        };\n        makeRequest(\"PUT\", USER_URL, _user).then(function (res) {\n          handleClose();\n          refreshTable();\n          showToast(\"User has been updated\", \"success\");\n        }).catch(function (error) {\n          return handleRequestError(error, showToast);\n        });\n      } else {\n        var data = {\n          email: values.email,\n          role: values.role\n        };\n        showToast(\"Email is sending...\", \"info\");\n        makeRequest(\"POST\", USER_URL, data).then(function (res) {\n          handleClose();\n          showToast(\"Link has been send\", \"success\");\n        }).catch(function (error) {\n          return handleRequestError(error, showToast);\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      style: {\n        width: 400\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, isUpdateForm ? \"\" : React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"email\",\n      label: \"Email\",\n      formikFieldName: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }), isUpdateForm ? React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }, React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"name\",\n      label: \"Name\",\n      formikFieldName: \"name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"surname\",\n      label: \"Surname\",\n      formikFieldName: \"surname\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"patronymic\",\n      label: \"Patronymic\",\n      formikFieldName: \"patronymic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"passport\",\n      label: \"Passport\",\n      formikFieldName: \"passport\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    })) : \"\", React.createElement(UserTypeSelector, {\n      formikProps: formProps,\n      id: \"role\",\n      label: \"Role\",\n      formikFieldName: \"role\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }), isUpdateForm ? React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, React.createElement(UserStatusSelector, {\n      formikProps: formProps,\n      id: \"status\",\n      label: \"Status\",\n      formikFieldName: \"status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }), React.createElement(CustomDatePicker, {\n      formikProps: formProps,\n      id: \"birthday\",\n      label: \"Date of birth\",\n      formikFieldName: \"birthday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"phone\",\n      label: \"Phone\",\n      formikFieldName: \"phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"country\",\n      label: \"Country\",\n      formikFieldName: \"country\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"city\",\n      label: \"City\",\n      formikFieldName: \"city\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"street\",\n      label: \"Street\",\n      formikFieldName: \"street\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"house\",\n      label: \"House\",\n      formikFieldName: \"house\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"flat\",\n      label: \"Flat\",\n      formikFieldName: \"flat\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 45\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"password\",\n      label: \"Password\",\n      formikFieldName: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 45\n      }\n    })) : \"\", React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 10,\n        marginBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: formProps.listener,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }, isUpdateForm ? \"Update\" : \"Send activation link\")));\n  }))));\n};","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/roles/admin/users/user-dialog.js"],"names":["React","useEffect","useState","Button","Dialog","DialogContent","DialogTitle","Form","Formik","FormikField","IconButton","CloseIcon","CustomDatePicker","UserTypeSelector","UserStatusSelector","USER_URL","handleRequestError","makeRequest","PasswordNotRequiredScheme","UpdateUserScheme","LinkScheme","EMPTY_USER","id","email","password","name","surname","patronymic","passport","roles","birthday","address","country","city","street","house","flat","phone","status","UserDialog","props","open","onClose","userId","refreshTable","showToast","user","setUser","TITLE","isUpdateForm","then","res","data","catch","error","handleClose","concat","role","values","formProps","width","textAlign","marginTop","marginBottom","listener"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormikField from \"../../../parts/util/formik-field\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CustomDatePicker from \"../custom-date-picker\";\r\nimport {UserTypeSelector, UserStatusSelector} from \"./user-selectors\";\r\nimport {USER_URL, handleRequestError, makeRequest} from \"../../../parts/util/request-util\"\r\nimport {PasswordNotRequiredScheme, UpdateUserScheme} from \"../../../parts/validation/user-validation\";\r\nimport {LinkScheme} from \"../../../parts/validation/activation-link-form-validation\";\r\n\r\n\r\nconst EMPTY_USER = {\r\n    id: -1,\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    surname: \"\",\r\n    patronymic: \"\",\r\n    passport: \"\",\r\n    roles: \"\",\r\n    birthday: \"2000-01-01\",\r\n    address: {\r\n        country: \"\",\r\n        city: \"\",\r\n        street: \"\",\r\n        house: \"\",\r\n        flat: \"\"\r\n    },\r\n    phone: \"\",\r\n    status: \"\"\r\n};\r\n\r\n\r\nexport const UserDialog = (props) => {\r\n    const {open, onClose, userId, refreshTable, showToast} = props;\r\n    const [user, setUser] = useState(EMPTY_USER);\r\n\r\n    const TITLE = \"User\";\r\n\r\n    const isUpdateForm = userId >= 0;\r\n\r\n    useEffect(() => {\r\n\r\n        if (isUpdateForm) {\r\n            makeRequest(\"GET\", USER_URL + \"/\" + userId)\r\n                .then(res => {\r\n                    const user = res.data;\r\n\r\n                    if (user.address === null) {\r\n                        user.address = {\r\n                            country: \"\",\r\n                            city: \"\",\r\n                            street: \"\",\r\n                            house: \"\",\r\n                            flat: \"\"\r\n                        }\r\n                    }\r\n\r\n                    user.roles = user.roles[0];\r\n\r\n                    setUser(res.data);\r\n                }).catch(error => handleRequestError(error, showToast))\r\n        }\r\n    }, [userId]);\r\n\r\n    const handleClose = () => {\r\n        setUser(EMPTY_USER);\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    <span id=\"form-title\">{TITLE}</span>\r\n                    <IconButton aria-label=\"close\"\r\n                                onClick={handleClose}\r\n                    >\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        validationSchema={isUpdateForm ? UpdateUserScheme.concat(PasswordNotRequiredScheme) : LinkScheme}\r\n                        initialValues={{\r\n                            id: userId,\r\n                            email: user.email,\r\n                            password: user.password,\r\n                            name: user.name,\r\n                            surname: user.surname,\r\n                            patronymic: user.patronymic,\r\n                            role: user.roles,\r\n                            birthday: user.birthday,\r\n                            phone: user.phone,\r\n                            passport: user.passport,\r\n                            status: user.status,\r\n                            country: user.address.country,\r\n                            city: user.address.city,\r\n                            street: user.address.street,\r\n                            house: user.address.house,\r\n                            flat: user.address.flat,\r\n                        }}\r\n                        onSubmit={(values) => {\r\n\r\n                            if (isUpdateForm) {\r\n\r\n                                const user = {\r\n                                    id: values.id,\r\n                                    email: values.email,\r\n                                    password: values.password,\r\n                                    name: values.name,\r\n                                    surname: values.surname,\r\n                                    patronymic: values.patronymic,\r\n                                    roles: [values.role],\r\n                                    birthday: values.birthday,\r\n                                    phone: values.phone,\r\n                                    passport: values.passport,\r\n                                    status: values.status,\r\n                                    address: {\r\n                                        country: values.country,\r\n                                        city: values.city,\r\n                                        street: values.street,\r\n                                        house: values.house,\r\n                                        flat: values.flat\r\n                                    }\r\n                                };\r\n\r\n                                makeRequest(\"PUT\", USER_URL, user)\r\n                                    .then(res => {\r\n                                        handleClose();\r\n                                        refreshTable();\r\n                                        showToast(\"User has been updated\", \"success\")\r\n                                    })\r\n                                    .catch(error => handleRequestError(error, showToast))\r\n\r\n                            } else {\r\n\r\n                                const data = {\r\n                                    email: values.email,\r\n                                    role: values.role\r\n                                };\r\n\r\n                                showToast(\"Email is sending...\" , \"info\")\r\n                                makeRequest(\"POST\", USER_URL, data)\r\n                                    .then(res => {\r\n                                        handleClose();\r\n                                        showToast(\"Link has been send\", \"success\")\r\n                                    })\r\n                                    .catch(error => handleRequestError(error, showToast))\r\n                            }\r\n\r\n                        }}\r\n                    >\r\n                        {(formProps) => {\r\n                            return (\r\n                                <Form style={{width: 400}}>\r\n                                    {isUpdateForm ? \"\" :\r\n                                        <FormikField\r\n                                            formikProps={formProps}\r\n                                            id={\"email\"}\r\n                                            label={\"Email\"}\r\n                                            formikFieldName={\"email\"}\r\n                                        />}\r\n\r\n                                    {isUpdateForm ?\r\n                                        <span>\r\n                                        < FormikField\r\n                                            formikProps={formProps}\r\n                                            id={\"name\"}\r\n                                            label={\"Name\"}\r\n                                            formikFieldName={\"name\"}\r\n                                        />\r\n                                        <FormikField\r\n                                            formikProps={formProps}\r\n                                            id={\"surname\"}\r\n                                            label={\"Surname\"}\r\n                                            formikFieldName={\"surname\"}\r\n                                        />\r\n                                        <FormikField\r\n                                            formikProps={formProps}\r\n                                            id={\"patronymic\"}\r\n                                            label={\"Patronymic\"}\r\n                                            formikFieldName={\"patronymic\"}\r\n                                        />\r\n\r\n                                        <FormikField\r\n                                            formikProps={formProps}\r\n                                            id={\"passport\"}\r\n                                            label={\"Passport\"}\r\n                                            formikFieldName={\"passport\"}\r\n                                        />\r\n                                        </span>\r\n                                        : \"\"}\r\n\r\n                                    <UserTypeSelector\r\n                                        formikProps={formProps}\r\n                                        id={\"role\"}\r\n                                        label={\"Role\"}\r\n                                        formikFieldName={\"role\"}\r\n                                    />\r\n\r\n                                    {isUpdateForm ?\r\n                                        <span>\r\n                                            <UserStatusSelector\r\n                                                formikProps={formProps}\r\n                                                id={\"status\"}\r\n                                                label={\"Status\"}\r\n                                                formikFieldName={\"status\"}\r\n                                            />\r\n\r\n                                            <CustomDatePicker\r\n                                                formikProps={formProps}\r\n                                                id={\"birthday\"}\r\n                                                label={\"Date of birth\"}\r\n                                                formikFieldName={\"birthday\"}/>\r\n\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"phone\"}\r\n                                                label={\"Phone\"}\r\n                                                formikFieldName={\"phone\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"country\"}\r\n                                                label={\"Country\"}\r\n                                                formikFieldName={\"country\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"city\"}\r\n                                                label={\"City\"}\r\n                                                formikFieldName={\"city\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"street\"}\r\n                                                label={\"Street\"}\r\n                                                formikFieldName={\"street\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"house\"}\r\n                                                label={\"House\"}\r\n                                                formikFieldName={\"house\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"flat\"}\r\n                                                label={\"Flat\"}\r\n                                                formikFieldName={\"flat\"}\r\n                                            />\r\n                                            <FormikField\r\n                                                formikProps={formProps}\r\n                                                id={\"password\"}\r\n                                                label={\"Password\"}\r\n                                                formikFieldName={\"password\"}\r\n                                                type={\"password\"}\r\n                                            />\r\n                                        </span>\r\n                                        : \"\"}\r\n\r\n                                    <div style={{textAlign: \"center\", marginTop: 10, marginBottom: 5}}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            disabled={formProps.listener}\r\n                                        >\r\n                                            {isUpdateForm ? \"Update\" : \"Send activation link\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}