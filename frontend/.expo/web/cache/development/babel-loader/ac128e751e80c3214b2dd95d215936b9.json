{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\web_socket\\\\hooks\\\\handlers\\\\use-point-pass-message-handler.js\";\nimport React from \"react\";\nimport { makeRequest, POINT_NOTIFICATION_DATA_URL } from \"../../../components/parts/util/request-util\";\nimport useWaybillInfoForm from \"../forms/use-waybill-info-form\";\nimport { formatDateStr } from \"../../utils\";\nvar TOAST_TITLE = \"Point was passed\";\nexport default function usePointPassMessageHandler() {\n  var _this = this;\n\n  var _useWaybillInfoForm = useWaybillInfoForm(),\n      _useWaybillInfoForm2 = _slicedToArray(_useWaybillInfoForm, 2),\n      WaybillDialogComponent = _useWaybillInfoForm2[0],\n      openWaybillDialog = _useWaybillInfoForm2[1];\n\n  var loadPointNotificationData = function loadPointNotificationData(pointId) {\n    return makeRequest(\"GET\", POINT_NOTIFICATION_DATA_URL + \"/\" + pointId);\n  };\n\n  var convertToStringAndFormat = function convertToStringAndFormat(pointNotificationData) {\n    var data = pointNotificationData;\n    return [\"Driver: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, data.driver.name, \" \", data.driver.surname), React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), \"Pass time: \", React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 28\n      }\n    }, formatDateStr(data.passTime))];\n  };\n\n  var handlePointPass = function handlePointPass(messageData, openActionToast) {\n    var response, formatData;\n    return _regeneratorRuntime.async(function handlePointPass$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(loadPointNotificationData(messageData.pointId));\n\n          case 2:\n            response = _context.sent;\n            formatData = convertToStringAndFormat(response.data);\n            openActionToast(TOAST_TITLE, formatData, function () {\n              return openWaybillDialog(messageData.waybillId);\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return [WaybillDialogComponent, handlePointPass];\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/web_socket/hooks/handlers/use-point-pass-message-handler.js"],"names":["React","makeRequest","POINT_NOTIFICATION_DATA_URL","useWaybillInfoForm","formatDateStr","TOAST_TITLE","usePointPassMessageHandler","WaybillDialogComponent","openWaybillDialog","loadPointNotificationData","pointId","convertToStringAndFormat","pointNotificationData","data","driver","name","surname","passTime","handlePointPass","messageData","openActionToast","response","formatData","waybillId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,2BAArB;AACA,OAAOC,kBAAP;AACA,SAAQC,aAAR;AAEA,IAAMC,WAAW,GAAG,kBAApB;AAEA,eAAe,SAASC,0BAAT,GAAsC;AAAA;;AAAA,4BACGH,kBAAkB,EADrB;AAAA;AAAA,MAC1CI,sBAD0C;AAAA,MAClBC,iBADkB;;AAGjD,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,OAAD,EAAa;AAC3C,WAAOT,WAAW,CAAC,KAAD,EAAQC,2BAA2B,GAAG,GAA9B,GAAoCQ,OAA5C,CAAlB;AACH,GAFD;;AAIA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,qBAAD,EAA2B;AACxD,QAAMC,IAAI,GAAGD,qBAAb;AACA,WAAO,CACH,UADG,EACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASC,IAAI,CAACC,MAAL,CAAYC,IAArB,OAA4BF,IAAI,CAACC,MAAL,CAAYE,OAAxC,CADT,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,EAGH,aAHG,EAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASZ,aAAa,CAACS,IAAI,CAACI,QAAN,CAAtB,CAHZ,CAAP;AAKH,GAPD;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,WAAP,EAAoBC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCX,yBAAyB,CAACU,WAAW,CAACT,OAAb,CAD1B;;AAAA;AAChBW,YAAAA,QADgB;AAEhBC,YAAAA,UAFgB,GAEHX,wBAAwB,CAACU,QAAQ,CAACR,IAAV,CAFrB;AAGpBO,YAAAA,eAAe,CAACf,WAAD,EAAciB,UAAd,EAA0B;AAAA,qBAAMd,iBAAiB,CAACW,WAAW,CAACI,SAAb,CAAvB;AAAA,aAA1B,CAAf;;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAMA,SAAO,CAAChB,sBAAD,EAAyBW,eAAzB,CAAP;AACH","sourcesContent":["import React from \"react\";\r\nimport {makeRequest, POINT_NOTIFICATION_DATA_URL} from \"../../../components/parts/util/request-util\";\r\nimport useWaybillInfoForm from \"../forms/use-waybill-info-form\";\r\nimport {formatDateStr} from \"../../utils\";\r\n\r\nconst TOAST_TITLE = \"Point was passed\"\r\n\r\nexport default function usePointPassMessageHandler() {\r\n    const [WaybillDialogComponent, openWaybillDialog] = useWaybillInfoForm();\r\n\r\n    const loadPointNotificationData = (pointId) => {\r\n        return makeRequest(\"GET\", POINT_NOTIFICATION_DATA_URL + \"/\" + pointId);\r\n    }\r\n\r\n    const convertToStringAndFormat = (pointNotificationData) => {\r\n        const data = pointNotificationData;\r\n        return [\r\n            \"Driver: \", <strong>{data.driver.name} {data.driver.surname}</strong>,\r\n            <br/>,\r\n            \"Pass time: \", <strong>{formatDateStr(data.passTime)}</strong>,\r\n        ]\r\n    }\r\n\r\n    const handlePointPass = async (messageData, openActionToast) => {\r\n        let response = await loadPointNotificationData(messageData.pointId);\r\n        let formatData = convertToStringAndFormat(response.data);\r\n        openActionToast(TOAST_TITLE, formatData, () => openWaybillDialog(messageData.waybillId))\r\n    }\r\n\r\n    return [WaybillDialogComponent, handlePointPass]\r\n}"]},"metadata":{},"sourceType":"module"}