{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\components\\\\forms\\\\act-form\\\\products-form.js\";\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport FormikField from \"../../roles/sysadmin/formik-field\";\nimport Button from \"@material-ui/core/Button\";\nimport { ProductFormValidation } from \"../../parts/validation/act-form-validation\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nexport default (function (props) {\n  var initProductState = props.initProductState,\n      onSubmit = props.onSubmit,\n      onClose = props.onClose;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedStatus = _useState2[0],\n      setSelectedStatus = _useState2[1];\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      formControl: {\n        marginTop: 20,\n        minWidth: \"100%\"\n      }\n    };\n  });\n  var classes = useStyles();\n\n  var handleSubmit = function handleSubmit(values) {\n    var product = {\n      id: initProductState.id,\n      invoiceId: initProductState.invoiceId,\n      productStatus: values.productStatus,\n      lostQuantity: values.lostQuantity,\n      comment: values.comment,\n      currency: initProductState.currency,\n      name: initProductState.name,\n      quantity: initProductState.quantity,\n      quantityMeasure: initProductState.quantityMeasure,\n      price: initProductState.price,\n      mass: initProductState.mass,\n      massMeasure: initProductState.massMeasure\n    };\n    product.idx = initProductState.idx;\n    onSubmit(product);\n  };\n\n  var statuses = ['SPOILED', 'STOLEN', 'CONFISCATED', 'DAMAGED_IN_CRASH'];\n  return React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      productStatus: selectedStatus,\n      lostQuantity: \"\",\n      comment: \"\",\n      quantity: initProductState.quantity\n    },\n    onSubmit: handleSubmit,\n    validationSchema: ProductFormValidation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, function (formProps) {\n    return React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, React.createElement(ProductStatusSelector, {\n      formikProps: formProps,\n      statuses: statuses,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    })), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"lostQuantity\",\n      label: \"Lost Quantity\",\n      formikFieldName: \"lostQuantity\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), React.createElement(FormikField, {\n      formikProps: formProps,\n      id: \"comment\",\n      label: \"Comment\",\n      formikFieldName: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), React.createElement(\"div\", {\n      className: \"btn-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Fix loss\"), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: onClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Cancel\")));\n  });\n});\nexport function ProductStatusSelector(props) {\n  var _this2 = this;\n\n  var formikProps = props.formikProps,\n      statuses = props.statuses;\n  return React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(InputLabel, {\n    style: {\n      fontSize: 13\n    },\n    id: \"status_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Select losses category\"), React.createElement(Select, {\n    labelId: \"status_label\",\n    name: \"productStatus\",\n    onChange: formikProps.handleChange,\n    value: formikProps.values[\"productStatus\"],\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, statuses.map(function (status) {\n    return React.createElement(MenuItem, {\n      key: status,\n      name: \"productStatus\",\n      value: status,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, status);\n  })), React.createElement(\"label\", {\n    style: {\n      color: \"#f50057\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, React.createElement(ErrorMessage, {\n    name: \"productStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/components/forms/act-form/products-form.js"],"names":["React","useState","Formik","Form","ErrorMessage","FormikField","Button","ProductFormValidation","InputLabel","Select","MenuItem","FormControl","makeStyles","props","initProductState","onSubmit","onClose","selectedStatus","setSelectedStatus","useStyles","theme","formControl","marginTop","minWidth","classes","handleSubmit","values","product","id","invoiceId","productStatus","lostQuantity","comment","currency","name","quantity","quantityMeasure","price","mass","massMeasure","idx","statuses","formProps","ProductStatusSelector","formikProps","fontSize","handleChange","map","status","color"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Formik, Form, ErrorMessage} from \"formik\";\r\nimport FormikField from \"../../roles/sysadmin/formik-field\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {ProductFormValidation} from \"../../parts/validation/act-form-validation\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nexport default (props) => {\r\n    const { initProductState, onSubmit, onClose } = props;\r\n    const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            marginTop: 20,\r\n            minWidth: \"100%\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (values) => {\r\n        const product = {\r\n            id: initProductState.id,\r\n            invoiceId: initProductState.invoiceId,\r\n            productStatus: values.productStatus,\r\n            lostQuantity: values.lostQuantity,\r\n            comment: values.comment,\r\n            currency: initProductState.currency,\r\n            name: initProductState.name,\r\n            quantity: initProductState.quantity,\r\n            quantityMeasure: initProductState.quantityMeasure,\r\n            price: initProductState.price,\r\n            mass: initProductState.mass,\r\n            massMeasure: initProductState.massMeasure,\r\n        };\r\n        product.idx = initProductState.idx;\r\n        onSubmit(product);\r\n    };\r\n\r\n    const statuses = ['SPOILED', 'STOLEN', 'CONFISCATED', 'DAMAGED_IN_CRASH'];\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n                productStatus: selectedStatus,\r\n                lostQuantity: \"\",\r\n                comment: \"\",\r\n                quantity: initProductState.quantity\r\n            }}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={ProductFormValidation}\r\n        >\r\n            {(formProps) => (\r\n                <Form>\r\n                    <FormControl className={classes.formControl}>\r\n                        <ProductStatusSelector formikProps={formProps} statuses={statuses}/>\r\n                    </FormControl>\r\n                    <FormikField\r\n                        formikProps={formProps}\r\n                        id={\"lostQuantity\"}\r\n                        label={\"Lost Quantity\"}\r\n                        formikFieldName={\"lostQuantity\"}\r\n                    />\r\n                    <FormikField\r\n                        formikProps={formProps}\r\n                        id={\"comment\"}\r\n                        label={\"Comment\"}\r\n                        formikFieldName={\"comment\"}\r\n                    />\r\n                    <div className=\"btn-row\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Fix loss\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color='primary'\r\n                            onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport function ProductStatusSelector(props) {\r\n    const {formikProps, statuses} = props;\r\n    return (\r\n        <React.Fragment>\r\n            <InputLabel style={{fontSize: 13}} id={\"status_label\"}>\r\n                Select losses category\r\n            </InputLabel>\r\n            <Select\r\n                labelId={\"status_label\"}\r\n                name={\"productStatus\"}\r\n                onChange={formikProps.handleChange}\r\n                value={formikProps.values[\"productStatus\"]}\r\n                fullWidth\r\n            >\r\n                {statuses.map(status => {\r\n                    return (\r\n                        <MenuItem\r\n                            key={status}\r\n                            name={\"productStatus\"}\r\n                            value={status}>\r\n                            {status}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n            <label style={{color: \"#f50057\"}}>\r\n                <ErrorMessage name={\"productStatus\"}/>\r\n            </label>\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}