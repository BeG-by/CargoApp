{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\projects\\\\cargo_app\\\\frontend\\\\src\\\\map\\\\search.js\";\nimport React from \"react\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxList, ComboboxOption, ComboboxPopover } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport \"./map-styles.css\";\nvar SEARCH_RADIUS = 300 * 1000;\nexport default function Search(props) {\n  var _this = this;\n\n  var center = props.center;\n  var onSelect = props.onSelect;\n\n  var _usePlacesAutocomplet = usePlacesAutocomplete({\n    requestsOptions: {\n      location: {\n        lat: function lat() {\n          return center.lat;\n        },\n        lng: function lng() {\n          return center.lng;\n        }\n      },\n      radius: SEARCH_RADIUS\n    }\n  }),\n      ready = _usePlacesAutocomplet.ready,\n      value = _usePlacesAutocomplet.value,\n      _usePlacesAutocomplet2 = _usePlacesAutocomplet.suggestions,\n      status = _usePlacesAutocomplet2.status,\n      data = _usePlacesAutocomplet2.data,\n      setValue = _usePlacesAutocomplet.setValue,\n      clearSuggestions = _usePlacesAutocomplet.clearSuggestions;\n\n  var handleLocationSelect = function handleLocationSelect(address) {\n    var result, _await$getLatLng, lat, lng;\n\n    return _regeneratorRuntime.async(function handleLocationSelect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setValue(address, false);\n            clearSuggestions();\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(getGeocode({\n              address: address\n            }));\n\n          case 5:\n            result = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getLatLng(result[0]));\n\n          case 8:\n            _await$getLatLng = _context.sent;\n            lat = _await$getLatLng.lat;\n            lng = _await$getLatLng.lng;\n            onSelect(lat, lng);\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(\"Cannot geocode\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 14]], Promise);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    setValue(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Combobox, {\n    onSelect: handleLocationSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInputChange,\n    disabled: !ready,\n    placeholder: \"Enter address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(ComboboxPopover, {\n    style: {\n      zIndex: 9999\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, status === \"OK\" && data.map(function (_ref) {\n    var id = _ref.id,\n        description = _ref.description;\n    return React.createElement(ComboboxOption, {\n      key: id,\n      value: description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 36\n      }\n    });\n  })))));\n}","map":{"version":3,"sources":["D:/projects/cargo_app/frontend/src/map/search.js"],"names":["React","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxList","ComboboxOption","ComboboxPopover","SEARCH_RADIUS","Search","props","center","onSelect","requestsOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","handleLocationSelect","address","result","console","log","handleInputChange","event","target","zIndex","map","id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\r\nimport {Combobox, ComboboxInput, ComboboxList, ComboboxOption, ComboboxPopover,} from \"@reach/combobox\";\r\n\r\nimport \"@reach/combobox/styles.css\";\r\nimport \"./map-styles.css\"\r\n\r\nconst SEARCH_RADIUS = 300 * 1000;   //in meters\r\n\r\nexport default function Search(props) {\r\n    const center = props.center;\r\n    const onSelect = props.onSelect;\r\n\r\n    const {ready, value, suggestions: {status, data}, setValue, clearSuggestions} = usePlacesAutocomplete({\r\n        requestsOptions: {\r\n            location: {lat: () => center.lat, lng: () => center.lng},\r\n            radius: SEARCH_RADIUS,\r\n        }\r\n    });\r\n\r\n    const handleLocationSelect = async (address) => {\r\n        setValue(address, false);\r\n        clearSuggestions();\r\n        try {\r\n            const result = await getGeocode({address});\r\n            const {lat, lng} = await getLatLng(result[0]);\r\n            onSelect(lat, lng);\r\n        } catch (e) {\r\n            console.log(\"Cannot geocode\")\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <Combobox onSelect={handleLocationSelect}>\r\n                <ComboboxInput\r\n                    value={value}\r\n                    onChange={handleInputChange}\r\n                    disabled={!ready}\r\n                    placeholder={\"Enter address\"}\r\n                />\r\n                <ComboboxPopover style={{zIndex: 9999}}>\r\n                    <ComboboxList >\r\n                        {status === \"OK\" && data.map(({id, description}) => {\r\n                            return <ComboboxOption key={id} value={description}/>\r\n                        })}\r\n                    </ComboboxList>\r\n                </ComboboxPopover>\r\n            </Combobox>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}