### database ###
spring.jpa.show-sql=false
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL82Dialect

spring.datasource.url=jdbc:postgresql://localhost:5432/cargo_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

### liquibase ###
spring.liquibase.change-log=classpath:liquibase/db.changelog-master.xml
spring.liquibase.url=jdbc:postgresql://localhost:5432/cargo_db
spring.liquibase.user=postgres
spring.liquibase.password=root

### logging ###
logging.level.root=info
logging.level.by.itechart.cargo.security.JwtTokenFilter=debug
logging.level.by.itechart.cargo.security.CustomAccessDeniedHandler=debug
logging.level.by.itechart.cargo.security.CustomAuthenticationEntryPoint=debug
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=debug
logging.file.name=log.log

### JWT ###
jwt.token.secret=cargo.itechart
jwt.token.expiration=14400
jwt.token.header=Authorization

### Mail ###
spring.mail.username=freight.application.itechart@gmail.com
spring.mail.password=cargo-app
### github password: cargo-app1

spring.quartz.properties.org.quartz.threadPool.threadCount = 10

link.registration=http://localhost:3000/registration
link.password=http://localhost:3000/password

### AWS S3 ###
aws.access_key_id=access_key_id_mock
aws.secret_access_key=secret_access_key_mock
aws.s3.bucket=bucket_name
aws.s3.region=eu-central-1
aws.s3.postfix="_cargo_application"

### Redis ###
redis.topic=cargo-email

### OAuth2 ###
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user/emails

spring.security.oauth2.client.registration.github.client-id=40f455e6f285b2c82725
spring.security.oauth2.client.registration.github.client-secret=3f8276e21bc29112e1324c106b8b2255af9f785d
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/v1/api/auth/code
spring.security.oauth2.client.registration.github.scope=user:email

auth2.jwt.redirect-uri=http://localhost:3000/jwt-parser
auth2.denied.redirect-uri=http://localhost:3000/error-oauth-denied